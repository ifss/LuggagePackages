<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>comment</key>
	<string>The name of the requested right is matched against the keys.  An exact match has priority, otherwise the longest match from the start is used.	Note that the right will only match wildcard rules (ending in a ".") during this reduction.

allow rule: this is always allowed
&lt;key&gt;com.apple.TestApp.benign&lt;/key&gt;
&lt;string&gt;allow&lt;/string&gt;

deny rule: this is always denied
&lt;key&gt;com.apple.TestApp.dangerous&lt;/key&gt;
&lt;string&gt;deny&lt;/string&gt;

user rule: successful authentication as a user in the specified group(5) allows the associated right.

The shared property specifies whether a credential generated on success is shared with other apps (i.e., those in the same "session"). This property defaults to false if not specified.

The timeout property specifies the maximum age of a (cached/shared) credential accepted for this rule.

The allow-root property specifies whether a right should be allowed automatically if the requesting process is running with uid == 0.  This defaults to false if not specified.

See remaining rules for examples.
</string>
	<key>rights</key>
	<dict>
		<key></key>
		<dict>
			<key>class</key>
			<string>rule</string>
			<key>comment</key>
			<string>Matches otherwise unmatched rights (i.e., is a default).</string>
			<key>rule</key>
			<string>default</string>
		</dict>
		<key>com.apple.</key>
		<dict>
			<key>rule</key>
			<string>default</string>
		</dict>
		<key>com.apple.CoreRAID.admin</key>
		<dict>
			<key>allow-root</key>
			<true/>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>Used by CoreRAID to allow access to administration functions of RAID devices</string>
			<key>group</key>
			<string>admin</string>
			<key>shared</key>
			<false/>
		</dict>
		<key>com.apple.DiskManagement.</key>
		<dict>
			<key>class</key>
			<string>rule</string>
			<key>comment</key>
			<string>Used by diskmanagementd to allow access to its privileged functions</string>
			<key>k-of-n</key>
			<integer>1</integer>
			<key>rule</key>
			<array>
				<string>is-root</string>
				<string>is-admin</string>
				<string>default</string>
			</array>
			<key>shared</key>
			<true/>
		</dict>
		<key>com.apple.Safari.parental-controls</key>
		<dict>
			<key>allow-root</key>
			<true/>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>Checked when changing parental controls for Safari.</string>
			<key>group</key>
			<string>admin</string>
			<key>shared</key>
			<false/>
			<key>timeout</key>
			<integer>0</integer>
		</dict>
		<key>com.apple.ServiceManagement.blesshelper</key>
		<dict>
			<key>class</key>
			<string>rule</string>
			<key>comment</key>
			<string>Used by the ServiceManagement framework to add a privileged helper tool to the system launchd.</string>
			<key>k-of-n</key>
			<integer>1</integer>
			<key>rule</key>
			<array>
				<string>is-root</string>
				<string>authenticate-admin-30</string>
			</array>
		</dict>
		<key>com.apple.ServiceManagement.daemons.modify</key>
		<dict>
			<key>class</key>
			<string>rule</string>
			<key>comment</key>
			<string>Used by the ServiceManagement framework to make changes to the system launchd's set of daemons.</string>
			<key>k-of-n</key>
			<integer>1</integer>
			<key>rule</key>
			<array>
				<string>is-root</string>
				<string>authenticate-admin-30</string>
			</array>
		</dict>
		<key>com.apple.ZFSManager.</key>
		<dict>
			<key>class</key>
			<string>rule</string>
			<key>comment</key>
			<string>Used by zfsmanager to allow access to destructive zfs functions</string>
			<key>k-of-n</key>
			<integer>1</integer>
			<key>rule</key>
			<array>
				<string>is-root</string>
				<string>is-admin</string>
				<string>default</string>
			</array>
			<key>shared</key>
			<true/>
		</dict>
		<key>com.apple.activitymonitor.kill</key>
		<dict>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>Used by Activity Monitor to authorize killing processes not owned by the user.</string>
			<key>group</key>
			<string>admin</string>
			<key>shared</key>
			<false/>
			<key>timeout</key>
			<integer>0</integer>
		</dict>
		<key>com.apple.appserver.privilege.admin</key>
		<dict>
			<key>class</key>
			<string>rule</string>
			<key>comment</key>
			<string>For administrative access to the Application Server management tool.</string>
			<key>rule</key>
			<string>appserver-admin</string>
		</dict>
		<key>com.apple.appserver.privilege.user</key>
		<dict>
			<key>class</key>
			<string>rule</string>
			<key>comment</key>
			<string>For user access to the Application Server management tool.</string>
			<key>k-of-n</key>
			<integer>1</integer>
			<key>rule</key>
			<array>
				<string>appserver-admin</string>
				<string>appserver-user</string>
			</array>
		</dict>
		<key>com.apple.builtin.confirm-access</key>
		<dict>
			<key>class</key>
			<string>evaluate-mechanisms</string>
			<key>mechanisms</key>
			<array>
				<string>builtin:confirm-access</string>
			</array>
			<key>tries</key>
			<integer>1</integer>
		</dict>
		<key>com.apple.builtin.confirm-access-password</key>
		<dict>
			<key>class</key>
			<string>evaluate-mechanisms</string>
			<key>mechanisms</key>
			<array>
				<string>builtin:confirm-access-password</string>
			</array>
		</dict>
		<key>com.apple.builtin.generic-new-passphrase</key>
		<dict>
			<key>class</key>
			<string>evaluate-mechanisms</string>
			<key>mechanisms</key>
			<array>
				<string>builtin:generic-new-passphrase</string>
			</array>
		</dict>
		<key>com.apple.builtin.generic-unlock</key>
		<dict>
			<key>class</key>
			<string>evaluate-mechanisms</string>
			<key>mechanisms</key>
			<array>
				<string>builtin:generic-unlock</string>
			</array>
		</dict>
		<key>com.apple.dashboard.advisory.allow</key>
		<dict>
			<key>class</key>
			<string>user</string>
			<key>group</key>
			<string>admin</string>
			<key>shared</key>
			<false/>
			<key>timeout</key>
			<integer>300</integer>
		</dict>
		<key>com.apple.desktopservices</key>
		<dict>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>For privileged file operations from within the Finder.</string>
			<key>group</key>
			<string>admin</string>
			<key>shared</key>
			<false/>
			<key>timeout</key>
			<integer>0</integer>
		</dict>
		<key>com.apple.docset.install</key>
		<dict>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>Used by Xcode to restrict access to a daemon it uses to install and update documentation sets.</string>
			<key>group</key>
			<string>admin</string>
			<key>shared</key>
			<false/>
		</dict>
		<key>com.apple.familycontrols.loginwindow.override</key>
		<dict>
			<key>class</key>
			<string>evaluate-mechanisms</string>
			<key>comment</key>
			<string>This right is checked when overriding a parental control restriction</string>
			<key>mechanisms</key>
			<array>
				<string>FamilyControls:invoke</string>
				<string>FamilyControls:authenticate</string>
				<string>FamilyControls:success</string>
			</array>
		</dict>
		<key>com.apple.familycontrols.override</key>
		<dict>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>This right is checked when overriding parental controls from a user account</string>
			<key>group</key>
			<string>admin</string>
			<key>shared</key>
			<false/>
			<key>timeout</key>
			<integer>5</integer>
		</dict>
		<key>com.apple.pcastagentconfigd.</key>
		<dict>
			<key>allow-root</key>
			<true/>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>Wildcard for rights checked by Podcast Producer when making changes to your camera binding.</string>
			<key>group</key>
			<string>admin</string>
			<key>shared</key>
			<false/>
		</dict>
		<key>com.apple.server.admin.streaming</key>
		<dict>
			<key>allow-root</key>
			<true/>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>For making administrative requests to the QuickTime Streaming Server.</string>
			<key>group</key>
			<string>admin</string>
			<key>shared</key>
			<false/>
			<key>timeout</key>
			<integer>0</integer>
		</dict>
		<key>com.apple.trust-settings.admin</key>
		<dict>
			<key>allow-root</key>
			<true/>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>For modifying Trust Settings in the Local Admin domain.</string>
			<key>group</key>
			<string>admin</string>
		</dict>
		<key>com.apple.trust-settings.user</key>
		<dict>
			<key>comment</key>
			<string>For modifying per-user Trust Settings.</string>
			<key>rule</key>
			<string>authenticate-session-owner</string>
		</dict>
		<key>com.barebones.InstallTool</key>
		<dict>
			<key>default-prompt</key>
			<dict>
				<key></key>
				<string>InstallToolPrompt</string>
			</dict>
			<key>rule</key>
			<string>default</string>
		</dict>
		<key>com.barebones.InstallTool.10_6</key>
		<dict>
			<key>default-prompt</key>
			<dict>
				<key></key>
				<string>InstallToolPrompt10_6</string>
			</dict>
			<key>rule</key>
			<string>default</string>
		</dict>
		<key>com.barebones.InstallTool.9_3for10_6</key>
		<dict>
			<key>default-prompt</key>
			<dict>
				<key></key>
				<string>InstallToolPrompt10_6</string>
			</dict>
			<key>rule</key>
			<string>default</string>
		</dict>
		<key>com.barebones.ReadFile</key>
		<dict>
			<key>default-prompt</key>
			<dict>
				<key></key>
				<string>ReadFilePrompt</string>
			</dict>
			<key>rule</key>
			<string>default</string>
		</dict>
		<key>com.barebones.ReadFile.10_6</key>
		<dict>
			<key>default-prompt</key>
			<dict>
				<key></key>
				<string>ReadFilePrompt10_6</string>
			</dict>
			<key>rule</key>
			<string>default</string>
		</dict>
		<key>com.barebones.ReadFile.9_3for10_6</key>
		<dict>
			<key>default-prompt</key>
			<dict>
				<key></key>
				<string>ReadFilePrompt10_6</string>
			</dict>
			<key>rule</key>
			<string>default</string>
		</dict>
		<key>com.barebones.WriteBackupFile</key>
		<dict>
			<key>default-prompt</key>
			<dict>
				<key></key>
				<string>WriteBackupFilePrompt</string>
			</dict>
			<key>rule</key>
			<string>default</string>
		</dict>
		<key>com.barebones.WriteBackupFile.10_6</key>
		<dict>
			<key>default-prompt</key>
			<dict>
				<key></key>
				<string>WriteBackupFilePrompt10_6</string>
			</dict>
			<key>rule</key>
			<string>default</string>
		</dict>
		<key>com.barebones.WriteBackupFile.9_3for10_6</key>
		<dict>
			<key>default-prompt</key>
			<dict>
				<key></key>
				<string>WriteBackupFilePrompt10_6</string>
			</dict>
			<key>rule</key>
			<string>default</string>
		</dict>
		<key>com.barebones.WriteFile</key>
		<dict>
			<key>default-prompt</key>
			<dict>
				<key></key>
				<string>WriteFilePrompt</string>
			</dict>
			<key>rule</key>
			<string>default</string>
		</dict>
		<key>com.barebones.WriteFile.10_6</key>
		<dict>
			<key>default-prompt</key>
			<dict>
				<key></key>
				<string>WriteFilePrompt10_6</string>
			</dict>
			<key>rule</key>
			<string>default</string>
		</dict>
		<key>com.barebones.WriteFile.9_3for10_6</key>
		<dict>
			<key>default-prompt</key>
			<dict>
				<key></key>
				<string>WriteFilePrompt10_6</string>
			</dict>
			<key>rule</key>
			<string>default</string>
		</dict>
		<key>config.add.</key>
		<dict>
			<key>class</key>
			<string>allow</string>
			<key>comment</key>
			<string>Wildcard right for adding rights.  Anyone is allowed to add any (non-wildcard) rights.</string>
		</dict>
		<key>config.config.</key>
		<dict>
			<key>class</key>
			<string>deny</string>
			<key>comment</key>
			<string>Wildcard right for any change to meta-rights for db modification.  Not allowed programmatically (just edit this file).</string>
		</dict>
		<key>config.modify.</key>
		<dict>
			<key>class</key>
			<string>rule</string>
			<key>comment</key>
			<string>Wildcard right for modifying rights.  Admins are allowed to modify any (non-wildcard) rights.  Root does not require authentication.</string>
			<key>k-of-n</key>
			<integer>1</integer>
			<key>rule</key>
			<array>
				<string>is-root</string>
				<string>authenticate-admin</string>
			</array>
		</dict>
		<key>config.remove.</key>
		<dict>
			<key>class</key>
			<string>rule</string>
			<key>comment</key>
			<string>Wildcard right for deleting rights.  Admins are allowed to delete any (non-wildcard) rights.  Root does not require authentication.</string>
			<key>k-of-n</key>
			<integer>1</integer>
			<key>rule</key>
			<array>
				<string>is-root</string>
				<string>authenticate-admin</string>
			</array>
		</dict>
		<key>config.remove.system.</key>
		<dict>
			<key>class</key>
			<string>deny</string>
			<key>comment</key>
			<string>Wildcard right for deleting system rights.</string>
		</dict>
		<key>sys.openfile.</key>
		<dict>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>See authopen(1) for information on the use of this right.</string>
			<key>group</key>
			<string>admin</string>
			<key>shared</key>
			<false/>
			<key>timeout</key>
			<integer>300</integer>
		</dict>
		<key>system.</key>
		<dict>
			<key>rule</key>
			<string>default</string>
		</dict>
		<key>system.burn</key>
		<dict>
			<key>class</key>
			<string>allow</string>
			<key>comment</key>
			<string>For burning media.</string>
		</dict>
		<key>system.device.dvd.setregion.initial</key>
		<dict>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>Used by the DVD player to set the region code the first time.  Note that changing the region code after it has been set requires a different right (system.device.dvd.setregion.change).</string>
			<key>group</key>
			<string>admin</string>
			<key>shared</key>
			<true/>
		</dict>
		<key>system.global-login-items.</key>
		<dict>
			<key>class</key>
			<string>rule</string>
			<key>k-of-n</key>
			<integer>1</integer>
			<key>rule</key>
			<array>
				<string>is-admin</string>
				<string>default</string>
			</array>
		</dict>
		<key>system.identity.write.</key>
		<dict>
			<key>class</key>
			<string>rule</string>
			<key>comment</key>
			<string>For creating, changing or deleting local user accounts and groups.</string>
			<key>k-of-n</key>
			<integer>1</integer>
			<key>rule</key>
			<array>
				<string>is-admin</string>
				<string>authenticate-admin</string>
			</array>
		</dict>
		<key>system.identity.write.credential</key>
		<dict>
			<key>class</key>
			<string>rule</string>
			<key>comment</key>
			<string>Checked when changing authentication credentials (password or certificate) for a local user account.</string>
			<key>rule</key>
			<string>default</string>
		</dict>
		<key>system.identity.write.self</key>
		<dict>
			<key>authenticate-user</key>
			<false/>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>Checked when changing authentication credentials (password or certificate) for the current user's account.</string>
			<key>session-owner</key>
			<true/>
		</dict>
		<key>system.install.admin.user</key>
		<dict>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>Checked when user is installing in admin domain (/Applications).</string>
			<key>group</key>
			<string>admin</string>
			<key>shared</key>
			<false/>
			<key>timeout</key>
			<integer>300</integer>
		</dict>
		<key>system.install.root.admin</key>
		<dict>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>Checked when admin is installing in root domain (/System).</string>
			<key>group</key>
			<string>admin</string>
			<key>shared</key>
			<false/>
			<key>timeout</key>
			<integer>300</integer>
		</dict>
		<key>system.install.root.user</key>
		<dict>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>Checked when user is installing in root domain (/System).</string>
			<key>group</key>
			<string>admin</string>
			<key>shared</key>
			<false/>
			<key>timeout</key>
			<integer>300</integer>
		</dict>
		<key>system.keychain.create.loginkc</key>
		<dict>
			<key>allow-root</key>
			<false/>
			<key>class</key>
			<string>evaluate-mechanisms</string>
			<key>comment</key>
			<string>Used by the Security framework when you add an item to an unconfigured default keychain.</string>
			<key>mechanisms</key>
			<array>
				<string>loginKC:queryCreate</string>
				<string>loginKC:showPasswordUI</string>
				<string>authinternal</string>
			</array>
			<key>session-owner</key>
			<true/>
			<key>shared</key>
			<false/>
		</dict>
		<key>system.keychain.modify</key>
		<dict>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>Used by Keychain Access when editing a system keychain.</string>
			<key>group</key>
			<string>admin</string>
			<key>shared</key>
			<true/>
			<key>timeout</key>
			<integer>30</integer>
		</dict>
		<key>system.login.console</key>
		<dict>
			<key>class</key>
			<string>evaluate-mechanisms</string>
			<key>comment</key>
			<string>Login mechanism based rule.  Not for general use, yet.</string>
			<key>mechanisms</key>
			<array>
				<string>builtin:smartcard-sniffer,privileged</string>
				<string>loginwindow:login</string>
				<string>builtin:reset-password,privileged</string>
				<string>builtin:auto-login,privileged</string>
				<string>builtin:authenticate,privileged</string>
				<string>loginwindow:success</string>
				<string>HomeDirMechanism:login,privileged</string>
				<string>HomeDirMechanism:status</string>
				<string>MCXMechanism:login</string>
				<string>loginwindow:done</string>
			</array>
		</dict>
		<key>system.login.done</key>
		<dict>
			<key>class</key>
			<string>evaluate-mechanisms</string>
			<key>mechanisms</key>
			<array/>
		</dict>
		<key>system.login.screensaver</key>
		<dict>
			<key>class</key>
			<string>rule</string>
			<key>comment</key>
			<string>The owner or any administrator can unlock the screensaver.</string>
			<key>rule</key>
			<string>authenticate-session-owner-or-admin</string>
		</dict>
		<key>system.login.tty</key>
		<dict>
			<key>class</key>
			<string>evaluate-mechanisms</string>
			<key>mechanisms</key>
			<array>
				<string>push_hints_to_context</string>
				<string>authinternal</string>
			</array>
			<key>tries</key>
			<integer>1</integer>
		</dict>
		<key>system.preferences</key>
		<dict>
			<key>allow-root</key>
			<true/>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>Checked by the Admin framework when making changes to certain System Preferences.</string>
			<key>group</key>
			<string>admin</string>
			<key>shared</key>
			<true/>
		</dict>
		<key>system.preferences.accessibility</key>
		<dict>
			<key>allow-root</key>
			<true/>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>Checked by the Admin framework when enabling or disabling the Accessibility APIs.</string>
			<key>group</key>
			<string>admin</string>
			<key>shared</key>
			<false/>
			<key>timeout</key>
			<integer>0</integer>
		</dict>
		<key>system.preferences.accounts</key>
		<dict>
			<key>allow-root</key>
			<true/>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>Checked by the Admin framework when making changes to the Accounts preference pane.</string>
			<key>group</key>
			<string>admin</string>
			<key>shared</key>
			<false/>
		</dict>
		<key>system.preferences.parental-controls</key>
		<dict>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>Checked when making changes to the Parental Controls preference pane.</string>
			<key>group</key>
			<string>admin</string>
			<key>shared</key>
			<false/>
		</dict>
		<key>system.preferences.security</key>
		<dict>
			<key>allow-root</key>
			<true/>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>Checked by the Admin framework when making changes to the Security preference pane.</string>
			<key>group</key>
			<string>admin</string>
			<key>shared</key>
			<false/>
		</dict>
		<key>system.print.admin</key>
		<dict>
			<key>allow-root</key>
			<true/>
			<key>class</key>
			<string>user</string>
			<key>group</key>
			<string>lpadmin</string>
			<key>shared</key>
			<true/>
		</dict>
		<key>system.print.operator</key>
		<dict>
			<key>allow-root</key>
			<true/>
			<key>class</key>
			<string>user</string>
			<key>group</key>
			<string>_lpoperator</string>
			<key>shared</key>
			<true/>
		</dict>
		<key>system.printingmanager</key>
		<dict>
			<key>class</key>
			<string>rule</string>
			<key>comment</key>
			<string>For printing to locked printers.</string>
			<key>rule</key>
			<string>authenticate-admin</string>
		</dict>
		<key>system.privilege.admin</key>
		<dict>
			<key>allow-root</key>
			<true/>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>Used by AuthorizationExecuteWithPrivileges(...).  
		AuthorizationExecuteWithPrivileges() is used by programs requesting
		to run a tool as root (e.g., some installers).</string>
			<key>group</key>
			<string>admin</string>
			<key>shared</key>
			<false/>
			<key>timeout</key>
			<integer>300</integer>
		</dict>
		<key>system.privilege.taskport</key>
		<dict>
			<key>allow-root</key>
			<false/>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>Used by task_for_pid(...).
		Task_for_pid is called by programs requesting full control over another program
		for things like debugging or performance analysis. This authorization only applies
		if the requesting and target programs are run by the same user; it will never
		authorize access to the program of another user.  WARNING: administrators are advised not to modify this right.</string>
			<key>group</key>
			<string>_developer</string>
			<key>shared</key>
			<true/>
			<key>timeout</key>
			<integer>36000</integer>
		</dict>
		<key>system.privilege.taskport.debug</key>
		<dict>
			<key>allow-root</key>
			<false/>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>For use by Apple.  WARNING: administrators are advised
            not to modify this right.</string>
			<key>group</key>
			<string>_developer</string>
			<key>shared</key>
			<true/>
			<key>timeout</key>
			<integer>36000</integer>
		</dict>
		<key>system.privilege.taskport.safe</key>
		<dict>
			<key>class</key>
			<string>allow</string>
			<key>comment</key>
			<string>For use by Apple.</string>
		</dict>
		<key>system.restart</key>
		<dict>
			<key>class</key>
			<string>evaluate-mechanisms</string>
			<key>comment</key>
			<string>Checked if the foreground console user tries to restart the system while other users are logged in via fast-user switching.</string>
			<key>mechanisms</key>
			<array>
				<string>builtin:smartcard-sniffer,privileged</string>
				<string>RestartAuthorization:restart</string>
				<string>builtin:authenticate,privileged</string>
				<string>RestartAuthorization:success</string>
			</array>
		</dict>
		<key>system.services.directory.configure</key>
		<dict>
			<key>allow-root</key>
			<true/>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>For making Directory Services changes.</string>
			<key>group</key>
			<string>admin</string>
			<key>shared</key>
			<true/>
			<key>timeout</key>
			<integer>300</integer>
		</dict>
		<key>system.sharepoints.</key>
		<dict>
			<key>allow-root</key>
			<true/>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>Checked when making changes to the Sharepoints.</string>
			<key>group</key>
			<string>admin</string>
			<key>shared</key>
			<true/>
		</dict>
		<key>system.shutdown</key>
		<dict>
			<key>class</key>
			<string>evaluate-mechanisms</string>
			<key>comment</key>
			<string>Checked if the foreground console user tries to shut down the system while other users are logged in via fast-user switching.</string>
			<key>mechanisms</key>
			<array>
				<string>builtin:smartcard-sniffer,privileged</string>
				<string>RestartAuthorization:shutdown</string>
				<string>builtin:authenticate,privileged</string>
				<string>RestartAuthorization:success</string>
			</array>
		</dict>
	</dict>
	<key>rules</key>
	<dict>
		<key>allow</key>
		<dict>
			<key>class</key>
			<string>allow</string>
			<key>comment</key>
			<string>Allow anyone.</string>
		</dict>
		<key>appserver-admin</key>
		<dict>
			<key>class</key>
			<string>user</string>
			<key>group</key>
			<string>appserveradm</string>
		</dict>
		<key>appserver-user</key>
		<dict>
			<key>class</key>
			<string>user</string>
			<key>group</key>
			<string>appserverusr</string>
		</dict>
		<key>authenticate</key>
		<dict>
			<key>class</key>
			<string>evaluate-mechanisms</string>
			<key>mechanisms</key>
			<array>
				<string>builtin:smartcard-sniffer,privileged</string>
				<string>builtin:authenticate</string>
				<string>builtin:authenticate,privileged</string>
			</array>
		</dict>
		<key>authenticate-admin</key>
		<dict>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>Authenticate as an administrator.</string>
			<key>group</key>
			<string>admin</string>
			<key>shared</key>
			<true/>
			<key>timeout</key>
			<integer>0</integer>
		</dict>
		<key>authenticate-admin-30</key>
		<dict>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>Like the default rule, but 
            credentials remain valid for only 30 seconds after they've 
            been obtained.  An acquired credential is shared by all clients.
			</string>
			<key>group</key>
			<string>admin</string>
			<key>shared</key>
			<true/>
			<key>timeout</key>
			<integer>30</integer>
		</dict>
		<key>authenticate-developer</key>
		<dict>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>Authenticate as a developer.</string>
			<key>group</key>
			<string>_developer</string>
			<key>shared</key>
			<true/>
			<key>timeout</key>
			<integer>36000</integer>
		</dict>
		<key>authenticate-session-owner</key>
		<dict>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>Authenticate as the session owner.</string>
			<key>session-owner</key>
			<true/>
		</dict>
		<key>authenticate-session-owner-or-admin</key>
		<dict>
			<key>allow-root</key>
			<false/>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>Authenticate either as the owner or as an administrator.</string>
			<key>group</key>
			<string>admin</string>
			<key>session-owner</key>
			<true/>
			<key>shared</key>
			<false/>
		</dict>
		<key>authenticate-session-user</key>
		<dict>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>Same as authenticate-session-owner.</string>
			<key>session-owner</key>
			<true/>
		</dict>
		<key>default</key>
		<dict>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>Default rule.	
            Credentials remain valid for 5 minutes after they've been obtained. 
            An acquired credential is shared by all clients.
			</string>
			<key>group</key>
			<string>admin</string>
			<key>shared</key>
			<true/>
			<key>timeout</key>
			<integer>300</integer>
		</dict>
		<key>is-admin</key>
		<dict>
			<key>authenticate-user</key>
			<false/>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>Verify that the user asking for authorization is an administrator.</string>
			<key>group</key>
			<string>admin</string>
			<key>shared</key>
			<string>true</string>
		</dict>
		<key>is-developer</key>
		<dict>
			<key>authenticate-user</key>
			<false/>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>Verify that the user asking for authorization is a developer.</string>
			<key>group</key>
			<string>_developer</string>
		</dict>
		<key>is-root</key>
		<dict>
			<key>allow-root</key>
			<true/>
			<key>authenticate-user</key>
			<false/>
			<key>class</key>
			<string>user</string>
			<key>comment</key>
			<string>Verify that the process that created this AuthorizationRef is running as root.</string>
		</dict>
	</dict>
</dict>
</plist>
