*PPD-Adobe: "4.3"
*% Adobe Systems PostScript(R) Printer Description File
*% Copyright 1987-1996 Adobe Systems Incorporated. 
*% All Rights Reserved. 
*% Permission is granted for redistribution of this file as
*% long as this copyright notice is intact and the contents
*% of the file is not altered in any way from its original form.
*% End of Copyright statement
*FileVersion: "3.1"
*FormatVersion: "4.3"
*LanguageEncoding: ISOLatin1
*LanguageVersion: English
*Manufacturer: "FX"
*Product: "(ApeosPort-IV C5570 )"
*PCFileName: "FXKYDEX2.PPD"
*PSVersion: "(3017.104) 8"
*ShortNickName: "FX ApeosPort-IV C5570 PS"
*ModelName: "FX ApeosPort-IV C5570 v3017.104 PS"
*NickName: "FX ApeosPort-IV C5570 v3017.104 PS"
*cupsSingleFile: True
**FXXCDFSetting: "/Library/Printers/FujiXerox/CDFs/ApeosPort-IVC44705570E.cdf"
*FXXPrintTypeSettings: "Default03-Type14"
*FXXAccountingSettings: "Default00-Type01"
*FXXImageOptionsSettings: "Default00-Type06"
*FXXFeaturesSettings: "Default00"
*FXXMailBoxSettings: "200-HighSpeed"
*FXXWatermarkSettings: "Default00-Type01"
*FXXLayoutSettings: "Default00-Type01"
*cupsFilter: "application/vnd.cups-postscript 0 /Library/Printers/FujiXerox/Filter/FXPSACEFilter"
*APDialogExtension: "/Library/Printers/FujiXerox/PDEs/FXPSACEAccount.plugin"
*APDialogExtension: "/Library/Printers/FujiXerox/PDEs/FXPSACEImageOptions.plugin"
*APDialogExtension: "/Library/Printers/FujiXerox/PDEs/FXPSACEWatermark.plugin"
*APDialogExtension: "/Library/Printers/FujiXerox/PDEs/FXPSACEFeatures.plugin"
*JobPatchFile 0: ""
*OpenGroup: InstallableOptions/Options Installed
*OpenUI *FXOutputOptions/Output Options: PickOne
*DefaultFXOutputOptions: None
*FXOutputOptions None/Not Installed: ""
*FXOutputOptions InnerOutputTray/Inner Output Tray: ""
*FXOutputOptions FinisherTypeSB/Finisher Type B: ""
*FXOutputOptions FinisherTypeSB2and4Holes/Finisher Type B (2 Holes / 4 Holes): ""
*FXOutputOptions FinisherTypeSB2and3Holes/Finisher Type B (2 Holes / 3 Holes (US Standard)): ""
*FXOutputOptions FinisherTypeC2and4Holes/Finisher Type C (2 Holes / 4 Holes): ""
*FXOutputOptions FinisherTypeC3Holes/Finisher Type C (3 Holes): ""
*?FXOutputOptions: "
save
  currentpagedevice /OutputAttributes get dup 30 known {
    pop
    /Custom /ProcSet findresource /engineoptions get exec /Finisher 2 copy known {
      get exec dup (C) eq {
        pop 2 dict
        dup 8 (FinisherTypeC3Holes) put
        dup 20 (FinisherTypeC2and4Holes) put
        /Custom /ProcSet findresource /engineoptions get exec /NumHoles get
        2 copy known {get}{pop pop (Unknown)} ifelse
      }{
        dup (B1) eq {
          pop 3 dict
          dup 0 (FinisherTypeSB) put
          dup 12 (FinisherTypeSB2and3Holes) put
          dup 20 (FinisherTypeSB2and4Holes) put
          /Custom /ProcSet findresource /engineoptions get exec /NumHoles get
          2 copy known {get}{pop pop (Unknown)} ifelse
        }{
          (A) eq {
            (FinisherTypeA)
          }{ (Unknown) } ifelse
        } ifelse
      } ifelse
    }{ pop pop  (Unknown) } ifelse
  }{
    1 known {
      (InnerOutputTray)
    }{
      (None)
    } ifelse
  } ifelse
  = flush
  restore
"
*End
*CloseUI: *FXOutputOptions

*OpenUI *FXBookletTray/Right Bottom Tray (Booklet Maker): Boolean
*DefaultFXBookletTray: False
*FXBookletTray False/Not Installed: ""
*FXBookletTray True/Installed: ""
*?FXBookletTray: "save currentpagedevice/OutputAttributes get 50 known{(True)}{(False)}ifelse = flush restore"
*CloseUI: *FXBookletTray

*OpenUI *FXSideOutputTray/Left Top Tray (Face Up): Boolean
*DefaultFXSideOutputTray: False
*FXSideOutputTray False/Not Installed: ""
*FXSideOutputTray True/Installed: ""
*?FXSideOutputTray: "save currentpagedevice/OutputAttributes get 2 known{(True)}{(False)}ifelse = flush restore"
*CloseUI: *FXSideOutputTray

*OpenUI *FXPaperTrayConfiguration/Paper Tray Configuration: PickOne
*DefaultFXPaperTrayConfiguration: 4Tray
*FXPaperTrayConfiguration 4Tray/4-Tray: ""
*FXPaperTrayConfiguration 4TrayTTM/4-Tray (High Capacity): ""
*?FXPaperTrayConfiguration: "
save
    currentpagedevice
    /InputAttributes get length 2 sub
    [(None)(Unknown)(Unknown)(4Tray)] exch {get} stopped {pop pop (Unknown)}
    {
      /Custom /ProcSet resourcestatus 
      { pop pop /Custom /ProcSet findresource
        dup /engineoptions known {
          /engineoptions get exec
          /TandemTray 2 copy known {get}{pop pop false} ifelse
        }
        { pop false } ifelse
        {(4Tray) eq {(4TrayTTM)}{(Unknown)}ifelse} if
      } if
    } ifelse
    = flush
restore
"
*End
*CloseUI: *FXPaperTrayConfiguration

*OpenUI *FXHighCapacityFeeder/High Capacity Feeder: Boolean
*DefaultFXHighCapacityFeeder: False
*FXHighCapacityFeeder False/Not Installed: ""
*FXHighCapacityFeeder True/Available: ""
*?FXHighCapacityFeeder: "save currentpagedevice/InputAttributes get 4 known{(True)}{(False)}ifelse = flush restore"
*CloseUI: *FXHighCapacityFeeder

*OpenUI *FXRegionalPaperSetting/Paper Size Settings: PickOne
*DefaultFXRegionalPaperSetting: Kai
*FXRegionalPaperSetting Mm/AB Series: ""
*FXRegionalPaperSetting Kai/AB Series (8K / 16K): ""
*FXRegionalPaperSetting Legal13/AB Series (8 x 13"): ""
*FXRegionalPaperSetting Legal/AB Series (8 x 13" / 8 x 14"): ""
*FXRegionalPaperSetting Inch/Inch Series: ""
*?FXRegionalPaperSetting: "
save
/Custom /ProcSet resourcestatus
 { pop pop /Custom /ProcSet findresource dup /currentpapersizegroup known
   {
      /currentpapersizegroup get exec      
      dup 0 eq{(Unknown) exch} if
      dup 1 eq{(Mm) exch} if
      dup 2 eq{(Inch) exch} if
      dup 3 eq{(Legal13) exch} if
      dup 4 eq{(Kai) exch} if
      dup 5 eq{(Legal) exch} if
      pop
   }
   {
       pop (Unknown)
   } ifelse
 }if
= flush
restore
"
*End
*CloseUI: *FXRegionalPaperSetting

*OpenUI *FXSwitchPaperSize/Switch Paper Size (8K / 16K): PickOne
*DefaultFXSwitchPaperSize: Taiwan
*FXSwitchPaperSize Taiwan/Traditional Chinese: ""
*FXSwitchPaperSize GCO/Simplified Chinese: ""
*?FXSwitchPaperSize: "
	save mark {
	       /Custom /ProcSet findresource /currentcountrycode get exec
	       dup 344 eq exch 156 eq or {(GCO)}{(Taiwan)} ifelse = flush
        } stopped {(Unknown)= flush} if cleartomark restore

"
*End
*CloseUI: *FXSwitchPaperSize

*OpenUI *FXMinDigitPasscode/Minimum Passcode Length: PickOne
*DefaultFXMinDigitPasscode: 0
*FXMinDigitPasscode 0/0: ""
*FXMinDigitPasscode 1/1: ""
*FXMinDigitPasscode 2/2: ""
*FXMinDigitPasscode 3/3: ""
*FXMinDigitPasscode 4/4: ""
*FXMinDigitPasscode 5/5: ""
*FXMinDigitPasscode 6/6: ""
*FXMinDigitPasscode 7/7: ""
*FXMinDigitPasscode 8/8: ""
*FXMinDigitPasscode 9/9: ""
*FXMinDigitPasscode 10/10: ""
*FXMinDigitPasscode 11/11: ""
*FXMinDigitPasscode 12/12: ""
*?FXMinDigitPasscode: "
    save mark {
        /nstr 2 string def
        /Custom /ProcSet findresource /currentminpasswordlength get exec
        dup dup 0 ge exch 12 le and {nstr cvs}{(Unknown)} ifelse = flush
    } stopped {(Unknown) = flush} if
    cleartomark restore
"
*End
*CloseUI: *FXMinDigitPasscode

*OpenUI *FXSelectID/Customize User Prompts: PickOne
*DefaultFXSelectID: None
*FXSelectID UserID_AccountID/Display User ID and Account ID Prompts: ""
*FXSelectID UserID/Display User ID Prompt Only: ""
*FXSelectID AccountID/Display Account ID Prompt Only: ""
*FXSelectID None/No need to enter: ""
*?FXSelectID: "
    save
    /Custom /ProcSet resourcestatus {
        pop pop
        /Custom /ProcSet findresource /currentuserprompts 2 copy known {
            get exec
            dup -1 le {(Unknown) exch} if
            dup  0 eq {(UserID_AccountID) exch} if
            dup  1 eq {(UserID) exch} if
            dup  2 eq {(AccountID) exch} if
            dup  3 eq {(None) exch} if
            dup  4 ge {(Unknown) exch} if
            pop
        }{
            pop pop (Unknown)
        } ifelse
    }{
        (Unknown)
    } ifelse
    = flush
    restore
"
*End
*CloseUI: *FXSelectID

*OpenUI *InstalledMemory/Memory: PickOne
*DefaultInstalledMemory: 2048Meg
*InstalledMemory 2048Meg/2048MB: ""
*?InstalledMemory: "
	save mark {
		1 dict
		dup 2147483648 (2048Meg) put
		currentsystemparams /InstalledRam get get = flush
	} stopped {(Unknown) = flush} if
	cleartomark restore
"
*End
*CloseUI: *InstalledMemory

*CloseGroup: InstallableOptions

*UIConstraints: *FXPaperTrayConfiguration 4Tray *InputSlot 3rdTrayTTM
*UIConstraints: *FXPaperTrayConfiguration 4Tray *InputSlot 4thTrayTTM
*UIConstraints: *InputSlot 3rdTrayTTM *FXPaperTrayConfiguration 4Tray
*UIConstraints: *InputSlot 4thTrayTTM *FXPaperTrayConfiguration 4Tray
*UIConstraints: *FXPaperTrayConfiguration 4TrayTTM *InputSlot 3rdTray
*UIConstraints: *FXPaperTrayConfiguration 4TrayTTM *InputSlot 4thTray
*UIConstraints: *InputSlot 3rdTray *FXPaperTrayConfiguration 4TrayTTM
*UIConstraints: *InputSlot 4thTray *FXPaperTrayConfiguration 4TrayTTM
*UIConstraints: *FXHighCapacityFeeder False *InputSlot HCF1
*UIConstraints: *InputSlot HCF1 *FXHighCapacityFeeder False
*UIConstraints: *FXOutputOptions None *FXBookletTray True
*UIConstraints: *FXOutputOptions InnerOutputTray *FXBookletTray True
*UIConstraints: *FXBookletTray True *FXOutputOptions None
*UIConstraints: *FXBookletTray True *FXOutputOptions InnerOutputTray
*UIConstraints: *FXRegionalPaperSetting Mm *PageSize FX4x6
*UIConstraints: *FXRegionalPaperSetting Mm *PageSize Statement
*UIConstraints: *FXRegionalPaperSetting Mm *PageSize Executive
*UIConstraints: *FXRegionalPaperSetting Mm *PageSize 8x10
*UIConstraints: *FXRegionalPaperSetting Mm *PageSize FX846x124
*UIConstraints: *FXRegionalPaperSetting Mm *PageSize FX8-KAI
*UIConstraints: *FXRegionalPaperSetting Mm *PageSize FX16-KAI
*UIConstraints: *FXRegionalPaperSetting Mm *PageSize FX8-KAI-GCO
*UIConstraints: *FXRegionalPaperSetting Mm *PageSize FX16-KAI-GCO
*UIConstraints: *FXRegionalPaperSetting Mm *PageSize EnvMonarch
*UIConstraints: *FXRegionalPaperSetting Mm *PageSize Env10
*UIConstraints: *FXRegionalPaperSetting Mm *PageSize EnvDL
*UIConstraints: *PageSize FX4x6 *FXRegionalPaperSetting Mm
*UIConstraints: *PageSize Statement *FXRegionalPaperSetting Mm
*UIConstraints: *PageSize Executive *FXRegionalPaperSetting Mm
*UIConstraints: *PageSize 8x10 *FXRegionalPaperSetting Mm
*UIConstraints: *PageSize FX846x124 *FXRegionalPaperSetting Mm
*UIConstraints: *PageSize FX8-KAI *FXRegionalPaperSetting Mm
*UIConstraints: *PageSize FX16-KAI *FXRegionalPaperSetting Mm
*UIConstraints: *PageSize FX8-KAI-GCO *FXRegionalPaperSetting Mm
*UIConstraints: *PageSize FX16-KAI-GCO *FXRegionalPaperSetting Mm
*UIConstraints: *PageSize EnvMonarch *FXRegionalPaperSetting Mm
*UIConstraints: *PageSize Env10 *FXRegionalPaperSetting Mm
*UIConstraints: *PageSize EnvDL *FXRegionalPaperSetting Mm
*UIConstraints: *FXRegionalPaperSetting Kai *PageSize FXPostcard
*UIConstraints: *FXRegionalPaperSetting Kai *PageSize DoublePostcardRotated
*UIConstraints: *FXRegionalPaperSetting Kai *PageSize EnvChou3
*UIConstraints: *FXRegionalPaperSetting Kai *PageSize Statement
*UIConstraints: *FXRegionalPaperSetting Kai *PageSize Executive
*UIConstraints: *FXRegionalPaperSetting Kai *PageSize 8x10
*UIConstraints: *FXRegionalPaperSetting Kai *PageSize FX846x124
*UIConstraints: *PageSize FXPostcard *FXRegionalPaperSetting Kai
*UIConstraints: *PageSize DoublePostcardRotated *FXRegionalPaperSetting Kai
*UIConstraints: *PageSize EnvChou3 *FXRegionalPaperSetting Kai
*UIConstraints: *PageSize Statement *FXRegionalPaperSetting Kai
*UIConstraints: *PageSize Executive *FXRegionalPaperSetting Kai
*UIConstraints: *PageSize 8x10 *FXRegionalPaperSetting Kai
*UIConstraints: *PageSize FX846x124 *FXRegionalPaperSetting Kai
*UIConstraints: *FXRegionalPaperSetting Legal13 *PageSize B4
*UIConstraints: *FXRegionalPaperSetting Legal13 *PageSize B6
*UIConstraints: *FXRegionalPaperSetting Legal13 *PageSize FXPostcard
*UIConstraints: *FXRegionalPaperSetting Legal13 *PageSize DoublePostcardRotated
*UIConstraints: *FXRegionalPaperSetting Legal13 *PageSize EnvChou3
*UIConstraints: *FXRegionalPaperSetting Legal13 *PageSize FX8-KAI
*UIConstraints: *FXRegionalPaperSetting Legal13 *PageSize FX16-KAI
*UIConstraints: *FXRegionalPaperSetting Legal13 *PageSize FX8-KAI-GCO
*UIConstraints: *FXRegionalPaperSetting Legal13 *PageSize FX16-KAI-GCO
*UIConstraints: *FXRegionalPaperSetting Legal *PageSize B4
*UIConstraints: *FXRegionalPaperSetting Legal *PageSize B6
*UIConstraints: *FXRegionalPaperSetting Legal *PageSize FXPostcard
*UIConstraints: *FXRegionalPaperSetting Legal *PageSize DoublePostcardRotated
*UIConstraints: *FXRegionalPaperSetting Legal *PageSize EnvChou3
*UIConstraints: *FXRegionalPaperSetting Legal *PageSize FX8-KAI
*UIConstraints: *FXRegionalPaperSetting Legal *PageSize FX16-KAI
*UIConstraints: *FXRegionalPaperSetting Legal *PageSize FX8-KAI-GCO
*UIConstraints: *FXRegionalPaperSetting Legal *PageSize FX16-KAI-GCO
*UIConstraints: *FXRegionalPaperSetting Inch *PageSize B4
*UIConstraints: *FXRegionalPaperSetting Inch *PageSize B6
*UIConstraints: *FXRegionalPaperSetting Inch *PageSize FXPostcard
*UIConstraints: *FXRegionalPaperSetting Inch *PageSize DoublePostcardRotated
*UIConstraints: *FXRegionalPaperSetting Inch *PageSize EnvChou3
*UIConstraints: *FXRegionalPaperSetting Inch *PageSize FX8-KAI
*UIConstraints: *FXRegionalPaperSetting Inch *PageSize FX16-KAI
*UIConstraints: *FXRegionalPaperSetting Inch *PageSize FX8-KAI-GCO
*UIConstraints: *FXRegionalPaperSetting Inch *PageSize FX16-KAI-GCO
*UIConstraints: *PageSize B4 *FXRegionalPaperSetting Legal13
*UIConstraints: *PageSize B6 *FXRegionalPaperSetting Legal13
*UIConstraints: *PageSize FXPostcard *FXRegionalPaperSetting Legal13
*UIConstraints: *PageSize DoublePostcardRotated *FXRegionalPaperSetting Legal13
*UIConstraints: *PageSize EnvChou3 *FXRegionalPaperSetting Legal13
*UIConstraints: *PageSize FX8-KAI *FXRegionalPaperSetting Legal13
*UIConstraints: *PageSize FX16-KAI *FXRegionalPaperSetting Legal13
*UIConstraints: *PageSize FX8-KAI-GCO *FXRegionalPaperSetting Legal13
*UIConstraints: *PageSize FX16-KAI-GCO *FXRegionalPaperSetting Legal13
*UIConstraints: *PageSize B4 *FXRegionalPaperSetting Legal
*UIConstraints: *PageSize B6 *FXRegionalPaperSetting Legal
*UIConstraints: *PageSize FXPostcard *FXRegionalPaperSetting Legal
*UIConstraints: *PageSize DoublePostcardRotated *FXRegionalPaperSetting Legal
*UIConstraints: *PageSize EnvChou3 *FXRegionalPaperSetting Legal
*UIConstraints: *PageSize FX8-KAI *FXRegionalPaperSetting Legal
*UIConstraints: *PageSize FX16-KAI *FXRegionalPaperSetting Legal
*UIConstraints: *PageSize FX8-KAI-GCO *FXRegionalPaperSetting Legal
*UIConstraints: *PageSize FX16-KAI-GCO *FXRegionalPaperSetting Legal
*UIConstraints: *PageSize B4 *FXRegionalPaperSetting Inch
*UIConstraints: *PageSize B6 *FXRegionalPaperSetting Inch
*UIConstraints: *PageSize FXPostcard *FXRegionalPaperSetting Inch
*UIConstraints: *PageSize DoublePostcardRotated *FXRegionalPaperSetting Inch
*UIConstraints: *PageSize EnvChou3 *FXRegionalPaperSetting Inch
*UIConstraints: *PageSize FX8-KAI *FXRegionalPaperSetting Inch
*UIConstraints: *PageSize FX16-KAI *FXRegionalPaperSetting Inch
*UIConstraints: *PageSize FX8-KAI-GCO *FXRegionalPaperSetting Inch
*UIConstraints: *PageSize FX16-KAI-GCO *FXRegionalPaperSetting Inch
*UIConstraints: *FXSwitchPaperSize GCO *PageSize FX8-KAI
*UIConstraints: *FXSwitchPaperSize GCO *PageSize FX16-KAI
*UIConstraints: *PageSize FX8-KAI *FXSwitchPaperSize GCO
*UIConstraints: *PageSize FX16-KAI *FXSwitchPaperSize GCO
*UIConstraints: *FXSwitchPaperSize Taiwan *PageSize FX8-KAI-GCO
*UIConstraints: *FXSwitchPaperSize Taiwan *PageSize FX16-KAI-GCO
*UIConstraints: *PageSize FX8-KAI-GCO *FXSwitchPaperSize Taiwan
*UIConstraints: *PageSize FX16-KAI-GCO *FXSwitchPaperSize Taiwan

*UIConstraints: *PageSize B6 *InputSlot MediaTypeAPS
*UIConstraints: *PageSize B6 *InputSlot 1stTray
*UIConstraints: *PageSize B6 *InputSlot 2ndTray
*UIConstraints: *PageSize B6 *InputSlot 3rdTray
*UIConstraints: *PageSize B6 *InputSlot 4thTray
*UIConstraints: *PageSize B6 *InputSlot 3rdTrayTTM
*UIConstraints: *PageSize B6 *InputSlot 4thTrayTTM
*UIConstraints: *PageSize B6 *InputSlot HCF1
*UIConstraints: *PageSize A6 *InputSlot MediaTypeAPS
*UIConstraints: *PageSize A6 *InputSlot 1stTray
*UIConstraints: *PageSize A6 *InputSlot 2ndTray
*UIConstraints: *PageSize A6 *InputSlot 3rdTray
*UIConstraints: *PageSize A6 *InputSlot 4thTray
*UIConstraints: *PageSize A6 *InputSlot 3rdTrayTTM
*UIConstraints: *PageSize A6 *InputSlot 4thTrayTTM
*UIConstraints: *PageSize A6 *InputSlot HCF1
*UIConstraints: *PageSize FXPostcard *InputSlot MediaTypeAPS
*UIConstraints: *PageSize FXPostcard *InputSlot 1stTray
*UIConstraints: *PageSize FXPostcard *InputSlot 2ndTray
*UIConstraints: *PageSize FXPostcard *InputSlot 3rdTray
*UIConstraints: *PageSize FXPostcard *InputSlot 4thTray
*UIConstraints: *PageSize FXPostcard *InputSlot 3rdTrayTTM
*UIConstraints: *PageSize FXPostcard *InputSlot 4thTrayTTM
*UIConstraints: *PageSize FXPostcard *InputSlot HCF1
*UIConstraints: *PageSize DoublePostcardRotated *InputSlot MediaTypeAPS
*UIConstraints: *PageSize DoublePostcardRotated *InputSlot 1stTray
*UIConstraints: *PageSize DoublePostcardRotated *InputSlot 2ndTray
*UIConstraints: *PageSize DoublePostcardRotated *InputSlot 3rdTray
*UIConstraints: *PageSize DoublePostcardRotated *InputSlot 4thTray
*UIConstraints: *PageSize DoublePostcardRotated *InputSlot 3rdTrayTTM
*UIConstraints: *PageSize DoublePostcardRotated *InputSlot 4thTrayTTM
*UIConstraints: *PageSize DoublePostcardRotated *InputSlot HCF1
*UIConstraints: *PageSize FX4x6 *InputSlot MediaTypeAPS
*UIConstraints: *PageSize FX4x6 *InputSlot 1stTray
*UIConstraints: *PageSize FX4x6 *InputSlot 2ndTray
*UIConstraints: *PageSize FX4x6 *InputSlot 3rdTray
*UIConstraints: *PageSize FX4x6 *InputSlot 4thTray
*UIConstraints: *PageSize FX4x6 *InputSlot 3rdTrayTTM
*UIConstraints: *PageSize FX4x6 *InputSlot 4thTrayTTM
*UIConstraints: *PageSize FX4x6 *InputSlot HCF1
*UIConstraints: *PageSize EnvChou3 *InputSlot MediaTypeAPS
*UIConstraints: *PageSize EnvChou3 *InputSlot 1stTray
*UIConstraints: *PageSize EnvChou3 *InputSlot 2ndTray
*UIConstraints: *PageSize EnvChou3 *InputSlot 3rdTray
*UIConstraints: *PageSize EnvChou3 *InputSlot 4thTray
*UIConstraints: *PageSize EnvChou3 *InputSlot 3rdTrayTTM
*UIConstraints: *PageSize EnvChou3 *InputSlot 4thTrayTTM
*UIConstraints: *PageSize EnvChou3 *InputSlot HCF1
*UIConstraints: *PageSize EnvC4 *InputSlot MediaTypeAPS
*UIConstraints: *PageSize EnvC4 *InputSlot 1stTray
*UIConstraints: *PageSize EnvC4 *InputSlot 2ndTray
*UIConstraints: *PageSize EnvC4 *InputSlot 3rdTray
*UIConstraints: *PageSize EnvC4 *InputSlot 4thTray
*UIConstraints: *PageSize EnvC4 *InputSlot 3rdTrayTTM
*UIConstraints: *PageSize EnvC4 *InputSlot 4thTrayTTM
*UIConstraints: *PageSize EnvC4 *InputSlot HCF1
*UIConstraints: *PageSize EnvC5 *InputSlot MediaTypeAPS
*UIConstraints: *PageSize EnvC5 *InputSlot 1stTray
*UIConstraints: *PageSize EnvC5 *InputSlot 2ndTray
*UIConstraints: *PageSize EnvC5 *InputSlot 3rdTray
*UIConstraints: *PageSize EnvC5 *InputSlot 4thTray
*UIConstraints: *PageSize EnvC5 *InputSlot 3rdTrayTTM
*UIConstraints: *PageSize EnvC5 *InputSlot 4thTrayTTM
*UIConstraints: *PageSize EnvC5 *InputSlot HCF1
*UIConstraints: *PageSize FX5x7 *InputSlot MediaTypeAPS
*UIConstraints: *PageSize FX5x7 *InputSlot 1stTray
*UIConstraints: *PageSize FX5x7 *InputSlot 2ndTray
*UIConstraints: *PageSize FX5x7 *InputSlot 3rdTray
*UIConstraints: *PageSize FX5x7 *InputSlot 4thTray
*UIConstraints: *PageSize FX5x7 *InputSlot 3rdTrayTTM
*UIConstraints: *PageSize FX5x7 *InputSlot 4thTrayTTM
*UIConstraints: *PageSize FX5x7 *InputSlot HCF1
*UIConstraints: *PageSize 8x10 *InputSlot MediaTypeAPS
*UIConstraints: *PageSize 8x10 *InputSlot 1stTray
*UIConstraints: *PageSize 8x10 *InputSlot 2ndTray
*UIConstraints: *PageSize 8x10 *InputSlot 3rdTray
*UIConstraints: *PageSize 8x10 *InputSlot 4thTray
*UIConstraints: *PageSize 8x10 *InputSlot 3rdTrayTTM
*UIConstraints: *PageSize 8x10 *InputSlot 4thTrayTTM
*UIConstraints: *PageSize 8x10 *InputSlot HCF1
*UIConstraints: *PageSize FX846x124 *InputSlot MediaTypeAPS
*UIConstraints: *PageSize FX846x124 *InputSlot 1stTray
*UIConstraints: *PageSize FX846x124 *InputSlot 2ndTray
*UIConstraints: *PageSize FX846x124 *InputSlot 3rdTray
*UIConstraints: *PageSize FX846x124 *InputSlot 4thTray
*UIConstraints: *PageSize FX846x124 *InputSlot 3rdTrayTTM
*UIConstraints: *PageSize FX846x124 *InputSlot 4thTrayTTM
*UIConstraints: *PageSize FX846x124 *InputSlot HCF1
*UIConstraints: *PageSize FX11x15 *InputSlot MediaTypeAPS
*UIConstraints: *PageSize FX11x15 *InputSlot 1stTray
*UIConstraints: *PageSize FX11x15 *InputSlot 2ndTray
*UIConstraints: *PageSize FX11x15 *InputSlot 3rdTray
*UIConstraints: *PageSize FX11x15 *InputSlot 4thTray
*UIConstraints: *PageSize FX11x15 *InputSlot 3rdTrayTTM
*UIConstraints: *PageSize FX11x15 *InputSlot 4thTrayTTM
*UIConstraints: *PageSize FX11x15 *InputSlot HCF1
*UIConstraints: *PageSize FXA4Cover *InputSlot MediaTypeAPS
*UIConstraints: *PageSize FXA4Cover *InputSlot 1stTray
*UIConstraints: *PageSize FXA4Cover *InputSlot 2ndTray
*UIConstraints: *PageSize FXA4Cover *InputSlot 3rdTray
*UIConstraints: *PageSize FXA4Cover *InputSlot 4thTray
*UIConstraints: *PageSize FXA4Cover *InputSlot 3rdTrayTTM
*UIConstraints: *PageSize FXA4Cover *InputSlot 4thTrayTTM
*UIConstraints: *PageSize FXA4Cover *InputSlot HCF1
*UIConstraints: *PageSize 9x11 *InputSlot MediaTypeAPS
*UIConstraints: *PageSize 9x11 *InputSlot 1stTray
*UIConstraints: *PageSize 9x11 *InputSlot 2ndTray
*UIConstraints: *PageSize 9x11 *InputSlot 3rdTray
*UIConstraints: *PageSize 9x11 *InputSlot 4thTray
*UIConstraints: *PageSize 9x11 *InputSlot 3rdTrayTTM
*UIConstraints: *PageSize 9x11 *InputSlot 4thTrayTTM
*UIConstraints: *PageSize 9x11 *InputSlot HCF1
*UIConstraints: *PageSize EnvMonarch *InputSlot MediaTypeAPS
*UIConstraints: *PageSize EnvMonarch *InputSlot 1stTray
*UIConstraints: *PageSize EnvMonarch *InputSlot 2ndTray
*UIConstraints: *PageSize EnvMonarch *InputSlot 3rdTray
*UIConstraints: *PageSize EnvMonarch *InputSlot 4thTray
*UIConstraints: *PageSize EnvMonarch *InputSlot 3rdTrayTTM
*UIConstraints: *PageSize EnvMonarch *InputSlot 4thTrayTTM
*UIConstraints: *PageSize EnvMonarch *InputSlot HCF1
*UIConstraints: *PageSize Env10 *InputSlot MediaTypeAPS
*UIConstraints: *PageSize Env10 *InputSlot 1stTray
*UIConstraints: *PageSize Env10 *InputSlot 2ndTray
*UIConstraints: *PageSize Env10 *InputSlot 3rdTray
*UIConstraints: *PageSize Env10 *InputSlot 4thTray
*UIConstraints: *PageSize Env10 *InputSlot 3rdTrayTTM
*UIConstraints: *PageSize Env10 *InputSlot 4thTrayTTM
*UIConstraints: *PageSize Env10 *InputSlot HCF1
*UIConstraints: *PageSize EnvDL *InputSlot MediaTypeAPS
*UIConstraints: *PageSize EnvDL *InputSlot 1stTray
*UIConstraints: *PageSize EnvDL *InputSlot 2ndTray
*UIConstraints: *PageSize EnvDL *InputSlot 3rdTray
*UIConstraints: *PageSize EnvDL *InputSlot 4thTray
*UIConstraints: *PageSize EnvDL *InputSlot 3rdTrayTTM
*UIConstraints: *PageSize EnvDL *InputSlot 4thTrayTTM
*UIConstraints: *PageSize EnvDL *InputSlot HCF1
*UIConstraints: *InputSlot MediaTypeAPS *PageSize B6
*UIConstraints: *InputSlot 1stTray *PageSize B6
*UIConstraints: *InputSlot 2ndTray *PageSize B6
*UIConstraints: *InputSlot 3rdTray *PageSize B6
*UIConstraints: *InputSlot 4thTray *PageSize B6
*UIConstraints: *InputSlot 3rdTrayTTM *PageSize B6
*UIConstraints: *InputSlot 4thTrayTTM *PageSize B6
*UIConstraints: *InputSlot HCF1 *PageSize B6
*UIConstraints: *InputSlot MediaTypeAPS *PageSize A6
*UIConstraints: *InputSlot 1stTray *PageSize A6
*UIConstraints: *InputSlot 2ndTray *PageSize A6
*UIConstraints: *InputSlot 3rdTray *PageSize A6
*UIConstraints: *InputSlot 4thTray *PageSize A6
*UIConstraints: *InputSlot 3rdTrayTTM *PageSize A6
*UIConstraints: *InputSlot 4thTrayTTM *PageSize A6
*UIConstraints: *InputSlot HCF1 *PageSize A6
*UIConstraints: *InputSlot MediaTypeAPS *PageSize FXPostcard
*UIConstraints: *InputSlot 1stTray *PageSize FXPostcard
*UIConstraints: *InputSlot 2ndTray *PageSize FXPostcard
*UIConstraints: *InputSlot 3rdTray *PageSize FXPostcard
*UIConstraints: *InputSlot 4thTray *PageSize FXPostcard
*UIConstraints: *InputSlot 3rdTrayTTM *PageSize FXPostcard
*UIConstraints: *InputSlot 4thTrayTTM *PageSize FXPostcard
*UIConstraints: *InputSlot HCF1 *PageSize FXPostcard
*UIConstraints: *InputSlot MediaTypeAPS *PageSize DoublePostcardRotated
*UIConstraints: *InputSlot 1stTray *PageSize DoublePostcardRotated
*UIConstraints: *InputSlot 2ndTray *PageSize DoublePostcardRotated
*UIConstraints: *InputSlot 3rdTray *PageSize DoublePostcardRotated
*UIConstraints: *InputSlot 4thTray *PageSize DoublePostcardRotated
*UIConstraints: *InputSlot 3rdTrayTTM *PageSize DoublePostcardRotated
*UIConstraints: *InputSlot 4thTrayTTM *PageSize DoublePostcardRotated
*UIConstraints: *InputSlot HCF1 *PageSize DoublePostcardRotated
*UIConstraints: *InputSlot MediaTypeAPS *PageSize FX4x6
*UIConstraints: *InputSlot 1stTray *PageSize FX4x6
*UIConstraints: *InputSlot 2ndTray *PageSize FX4x6
*UIConstraints: *InputSlot 3rdTray *PageSize FX4x6
*UIConstraints: *InputSlot 4thTray *PageSize FX4x6
*UIConstraints: *InputSlot 3rdTrayTTM *PageSize FX4x6
*UIConstraints: *InputSlot 4thTrayTTM *PageSize FX4x6
*UIConstraints: *InputSlot HCF1 *PageSize FX4x6
*UIConstraints: *InputSlot MediaTypeAPS *PageSize EnvChou3
*UIConstraints: *InputSlot 1stTray *PageSize EnvChou3
*UIConstraints: *InputSlot 2ndTray *PageSize EnvChou3
*UIConstraints: *InputSlot 3rdTray *PageSize EnvChou3
*UIConstraints: *InputSlot 4thTray *PageSize EnvChou3
*UIConstraints: *InputSlot 3rdTrayTTM *PageSize EnvChou3
*UIConstraints: *InputSlot 4thTrayTTM *PageSize EnvChou3
*UIConstraints: *InputSlot HCF1 *PageSize EnvChou3
*UIConstraints: *InputSlot MediaTypeAPS *PageSize EnvC4
*UIConstraints: *InputSlot 1stTray *PageSize EnvC4
*UIConstraints: *InputSlot 2ndTray *PageSize EnvC4
*UIConstraints: *InputSlot 3rdTray *PageSize EnvC4
*UIConstraints: *InputSlot 4thTray *PageSize EnvC4
*UIConstraints: *InputSlot 3rdTrayTTM *PageSize EnvC4
*UIConstraints: *InputSlot 4thTrayTTM *PageSize EnvC4
*UIConstraints: *InputSlot HCF1 *PageSize EnvC4
*UIConstraints: *InputSlot MediaTypeAPS *PageSize EnvC5
*UIConstraints: *InputSlot 1stTray *PageSize EnvC5
*UIConstraints: *InputSlot 2ndTray *PageSize EnvC5
*UIConstraints: *InputSlot 3rdTray *PageSize EnvC5
*UIConstraints: *InputSlot 4thTray *PageSize EnvC5
*UIConstraints: *InputSlot 3rdTrayTTM *PageSize EnvC5
*UIConstraints: *InputSlot 4thTrayTTM *PageSize EnvC5
*UIConstraints: *InputSlot HCF1 *PageSize EnvC5
*UIConstraints: *InputSlot MediaTypeAPS *PageSize FX5x7
*UIConstraints: *InputSlot 1stTray *PageSize FX5x7
*UIConstraints: *InputSlot 2ndTray *PageSize FX5x7
*UIConstraints: *InputSlot 3rdTray *PageSize FX5x7
*UIConstraints: *InputSlot 4thTray *PageSize FX5x7
*UIConstraints: *InputSlot 3rdTrayTTM *PageSize FX5x7
*UIConstraints: *InputSlot 4thTrayTTM *PageSize FX5x7
*UIConstraints: *InputSlot HCF1 *PageSize FX5x7
*UIConstraints: *InputSlot MediaTypeAPS *PageSize 8x10
*UIConstraints: *InputSlot 1stTray *PageSize 8x10
*UIConstraints: *InputSlot 2ndTray *PageSize 8x10
*UIConstraints: *InputSlot 3rdTray *PageSize 8x10
*UIConstraints: *InputSlot 4thTray *PageSize 8x10
*UIConstraints: *InputSlot 3rdTrayTTM *PageSize 8x10
*UIConstraints: *InputSlot 4thTrayTTM *PageSize 8x10
*UIConstraints: *InputSlot HCF1 *PageSize 8x10
*UIConstraints: *InputSlot MediaTypeAPS *PageSize FX846x124
*UIConstraints: *InputSlot 1stTray *PageSize FX846x124
*UIConstraints: *InputSlot 2ndTray *PageSize FX846x124
*UIConstraints: *InputSlot 3rdTray *PageSize FX846x124
*UIConstraints: *InputSlot 4thTray *PageSize FX846x124
*UIConstraints: *InputSlot 3rdTrayTTM *PageSize FX846x124
*UIConstraints: *InputSlot 4thTrayTTM *PageSize FX846x124
*UIConstraints: *InputSlot HCF1 *PageSize FX846x124
*UIConstraints: *InputSlot MediaTypeAPS *PageSize FX11x15
*UIConstraints: *InputSlot 1stTray *PageSize FX11x15
*UIConstraints: *InputSlot 2ndTray *PageSize FX11x15
*UIConstraints: *InputSlot 3rdTray *PageSize FX11x15
*UIConstraints: *InputSlot 4thTray *PageSize FX11x15
*UIConstraints: *InputSlot 3rdTrayTTM *PageSize FX11x15
*UIConstraints: *InputSlot 4thTrayTTM *PageSize FX11x15
*UIConstraints: *InputSlot HCF1 *PageSize FX11x15
*UIConstraints: *InputSlot MediaTypeAPS *PageSize FXA4Cover
*UIConstraints: *InputSlot 1stTray *PageSize FXA4Cover
*UIConstraints: *InputSlot 2ndTray *PageSize FXA4Cover
*UIConstraints: *InputSlot 3rdTray *PageSize FXA4Cover
*UIConstraints: *InputSlot 4thTray *PageSize FXA4Cover
*UIConstraints: *InputSlot 3rdTrayTTM *PageSize FXA4Cover
*UIConstraints: *InputSlot 4thTrayTTM *PageSize FXA4Cover
*UIConstraints: *InputSlot HCF1 *PageSize FXA4Cover
*UIConstraints: *InputSlot MediaTypeAPS *PageSize 9x11
*UIConstraints: *InputSlot 1stTray *PageSize 9x11
*UIConstraints: *InputSlot 2ndTray *PageSize 9x11
*UIConstraints: *InputSlot 3rdTray *PageSize 9x11
*UIConstraints: *InputSlot 4thTray *PageSize 9x11
*UIConstraints: *InputSlot 3rdTrayTTM *PageSize 9x11
*UIConstraints: *InputSlot 4thTrayTTM *PageSize 9x11
*UIConstraints: *InputSlot HCF1 *PageSize 9x11
*UIConstraints: *InputSlot MediaTypeAPS *PageSize EnvMonarch
*UIConstraints: *InputSlot 1stTray *PageSize EnvMonarch
*UIConstraints: *InputSlot 2ndTray *PageSize EnvMonarch
*UIConstraints: *InputSlot 3rdTray *PageSize EnvMonarch
*UIConstraints: *InputSlot 4thTray *PageSize EnvMonarch
*UIConstraints: *InputSlot 3rdTrayTTM *PageSize EnvMonarch
*UIConstraints: *InputSlot 4thTrayTTM *PageSize EnvMonarch
*UIConstraints: *InputSlot HCF1 *PageSize EnvMonarch
*UIConstraints: *InputSlot MediaTypeAPS *PageSize Env10
*UIConstraints: *InputSlot 1stTray *PageSize Env10
*UIConstraints: *InputSlot 2ndTray *PageSize Env10
*UIConstraints: *InputSlot 3rdTray *PageSize Env10
*UIConstraints: *InputSlot 4thTray *PageSize Env10
*UIConstraints: *InputSlot 3rdTrayTTM *PageSize Env10
*UIConstraints: *InputSlot 4thTrayTTM *PageSize Env10
*UIConstraints: *InputSlot HCF1 *PageSize Env10
*UIConstraints: *InputSlot MediaTypeAPS *PageSize EnvDL
*UIConstraints: *InputSlot 1stTray *PageSize EnvDL
*UIConstraints: *InputSlot 2ndTray *PageSize EnvDL
*UIConstraints: *InputSlot 3rdTray *PageSize EnvDL
*UIConstraints: *InputSlot 4thTray *PageSize EnvDL
*UIConstraints: *InputSlot 3rdTrayTTM *PageSize EnvDL
*UIConstraints: *InputSlot 4thTrayTTM *PageSize EnvDL
*UIConstraints: *InputSlot HCF1 *PageSize EnvDL
*UIConstraints: *PageSize B6 *ManualFeed False
*UIConstraints: *PageSize A6 *ManualFeed False
*UIConstraints: *PageSize FXPostcard *ManualFeed False
*UIConstraints: *PageSize DoublePostcardRotated *ManualFeed False
*UIConstraints: *PageSize FX4x6 *ManualFeed False
*UIConstraints: *PageSize EnvChou3 *ManualFeed False
*UIConstraints: *PageSize EnvC4 *ManualFeed False
*UIConstraints: *PageSize EnvC5 *ManualFeed False
*UIConstraints: *PageSize FX5x7 *ManualFeed False
*UIConstraints: *PageSize 8x10 *ManualFeed False
*UIConstraints: *PageSize FX846x124 *ManualFeed False
*UIConstraints: *PageSize FX11x15 *ManualFeed False
*UIConstraints: *PageSize FXA4Cover *ManualFeed False
*UIConstraints: *PageSize 9x11 *ManualFeed False
*UIConstraints: *PageSize EnvMonarch *ManualFeed False
*UIConstraints: *PageSize Env10 *ManualFeed False
*UIConstraints: *PageSize EnvDL *ManualFeed False
*UIConstraints: *ManualFeed False *PageSize B6
*UIConstraints: *ManualFeed False *PageSize A6
*UIConstraints: *ManualFeed False *PageSize FXPostcard
*UIConstraints: *ManualFeed False *PageSize DoublePostcardRotated
*UIConstraints: *ManualFeed False *PageSize FX4x6
*UIConstraints: *ManualFeed False *PageSize EnvChou3
*UIConstraints: *ManualFeed False *PageSize EnvC4
*UIConstraints: *ManualFeed False *PageSize EnvC5
*UIConstraints: *ManualFeed False *PageSize FX5x7
*UIConstraints: *ManualFeed False *PageSize 8x10
*UIConstraints: *ManualFeed False *PageSize FX846x124
*UIConstraints: *ManualFeed False *PageSize FX11x15
*UIConstraints: *ManualFeed False *PageSize FXA4Cover
*UIConstraints: *ManualFeed False *PageSize 9x11
*UIConstraints: *ManualFeed False *PageSize EnvMonarch
*UIConstraints: *ManualFeed False *PageSize Env10
*UIConstraints: *ManualFeed False *PageSize EnvDL
*UIConstraints: *PageSize SRA3 *InputSlot 1stTray
*UIConstraints: *PageSize SRA3 *InputSlot 3rdTrayTTM
*UIConstraints: *PageSize SRA3 *InputSlot 4thTrayTTM
*UIConstraints: *PageSize SRA3 *InputSlot HCF1
*UIConstraints: *PageSize TabloidExtra *InputSlot 1stTray
*UIConstraints: *PageSize TabloidExtra *InputSlot 3rdTrayTTM
*UIConstraints: *PageSize TabloidExtra *InputSlot 4thTrayTTM
*UIConstraints: *PageSize TabloidExtra *InputSlot HCF1
*UIConstraints: *InputSlot 1stTray *PageSize SRA3
*UIConstraints: *InputSlot 3rdTrayTTM *PageSize SRA3
*UIConstraints: *InputSlot 4thTrayTTM *PageSize SRA3
*UIConstraints: *InputSlot HCF1 *PageSize SRA3
*UIConstraints: *InputSlot 1stTray *PageSize TabloidExtra
*UIConstraints: *InputSlot 3rdTrayTTM *PageSize TabloidExtra
*UIConstraints: *InputSlot 4thTrayTTM *PageSize TabloidExtra
*UIConstraints: *InputSlot HCF1 *PageSize TabloidExtra
*UIConstraints: *PageSize A3 *InputSlot 3rdTrayTTM
*UIConstraints: *PageSize A3 *InputSlot 4thTrayTTM
*UIConstraints: *PageSize A3 *InputSlot HCF1
*UIConstraints: *PageSize B4 *InputSlot 3rdTrayTTM
*UIConstraints: *PageSize B4 *InputSlot 4thTrayTTM
*UIConstraints: *PageSize B4 *InputSlot HCF1
*UIConstraints: *PageSize A5 *InputSlot 3rdTrayTTM
*UIConstraints: *PageSize A5 *InputSlot 4thTrayTTM
*UIConstraints: *PageSize A5 *InputSlot HCF1
*UIConstraints: *PageSize Statement *InputSlot 3rdTrayTTM
*UIConstraints: *PageSize Statement *InputSlot 4thTrayTTM
*UIConstraints: *PageSize Statement *InputSlot HCF1
*UIConstraints: *PageSize Legal *InputSlot 3rdTrayTTM
*UIConstraints: *PageSize Legal *InputSlot 4thTrayTTM
*UIConstraints: *PageSize Legal *InputSlot HCF1
*UIConstraints: *PageSize FanFoldGermanLegal *InputSlot 3rdTrayTTM
*UIConstraints: *PageSize FanFoldGermanLegal *InputSlot 4thTrayTTM
*UIConstraints: *PageSize FanFoldGermanLegal *InputSlot HCF1
*UIConstraints: *PageSize Tabloid *InputSlot 3rdTrayTTM
*UIConstraints: *PageSize Tabloid *InputSlot 4thTrayTTM
*UIConstraints: *PageSize Tabloid *InputSlot HCF1
*UIConstraints: *PageSize FX8-KAI *InputSlot 3rdTrayTTM
*UIConstraints: *PageSize FX8-KAI *InputSlot 4thTrayTTM
*UIConstraints: *PageSize FX8-KAI *InputSlot HCF1
*UIConstraints: *PageSize FX16-KAI *InputSlot 3rdTrayTTM
*UIConstraints: *PageSize FX16-KAI *InputSlot 4thTrayTTM
*UIConstraints: *PageSize FX16-KAI *InputSlot HCF1
*UIConstraints: *PageSize FX8-KAI-GCO *InputSlot 3rdTrayTTM
*UIConstraints: *PageSize FX8-KAI-GCO *InputSlot 4thTrayTTM
*UIConstraints: *PageSize FX8-KAI-GCO *InputSlot HCF1
*UIConstraints: *PageSize FX16-KAI-GCO *InputSlot 3rdTrayTTM
*UIConstraints: *PageSize FX16-KAI-GCO *InputSlot 4thTrayTTM
*UIConstraints: *PageSize FX16-KAI-GCO *InputSlot HCF1
*UIConstraints: *InputSlot 3rdTrayTTM *PageSize A3
*UIConstraints: *InputSlot 4thTrayTTM *PageSize A3
*UIConstraints: *InputSlot HCF1 *PageSize A3
*UIConstraints: *InputSlot 3rdTrayTTM *PageSize B4
*UIConstraints: *InputSlot 4thTrayTTM *PageSize B4
*UIConstraints: *InputSlot HCF1 *PageSize B4
*UIConstraints: *InputSlot 3rdTrayTTM *PageSize A5
*UIConstraints: *InputSlot 4thTrayTTM *PageSize A5
*UIConstraints: *InputSlot HCF1 *PageSize A5
*UIConstraints: *InputSlot 3rdTrayTTM *PageSize Statement
*UIConstraints: *InputSlot 4thTrayTTM *PageSize Statement
*UIConstraints: *InputSlot HCF1 *PageSize Statement
*UIConstraints: *InputSlot 3rdTrayTTM *PageSize Legal
*UIConstraints: *InputSlot 4thTrayTTM *PageSize Legal
*UIConstraints: *InputSlot HCF1 *PageSize Legal
*UIConstraints: *InputSlot 3rdTrayTTM *PageSize FanFoldGermanLegal
*UIConstraints: *InputSlot 4thTrayTTM *PageSize FanFoldGermanLegal
*UIConstraints: *InputSlot HCF1 *PageSize FanFoldGermanLegal
*UIConstraints: *InputSlot 3rdTrayTTM *PageSize Tabloid
*UIConstraints: *InputSlot 4thTrayTTM *PageSize Tabloid
*UIConstraints: *InputSlot HCF1 *PageSize Tabloid
*UIConstraints: *InputSlot 3rdTrayTTM *PageSize FX8-KAI
*UIConstraints: *InputSlot 4thTrayTTM *PageSize FX8-KAI
*UIConstraints: *InputSlot HCF1 *PageSize FX8-KAI
*UIConstraints: *InputSlot 3rdTrayTTM *PageSize FX16-KAI
*UIConstraints: *InputSlot 4thTrayTTM *PageSize FX16-KAI
*UIConstraints: *InputSlot HCF1 *PageSize FX16-KAI
*UIConstraints: *InputSlot 3rdTrayTTM *PageSize FX8-KAI-GCO
*UIConstraints: *InputSlot 4thTrayTTM *PageSize FX8-KAI-GCO
*UIConstraints: *InputSlot HCF1 *PageSize FX8-KAI-GCO
*UIConstraints: *InputSlot 3rdTrayTTM *PageSize FX16-KAI-GCO
*UIConstraints: *InputSlot 4thTrayTTM *PageSize FX16-KAI-GCO
*UIConstraints: *InputSlot HCF1 *PageSize FX16-KAI-GCO
*UIConstraints: *InputSlot 3rdTrayTTM *FXStaple LeftDoubleLand
*UIConstraints: *InputSlot 3rdTrayTTM *FXStaple TopDoublePort
*UIConstraints: *InputSlot 3rdTrayTTM *FXStaple RightDoubleLand
*UIConstraints: *InputSlot 3rdTrayTTM *FXStaple BottomDoublePort
*UIConstraints: *InputSlot 3rdTrayTTM *FXStaple SaddleStaple
*UIConstraints: *InputSlot 4thTrayTTM *FXStaple LeftDoubleLand
*UIConstraints: *InputSlot 4thTrayTTM *FXStaple TopDoublePort
*UIConstraints: *InputSlot 4thTrayTTM *FXStaple RightDoubleLand
*UIConstraints: *InputSlot 4thTrayTTM *FXStaple BottomDoublePort
*UIConstraints: *InputSlot 4thTrayTTM *FXStaple SaddleStaple
*UIConstraints: *InputSlot HCF1 *FXStaple LeftDoubleLand
*UIConstraints: *InputSlot HCF1 *FXStaple TopDoublePort
*UIConstraints: *InputSlot HCF1 *FXStaple RightDoubleLand
*UIConstraints: *InputSlot HCF1 *FXStaple BottomDoublePort
*UIConstraints: *InputSlot HCF1 *FXStaple SaddleStaple
*UIConstraints: *FXStaple LeftDoubleLand *InputSlot 3rdTrayTTM
*UIConstraints: *FXStaple TopDoublePort *InputSlot 3rdTrayTTM
*UIConstraints: *FXStaple RightDoubleLand *InputSlot 3rdTrayTTM
*UIConstraints: *FXStaple BottomDoublePort *InputSlot 3rdTrayTTM
*UIConstraints: *FXStaple SaddleStaple *InputSlot 3rdTrayTTM
*UIConstraints: *FXStaple LeftDoubleLand *InputSlot 4thTrayTTM
*UIConstraints: *FXStaple TopDoublePort *InputSlot 4thTrayTTM
*UIConstraints: *FXStaple RightDoubleLand *InputSlot 4thTrayTTM
*UIConstraints: *FXStaple BottomDoublePort *InputSlot 4thTrayTTM
*UIConstraints: *FXStaple SaddleStaple *InputSlot 4thTrayTTM
*UIConstraints: *FXStaple LeftDoubleLand *InputSlot HCF1
*UIConstraints: *FXStaple TopDoublePort *InputSlot HCF1
*UIConstraints: *FXStaple RightDoubleLand *InputSlot HCF1
*UIConstraints: *FXStaple BottomDoublePort *InputSlot HCF1
*UIConstraints: *FXStaple SaddleStaple *InputSlot HCF1
*UIConstraints: *InputSlot 3rdTrayTTM *FXPunch LeftLand
*UIConstraints: *InputSlot 3rdTrayTTM *FXPunch TopPort
*UIConstraints: *InputSlot 3rdTrayTTM *FXPunch RightLand
*UIConstraints: *InputSlot 3rdTrayTTM *FXPunch BottomPort
*UIConstraints: *InputSlot 4thTrayTTM *FXPunch LeftLand
*UIConstraints: *InputSlot 4thTrayTTM *FXPunch TopPort
*UIConstraints: *InputSlot 4thTrayTTM *FXPunch RightLand
*UIConstraints: *InputSlot 4thTrayTTM *FXPunch BottomPort
*UIConstraints: *InputSlot HCF1 *FXPunch LeftLand
*UIConstraints: *InputSlot HCF1 *FXPunch TopPort
*UIConstraints: *InputSlot HCF1 *FXPunch RightLand
*UIConstraints: *InputSlot HCF1 *FXPunch BottomPort
*UIConstraints: *FXPunch LeftLand *InputSlot 3rdTrayTTM
*UIConstraints: *FXPunch TopPort *InputSlot 3rdTrayTTM
*UIConstraints: *FXPunch RightLand *InputSlot 3rdTrayTTM
*UIConstraints: *FXPunch BottomPort *InputSlot 3rdTrayTTM
*UIConstraints: *FXPunch LeftLand *InputSlot 4thTrayTTM
*UIConstraints: *FXPunch TopPort *InputSlot 4thTrayTTM
*UIConstraints: *FXPunch RightLand *InputSlot 4thTrayTTM
*UIConstraints: *FXPunch BottomPort *InputSlot 4thTrayTTM
*UIConstraints: *FXPunch LeftLand *InputSlot HCF1
*UIConstraints: *FXPunch TopPort *InputSlot HCF1
*UIConstraints: *FXPunch RightLand *InputSlot HCF1
*UIConstraints: *FXPunch BottomPort *InputSlot HCF1
*UIConstraints: *InputSlot 3rdTrayTTM *FXFold
*UIConstraints: *InputSlot 4thTrayTTM *FXFold
*UIConstraints: *InputSlot HCF1 *FXFold
*UIConstraints: *FXFold *InputSlot 3rdTrayTTM
*UIConstraints: *FXFold *InputSlot 4thTrayTTM
*UIConstraints: *FXFold *InputSlot HCF1
*UIConstraints: *PageSize A6 *Duplex DuplexNoTumble
*UIConstraints: *PageSize A6 *Duplex DuplexTumble
*UIConstraints: *PageSize FXPostcard *Duplex DuplexNoTumble
*UIConstraints: *PageSize FXPostcard *Duplex DuplexTumble
*UIConstraints: *PageSize DoublePostcardRotated *Duplex DuplexNoTumble
*UIConstraints: *PageSize DoublePostcardRotated *Duplex DuplexTumble
*UIConstraints: *PageSize FX4x6 *Duplex DuplexNoTumble
*UIConstraints: *PageSize FX4x6 *Duplex DuplexTumble
*UIConstraints: *PageSize EnvChou3 *Duplex DuplexNoTumble
*UIConstraints: *PageSize EnvChou3 *Duplex DuplexTumble
*UIConstraints: *PageSize EnvC4 *Duplex DuplexNoTumble
*UIConstraints: *PageSize EnvC4 *Duplex DuplexTumble
*UIConstraints: *PageSize EnvC5 *Duplex DuplexNoTumble
*UIConstraints: *PageSize EnvC5 *Duplex DuplexTumble
*UIConstraints: *PageSize FX5x7 *Duplex DuplexNoTumble
*UIConstraints: *PageSize FX5x7 *Duplex DuplexTumble
*UIConstraints: *PageSize EnvMonarch *Duplex DuplexNoTumble
*UIConstraints: *PageSize EnvMonarch *Duplex DuplexTumble
*UIConstraints: *PageSize Env10 *Duplex DuplexNoTumble
*UIConstraints: *PageSize Env10 *Duplex DuplexTumble
*UIConstraints: *PageSize EnvDL *Duplex DuplexNoTumble
*UIConstraints: *PageSize EnvDL *Duplex DuplexTumble
*UIConstraints: *Duplex DuplexNoTumble *PageSize A6
*UIConstraints: *Duplex DuplexTumble *PageSize A6
*UIConstraints: *Duplex DuplexNoTumble *PageSize FXPostcard
*UIConstraints: *Duplex DuplexTumble *PageSize FXPostcard
*UIConstraints: *Duplex DuplexNoTumble *PageSize DoublePostcardRotated
*UIConstraints: *Duplex DuplexTumble *PageSize DoublePostcardRotated
*UIConstraints: *Duplex DuplexNoTumble *PageSize FX4x6
*UIConstraints: *Duplex DuplexTumble *PageSize FX4x6
*UIConstraints: *Duplex DuplexNoTumble *PageSize EnvChou3
*UIConstraints: *Duplex DuplexTumble *PageSize EnvChou3
*UIConstraints: *Duplex DuplexNoTumble *PageSize EnvC4
*UIConstraints: *Duplex DuplexTumble *PageSize EnvC4
*UIConstraints: *Duplex DuplexNoTumble *PageSize EnvC5
*UIConstraints: *Duplex DuplexTumble *PageSize EnvC5
*UIConstraints: *Duplex DuplexNoTumble *PageSize FX5x7
*UIConstraints: *Duplex DuplexTumble *PageSize FX5x7
*UIConstraints: *Duplex DuplexNoTumble *PageSize EnvMonarch
*UIConstraints: *Duplex DuplexTumble *PageSize EnvMonarch
*UIConstraints: *Duplex DuplexNoTumble *PageSize Env10
*UIConstraints: *Duplex DuplexTumble *PageSize Env10
*UIConstraints: *Duplex DuplexNoTumble *PageSize EnvDL
*UIConstraints: *Duplex DuplexTumble *PageSize EnvDL

*UIConstraints: *MediaType ThickPaper3 *InputSlot MediaTypeAPS
*UIConstraints: *MediaType ThickPaper3Back *InputSlot MediaTypeAPS
*UIConstraints: *InputSlot MediaTypeAPS *MediaType ThickPaper3
*UIConstraints: *InputSlot MediaTypeAPS *MediaType ThickPaper3Back
*UIConstraints: *MediaType ThickPaperA *ManualFeed True
*UIConstraints: *MediaType ThickPaperABack *ManualFeed True
*UIConstraints: *MediaType ThickPaperB *ManualFeed True
*UIConstraints: *MediaType ThickPaperBBack *ManualFeed True
*UIConstraints: *MediaType ThickPaperC *ManualFeed True
*UIConstraints: *MediaType ThickPaperCBack *ManualFeed True
*UIConstraints: *MediaType ThickPaperS *ManualFeed True
*UIConstraints: *MediaType ThickPaperSBack *ManualFeed True
*UIConstraints: *MediaType ThickPaper2A *ManualFeed True
*UIConstraints: *MediaType ThickPaper2ABack *ManualFeed True
*UIConstraints: *MediaType ThickPaper2B *ManualFeed True
*UIConstraints: *MediaType ThickPaper2BBack *ManualFeed True
*UIConstraints: *MediaType ThickPaper2C *ManualFeed True
*UIConstraints: *MediaType ThickPaper2CBack *ManualFeed True
*UIConstraints: *MediaType ThickPaper2D *ManualFeed True
*UIConstraints: *MediaType ThickPaper2DBack *ManualFeed True
*UIConstraints: *MediaType ThickPaper2S *ManualFeed True
*UIConstraints: *MediaType ThickPaper2SBack *ManualFeed True
*UIConstraints: *ManualFeed True *MediaType ThickPaperA
*UIConstraints: *ManualFeed True *MediaType ThickPaperABack
*UIConstraints: *ManualFeed True *MediaType ThickPaperB
*UIConstraints: *ManualFeed True *MediaType ThickPaperBBack
*UIConstraints: *ManualFeed True *MediaType ThickPaperC
*UIConstraints: *ManualFeed True *MediaType ThickPaperCBack
*UIConstraints: *ManualFeed True *MediaType ThickPaperS
*UIConstraints: *ManualFeed True *MediaType ThickPaperSBack
*UIConstraints: *ManualFeed True *MediaType ThickPaper2A
*UIConstraints: *ManualFeed True *MediaType ThickPaper2ABack
*UIConstraints: *ManualFeed True *MediaType ThickPaper2B
*UIConstraints: *ManualFeed True *MediaType ThickPaper2BBack
*UIConstraints: *ManualFeed True *MediaType ThickPaper2C
*UIConstraints: *ManualFeed True *MediaType ThickPaper2CBack
*UIConstraints: *ManualFeed True *MediaType ThickPaper2D
*UIConstraints: *ManualFeed True *MediaType ThickPaper2DBack
*UIConstraints: *ManualFeed True *MediaType ThickPaper2S
*UIConstraints: *ManualFeed True *MediaType ThickPaper2SBack
*UIConstraints: *MediaType StationaryBack *Duplex DuplexNoTumble
*UIConstraints: *MediaType StationaryBack *Duplex DuplexTumble
*UIConstraints: *MediaType Transparency *Duplex DuplexNoTumble
*UIConstraints: *MediaType Transparency *Duplex DuplexTumble
*UIConstraints: *MediaType ThinPaper *Duplex DuplexNoTumble
*UIConstraints: *MediaType ThinPaper *Duplex DuplexTumble
*UIConstraints: *MediaType LabelPaper *Duplex DuplexNoTumble
*UIConstraints: *MediaType LabelPaper *Duplex DuplexTumble
*UIConstraints: *MediaType ThickPaperBack *Duplex DuplexNoTumble
*UIConstraints: *MediaType ThickPaperBack *Duplex DuplexTumble
*UIConstraints: *MediaType ThickPaperABack *Duplex DuplexNoTumble
*UIConstraints: *MediaType ThickPaperABack *Duplex DuplexTumble
*UIConstraints: *MediaType ThickPaperBBack *Duplex DuplexNoTumble
*UIConstraints: *MediaType ThickPaperBBack *Duplex DuplexTumble
*UIConstraints: *MediaType ThickPaperCBack *Duplex DuplexNoTumble
*UIConstraints: *MediaType ThickPaperCBack *Duplex DuplexTumble
*UIConstraints: *MediaType ThickPaperSBack *Duplex DuplexNoTumble
*UIConstraints: *MediaType ThickPaperSBack *Duplex DuplexTumble
*UIConstraints: *MediaType ThickPaper2Back *Duplex DuplexNoTumble
*UIConstraints: *MediaType ThickPaper2Back *Duplex DuplexTumble
*UIConstraints: *MediaType ThickPaper2ABack *Duplex DuplexNoTumble
*UIConstraints: *MediaType ThickPaper2ABack *Duplex DuplexTumble
*UIConstraints: *MediaType ThickPaper2BBack *Duplex DuplexNoTumble
*UIConstraints: *MediaType ThickPaper2BBack *Duplex DuplexTumble
*UIConstraints: *MediaType ThickPaper2CBack *Duplex DuplexNoTumble
*UIConstraints: *MediaType ThickPaper2CBack *Duplex DuplexTumble
*UIConstraints: *MediaType ThickPaper2DBack *Duplex DuplexNoTumble
*UIConstraints: *MediaType ThickPaper2DBack *Duplex DuplexTumble
*UIConstraints: *MediaType ThickPaper2SBack *Duplex DuplexNoTumble
*UIConstraints: *MediaType ThickPaper2SBack *Duplex DuplexTumble
*UIConstraints: *MediaType ThickPaper3 *Duplex DuplexNoTumble
*UIConstraints: *MediaType ThickPaper3 *Duplex DuplexTumble
*UIConstraints: *MediaType ThickPaper3Back *Duplex DuplexNoTumble
*UIConstraints: *MediaType ThickPaper3Back *Duplex DuplexTumble
*UIConstraints: *MediaType CoatingPaper1Back *Duplex DuplexNoTumble
*UIConstraints: *MediaType CoatingPaper1Back *Duplex DuplexTumble
*UIConstraints: *MediaType CoatingPaper2Back *Duplex DuplexNoTumble
*UIConstraints: *MediaType CoatingPaper2Back *Duplex DuplexTumble
*UIConstraints: *MediaType Envelope *Duplex DuplexNoTumble
*UIConstraints: *MediaType Envelope *Duplex DuplexTumble
*UIConstraints: *Duplex DuplexNoTumble *MediaType StationaryBack
*UIConstraints: *Duplex DuplexTumble *MediaType StationaryBack
*UIConstraints: *Duplex DuplexNoTumble *MediaType Transparency
*UIConstraints: *Duplex DuplexTumble *MediaType Transparency
*UIConstraints: *Duplex DuplexNoTumble *MediaType ThinPaper
*UIConstraints: *Duplex DuplexTumble *MediaType ThinPaper
*UIConstraints: *Duplex DuplexNoTumble *MediaType LabelPaper
*UIConstraints: *Duplex DuplexTumble *MediaType LabelPaper
*UIConstraints: *Duplex DuplexNoTumble *MediaType ThickPaperBack
*UIConstraints: *Duplex DuplexTumble *MediaType ThickPaperBack
*UIConstraints: *Duplex DuplexNoTumble *MediaType ThickPaperABack
*UIConstraints: *Duplex DuplexTumble *MediaType ThickPaperABack
*UIConstraints: *Duplex DuplexNoTumble *MediaType ThickPaperBBack
*UIConstraints: *Duplex DuplexTumble *MediaType ThickPaperBBack
*UIConstraints: *Duplex DuplexNoTumble *MediaType ThickPaperCBack
*UIConstraints: *Duplex DuplexTumble *MediaType ThickPaperCBack
*UIConstraints: *Duplex DuplexNoTumble *MediaType ThickPaperSBack
*UIConstraints: *Duplex DuplexTumble *MediaType ThickPaperSBack
*UIConstraints: *Duplex DuplexNoTumble *MediaType ThickPaper2Back
*UIConstraints: *Duplex DuplexTumble *MediaType ThickPaper2Back
*UIConstraints: *Duplex DuplexNoTumble *MediaType ThickPaper2ABack
*UIConstraints: *Duplex DuplexTumble *MediaType ThickPaper2ABack
*UIConstraints: *Duplex DuplexNoTumble *MediaType ThickPaper2BBack
*UIConstraints: *Duplex DuplexTumble *MediaType ThickPaper2BBack
*UIConstraints: *Duplex DuplexNoTumble *MediaType ThickPaper2CBack
*UIConstraints: *Duplex DuplexTumble *MediaType ThickPaper2CBack
*UIConstraints: *Duplex DuplexNoTumble *MediaType ThickPaper2DBack
*UIConstraints: *Duplex DuplexTumble *MediaType ThickPaper2DBack
*UIConstraints: *Duplex DuplexNoTumble *MediaType ThickPaper2SBack
*UIConstraints: *Duplex DuplexTumble *MediaType ThickPaper2SBack
*UIConstraints: *Duplex DuplexNoTumble *MediaType ThickPaper3
*UIConstraints: *Duplex DuplexTumble *MediaType ThickPaper3
*UIConstraints: *Duplex DuplexNoTumble *MediaType ThickPaper3Back
*UIConstraints: *Duplex DuplexTumble *MediaType ThickPaper3Back
*UIConstraints: *Duplex DuplexNoTumble *MediaType CoatingPaper1Back
*UIConstraints: *Duplex DuplexTumble *MediaType CoatingPaper1Back
*UIConstraints: *Duplex DuplexNoTumble *MediaType CoatingPaper2Back
*UIConstraints: *Duplex DuplexTumble *MediaType CoatingPaper2Back
*UIConstraints: *Duplex DuplexNoTumble *MediaType Envelope
*UIConstraints: *Duplex DuplexTumble *MediaType Envelope



*UIConstraints: *InputSlot 1stTray *FXSignature
*UIConstraints: *InputSlot 2ndTray *FXSignature
*UIConstraints: *InputSlot 3rdTray *FXSignature
*UIConstraints: *InputSlot 4thTray *FXSignature
*UIConstraints: *InputSlot 3rdTrayTTM *FXSignature
*UIConstraints: *InputSlot 4thTrayTTM *FXSignature
*UIConstraints: *InputSlot HCF1 *FXSignature
*UIConstraints: *FXSignature *InputSlot 1stTray
*UIConstraints: *FXSignature *InputSlot 2ndTray
*UIConstraints: *FXSignature *InputSlot 3rdTray
*UIConstraints: *FXSignature *InputSlot 4thTray
*UIConstraints: *FXSignature *InputSlot 3rdTrayTTM
*UIConstraints: *FXSignature *InputSlot 4thTrayTTM
*UIConstraints: *FXSignature *InputSlot HCF1
*UIConstraints: *ManualFeed True *FXSignature
*UIConstraints: *FXSignature *ManualFeed True



*UIConstraints: *FXSlipSheet AutoTray *Duplex DuplexNoTumble
*UIConstraints: *FXSlipSheet AutoTray *Duplex DuplexTumble
*UIConstraints: *FXSlipSheet 1stTray *Duplex DuplexNoTumble
*UIConstraints: *FXSlipSheet 1stTray *Duplex DuplexTumble
*UIConstraints: *FXSlipSheet 2ndTray *Duplex DuplexNoTumble
*UIConstraints: *FXSlipSheet 2ndTray *Duplex DuplexTumble
*UIConstraints: *FXSlipSheet 3rdTray *Duplex DuplexNoTumble
*UIConstraints: *FXSlipSheet 3rdTray *Duplex DuplexTumble
*UIConstraints: *FXSlipSheet 4thTray *Duplex DuplexNoTumble
*UIConstraints: *FXSlipSheet 4thTray *Duplex DuplexTumble
*UIConstraints: *FXSlipSheet 3rdTrayTTM *Duplex DuplexNoTumble
*UIConstraints: *FXSlipSheet 3rdTrayTTM *Duplex DuplexTumble
*UIConstraints: *FXSlipSheet 4thTrayTTM *Duplex DuplexNoTumble
*UIConstraints: *FXSlipSheet 4thTrayTTM *Duplex DuplexTumble
*UIConstraints: *FXSlipSheet MSI *Duplex DuplexNoTumble
*UIConstraints: *FXSlipSheet MSI *Duplex DuplexTumble
*UIConstraints: *FXSlipSheet HCF1 *Duplex DuplexNoTumble
*UIConstraints: *FXSlipSheet HCF1 *Duplex DuplexTumble
*UIConstraints: *Duplex DuplexNoTumble *FXSlipSheet AutoTray
*UIConstraints: *Duplex DuplexTumble *FXSlipSheet AutoTray
*UIConstraints: *Duplex DuplexNoTumble *FXSlipSheet 1stTray
*UIConstraints: *Duplex DuplexTumble *FXSlipSheet 1stTray
*UIConstraints: *Duplex DuplexNoTumble *FXSlipSheet 2ndTray
*UIConstraints: *Duplex DuplexTumble *FXSlipSheet 2ndTray
*UIConstraints: *Duplex DuplexNoTumble *FXSlipSheet 3rdTray
*UIConstraints: *Duplex DuplexTumble *FXSlipSheet 3rdTray
*UIConstraints: *Duplex DuplexNoTumble *FXSlipSheet 4thTray
*UIConstraints: *Duplex DuplexTumble *FXSlipSheet 4thTray
*UIConstraints: *Duplex DuplexNoTumble *FXSlipSheet 3rdTrayTTM
*UIConstraints: *Duplex DuplexTumble *FXSlipSheet 3rdTrayTTM
*UIConstraints: *Duplex DuplexNoTumble *FXSlipSheet 4thTrayTTM
*UIConstraints: *Duplex DuplexTumble *FXSlipSheet 4thTrayTTM
*UIConstraints: *Duplex DuplexNoTumble *FXSlipSheet MSI
*UIConstraints: *Duplex DuplexTumble *FXSlipSheet MSI
*UIConstraints: *Duplex DuplexNoTumble *FXSlipSheet HCF1
*UIConstraints: *Duplex DuplexTumble *FXSlipSheet HCF1
*UIConstraints: *FXSlipSheet 1stTray *InputSlot 1stTray
*UIConstraints: *InputSlot 1stTray *FXSlipSheet 1stTray
*UIConstraints: *FXSlipSheet 2ndTray *InputSlot 2ndTray
*UIConstraints: *InputSlot 2ndTray *FXSlipSheet 2ndTray
*UIConstraints: *FXSlipSheet 3rdTray *InputSlot 3rdTray
*UIConstraints: *InputSlot 3rdTray *FXSlipSheet 3rdTray
*UIConstraints: *FXSlipSheet 4thTray *InputSlot 4thTray
*UIConstraints: *InputSlot 4thTray *FXSlipSheet 4thTray
*UIConstraints: *FXSlipSheet 3rdTrayTTM *InputSlot 3rdTrayTTM
*UIConstraints: *InputSlot 3rdTrayTTM *FXSlipSheet 3rdTrayTTM
*UIConstraints: *FXSlipSheet 4thTrayTTM *InputSlot 4thTrayTTM
*UIConstraints: *InputSlot 4thTrayTTM *FXSlipSheet 4thTrayTTM
*UIConstraints: *FXSlipSheet MSI *ManualFeed True
*UIConstraints: *ManualFeed True *FXSlipSheet MSI
*UIConstraints: *FXSlipSheet HCF1 *InputSlot HCF1
*UIConstraints: *InputSlot HCF1 *FXSlipSheet HCF1



*UIConstraints: *InputSlot 1stTray *MediaType FinePaper
*UIConstraints: *InputSlot 1stTray *MediaType Stationary
*UIConstraints: *InputSlot 1stTray *MediaType StationaryBack
*UIConstraints: *InputSlot 1stTray *MediaType RecyclePaper
*UIConstraints: *InputSlot 1stTray *MediaType Transparency
*UIConstraints: *InputSlot 1stTray *MediaType ThinPaper
*UIConstraints: *InputSlot 1stTray *MediaType LabelPaper
*UIConstraints: *InputSlot 1stTray *MediaType ThickPaper
*UIConstraints: *InputSlot 1stTray *MediaType ThickPaperBack
*UIConstraints: *InputSlot 1stTray *MediaType ThickPaperA
*UIConstraints: *InputSlot 1stTray *MediaType ThickPaperABack
*UIConstraints: *InputSlot 1stTray *MediaType ThickPaperB
*UIConstraints: *InputSlot 1stTray *MediaType ThickPaperBBack
*UIConstraints: *InputSlot 1stTray *MediaType ThickPaperC
*UIConstraints: *InputSlot 1stTray *MediaType ThickPaperCBack
*UIConstraints: *InputSlot 1stTray *MediaType ThickPaperS
*UIConstraints: *InputSlot 1stTray *MediaType ThickPaperSBack
*UIConstraints: *InputSlot 1stTray *MediaType ThickPaper2
*UIConstraints: *InputSlot 1stTray *MediaType ThickPaper2Back
*UIConstraints: *InputSlot 1stTray *MediaType ThickPaper2A
*UIConstraints: *InputSlot 1stTray *MediaType ThickPaper2ABack
*UIConstraints: *InputSlot 1stTray *MediaType ThickPaper2B
*UIConstraints: *InputSlot 1stTray *MediaType ThickPaper2BBack
*UIConstraints: *InputSlot 1stTray *MediaType ThickPaper2C
*UIConstraints: *InputSlot 1stTray *MediaType ThickPaper2CBack
*UIConstraints: *InputSlot 1stTray *MediaType ThickPaper2D
*UIConstraints: *InputSlot 1stTray *MediaType ThickPaper2DBack
*UIConstraints: *InputSlot 1stTray *MediaType ThickPaper2S
*UIConstraints: *InputSlot 1stTray *MediaType ThickPaper2SBack
*UIConstraints: *InputSlot 1stTray *MediaType ThickPaper3
*UIConstraints: *InputSlot 1stTray *MediaType ThickPaper3Back
*UIConstraints: *InputSlot 1stTray *MediaType CoatingPaper1
*UIConstraints: *InputSlot 1stTray *MediaType CoatingPaper1Back
*UIConstraints: *InputSlot 1stTray *MediaType CoatingPaper2
*UIConstraints: *InputSlot 1stTray *MediaType CoatingPaper2Back
*UIConstraints: *InputSlot 1stTray *MediaType PrepunchedPaper
*UIConstraints: *InputSlot 1stTray *MediaType LetterheadPaper
*UIConstraints: *InputSlot 1stTray *MediaType PrePrintedPaper
*UIConstraints: *InputSlot 1stTray *MediaType Envelope
*UIConstraints: *InputSlot 1stTray *MediaType OtherPaper
*UIConstraints: *InputSlot 1stTray *MediaType CustomSizedPaper1
*UIConstraints: *InputSlot 1stTray *MediaType CustomSizedPaper2
*UIConstraints: *InputSlot 1stTray *MediaType CustomSizedPaper3
*UIConstraints: *InputSlot 1stTray *MediaType CustomSizedPaper4
*UIConstraints: *InputSlot 1stTray *MediaType CustomSizedPaper5
*UIConstraints: *InputSlot 2ndTray *MediaType FinePaper
*UIConstraints: *InputSlot 2ndTray *MediaType Stationary
*UIConstraints: *InputSlot 2ndTray *MediaType StationaryBack
*UIConstraints: *InputSlot 2ndTray *MediaType RecyclePaper
*UIConstraints: *InputSlot 2ndTray *MediaType Transparency
*UIConstraints: *InputSlot 2ndTray *MediaType ThinPaper
*UIConstraints: *InputSlot 2ndTray *MediaType LabelPaper
*UIConstraints: *InputSlot 2ndTray *MediaType ThickPaper
*UIConstraints: *InputSlot 2ndTray *MediaType ThickPaperBack
*UIConstraints: *InputSlot 2ndTray *MediaType ThickPaperA
*UIConstraints: *InputSlot 2ndTray *MediaType ThickPaperABack
*UIConstraints: *InputSlot 2ndTray *MediaType ThickPaperB
*UIConstraints: *InputSlot 2ndTray *MediaType ThickPaperBBack
*UIConstraints: *InputSlot 2ndTray *MediaType ThickPaperC
*UIConstraints: *InputSlot 2ndTray *MediaType ThickPaperCBack
*UIConstraints: *InputSlot 2ndTray *MediaType ThickPaperS
*UIConstraints: *InputSlot 2ndTray *MediaType ThickPaperSBack
*UIConstraints: *InputSlot 2ndTray *MediaType ThickPaper2
*UIConstraints: *InputSlot 2ndTray *MediaType ThickPaper2Back
*UIConstraints: *InputSlot 2ndTray *MediaType ThickPaper2A
*UIConstraints: *InputSlot 2ndTray *MediaType ThickPaper2ABack
*UIConstraints: *InputSlot 2ndTray *MediaType ThickPaper2B
*UIConstraints: *InputSlot 2ndTray *MediaType ThickPaper2BBack
*UIConstraints: *InputSlot 2ndTray *MediaType ThickPaper2C
*UIConstraints: *InputSlot 2ndTray *MediaType ThickPaper2CBack
*UIConstraints: *InputSlot 2ndTray *MediaType ThickPaper2D
*UIConstraints: *InputSlot 2ndTray *MediaType ThickPaper2DBack
*UIConstraints: *InputSlot 2ndTray *MediaType ThickPaper2S
*UIConstraints: *InputSlot 2ndTray *MediaType ThickPaper2SBack
*UIConstraints: *InputSlot 2ndTray *MediaType ThickPaper3
*UIConstraints: *InputSlot 2ndTray *MediaType ThickPaper3Back
*UIConstraints: *InputSlot 2ndTray *MediaType CoatingPaper1
*UIConstraints: *InputSlot 2ndTray *MediaType CoatingPaper1Back
*UIConstraints: *InputSlot 2ndTray *MediaType CoatingPaper2
*UIConstraints: *InputSlot 2ndTray *MediaType CoatingPaper2Back
*UIConstraints: *InputSlot 2ndTray *MediaType PrepunchedPaper
*UIConstraints: *InputSlot 2ndTray *MediaType LetterheadPaper
*UIConstraints: *InputSlot 2ndTray *MediaType PrePrintedPaper
*UIConstraints: *InputSlot 2ndTray *MediaType Envelope
*UIConstraints: *InputSlot 2ndTray *MediaType OtherPaper
*UIConstraints: *InputSlot 2ndTray *MediaType CustomSizedPaper1
*UIConstraints: *InputSlot 2ndTray *MediaType CustomSizedPaper2
*UIConstraints: *InputSlot 2ndTray *MediaType CustomSizedPaper3
*UIConstraints: *InputSlot 2ndTray *MediaType CustomSizedPaper4
*UIConstraints: *InputSlot 2ndTray *MediaType CustomSizedPaper5
*UIConstraints: *InputSlot 3rdTray *MediaType FinePaper
*UIConstraints: *InputSlot 3rdTray *MediaType Stationary
*UIConstraints: *InputSlot 3rdTray *MediaType StationaryBack
*UIConstraints: *InputSlot 3rdTray *MediaType RecyclePaper
*UIConstraints: *InputSlot 3rdTray *MediaType Transparency
*UIConstraints: *InputSlot 3rdTray *MediaType ThinPaper
*UIConstraints: *InputSlot 3rdTray *MediaType LabelPaper
*UIConstraints: *InputSlot 3rdTray *MediaType ThickPaper
*UIConstraints: *InputSlot 3rdTray *MediaType ThickPaperBack
*UIConstraints: *InputSlot 3rdTray *MediaType ThickPaperA
*UIConstraints: *InputSlot 3rdTray *MediaType ThickPaperABack
*UIConstraints: *InputSlot 3rdTray *MediaType ThickPaperB
*UIConstraints: *InputSlot 3rdTray *MediaType ThickPaperBBack
*UIConstraints: *InputSlot 3rdTray *MediaType ThickPaperC
*UIConstraints: *InputSlot 3rdTray *MediaType ThickPaperCBack
*UIConstraints: *InputSlot 3rdTray *MediaType ThickPaperS
*UIConstraints: *InputSlot 3rdTray *MediaType ThickPaperSBack
*UIConstraints: *InputSlot 3rdTray *MediaType ThickPaper2
*UIConstraints: *InputSlot 3rdTray *MediaType ThickPaper2Back
*UIConstraints: *InputSlot 3rdTray *MediaType ThickPaper2A
*UIConstraints: *InputSlot 3rdTray *MediaType ThickPaper2ABack
*UIConstraints: *InputSlot 3rdTray *MediaType ThickPaper2B
*UIConstraints: *InputSlot 3rdTray *MediaType ThickPaper2BBack
*UIConstraints: *InputSlot 3rdTray *MediaType ThickPaper2C
*UIConstraints: *InputSlot 3rdTray *MediaType ThickPaper2CBack
*UIConstraints: *InputSlot 3rdTray *MediaType ThickPaper2D
*UIConstraints: *InputSlot 3rdTray *MediaType ThickPaper2DBack
*UIConstraints: *InputSlot 3rdTray *MediaType ThickPaper2S
*UIConstraints: *InputSlot 3rdTray *MediaType ThickPaper2SBack
*UIConstraints: *InputSlot 3rdTray *MediaType ThickPaper3
*UIConstraints: *InputSlot 3rdTray *MediaType ThickPaper3Back
*UIConstraints: *InputSlot 3rdTray *MediaType CoatingPaper1
*UIConstraints: *InputSlot 3rdTray *MediaType CoatingPaper1Back
*UIConstraints: *InputSlot 3rdTray *MediaType CoatingPaper2
*UIConstraints: *InputSlot 3rdTray *MediaType CoatingPaper2Back
*UIConstraints: *InputSlot 3rdTray *MediaType PrepunchedPaper
*UIConstraints: *InputSlot 3rdTray *MediaType LetterheadPaper
*UIConstraints: *InputSlot 3rdTray *MediaType PrePrintedPaper
*UIConstraints: *InputSlot 3rdTray *MediaType Envelope
*UIConstraints: *InputSlot 3rdTray *MediaType OtherPaper
*UIConstraints: *InputSlot 3rdTray *MediaType CustomSizedPaper1
*UIConstraints: *InputSlot 3rdTray *MediaType CustomSizedPaper2
*UIConstraints: *InputSlot 3rdTray *MediaType CustomSizedPaper3
*UIConstraints: *InputSlot 3rdTray *MediaType CustomSizedPaper4
*UIConstraints: *InputSlot 3rdTray *MediaType CustomSizedPaper5
*UIConstraints: *InputSlot 4thTray *MediaType FinePaper
*UIConstraints: *InputSlot 4thTray *MediaType Stationary
*UIConstraints: *InputSlot 4thTray *MediaType StationaryBack
*UIConstraints: *InputSlot 4thTray *MediaType RecyclePaper
*UIConstraints: *InputSlot 4thTray *MediaType Transparency
*UIConstraints: *InputSlot 4thTray *MediaType ThinPaper
*UIConstraints: *InputSlot 4thTray *MediaType LabelPaper
*UIConstraints: *InputSlot 4thTray *MediaType ThickPaper
*UIConstraints: *InputSlot 4thTray *MediaType ThickPaperBack
*UIConstraints: *InputSlot 4thTray *MediaType ThickPaperA
*UIConstraints: *InputSlot 4thTray *MediaType ThickPaperABack
*UIConstraints: *InputSlot 4thTray *MediaType ThickPaperB
*UIConstraints: *InputSlot 4thTray *MediaType ThickPaperBBack
*UIConstraints: *InputSlot 4thTray *MediaType ThickPaperC
*UIConstraints: *InputSlot 4thTray *MediaType ThickPaperCBack
*UIConstraints: *InputSlot 4thTray *MediaType ThickPaperS
*UIConstraints: *InputSlot 4thTray *MediaType ThickPaperSBack
*UIConstraints: *InputSlot 4thTray *MediaType ThickPaper2
*UIConstraints: *InputSlot 4thTray *MediaType ThickPaper2Back
*UIConstraints: *InputSlot 4thTray *MediaType ThickPaper2A
*UIConstraints: *InputSlot 4thTray *MediaType ThickPaper2ABack
*UIConstraints: *InputSlot 4thTray *MediaType ThickPaper2B
*UIConstraints: *InputSlot 4thTray *MediaType ThickPaper2BBack
*UIConstraints: *InputSlot 4thTray *MediaType ThickPaper2C
*UIConstraints: *InputSlot 4thTray *MediaType ThickPaper2CBack
*UIConstraints: *InputSlot 4thTray *MediaType ThickPaper2D
*UIConstraints: *InputSlot 4thTray *MediaType ThickPaper2DBack
*UIConstraints: *InputSlot 4thTray *MediaType ThickPaper2S
*UIConstraints: *InputSlot 4thTray *MediaType ThickPaper2SBack
*UIConstraints: *InputSlot 4thTray *MediaType ThickPaper3
*UIConstraints: *InputSlot 4thTray *MediaType ThickPaper3Back
*UIConstraints: *InputSlot 4thTray *MediaType CoatingPaper1
*UIConstraints: *InputSlot 4thTray *MediaType CoatingPaper1Back
*UIConstraints: *InputSlot 4thTray *MediaType CoatingPaper2
*UIConstraints: *InputSlot 4thTray *MediaType CoatingPaper2Back
*UIConstraints: *InputSlot 4thTray *MediaType PrepunchedPaper
*UIConstraints: *InputSlot 4thTray *MediaType LetterheadPaper
*UIConstraints: *InputSlot 4thTray *MediaType PrePrintedPaper
*UIConstraints: *InputSlot 4thTray *MediaType Envelope
*UIConstraints: *InputSlot 4thTray *MediaType OtherPaper
*UIConstraints: *InputSlot 4thTray *MediaType CustomSizedPaper1
*UIConstraints: *InputSlot 4thTray *MediaType CustomSizedPaper2
*UIConstraints: *InputSlot 4thTray *MediaType CustomSizedPaper3
*UIConstraints: *InputSlot 4thTray *MediaType CustomSizedPaper4
*UIConstraints: *InputSlot 4thTray *MediaType CustomSizedPaper5
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType FinePaper
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType Stationary
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType StationaryBack
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType RecyclePaper
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType Transparency
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType ThinPaper
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType LabelPaper
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType ThickPaper
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType ThickPaperBack
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType ThickPaperA
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType ThickPaperABack
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType ThickPaperB
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType ThickPaperBBack
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType ThickPaperC
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType ThickPaperCBack
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType ThickPaperS
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType ThickPaperSBack
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType ThickPaper2
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType ThickPaper2Back
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType ThickPaper2A
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType ThickPaper2ABack
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType ThickPaper2B
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType ThickPaper2BBack
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType ThickPaper2C
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType ThickPaper2CBack
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType ThickPaper2D
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType ThickPaper2DBack
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType ThickPaper2S
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType ThickPaper2SBack
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType ThickPaper3
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType ThickPaper3Back
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType CoatingPaper1
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType CoatingPaper1Back
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType CoatingPaper2
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType CoatingPaper2Back
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType PrepunchedPaper
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType LetterheadPaper
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType PrePrintedPaper
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType Envelope
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType OtherPaper
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType CustomSizedPaper1
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType CustomSizedPaper2
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType CustomSizedPaper3
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType CustomSizedPaper4
*UIConstraints: *InputSlot 3rdTrayTTM *MediaType CustomSizedPaper5
*UIConstraints: *InputSlot 4thTrayTTM *MediaType FinePaper
*UIConstraints: *InputSlot 4thTrayTTM *MediaType Stationary
*UIConstraints: *InputSlot 4thTrayTTM *MediaType StationaryBack
*UIConstraints: *InputSlot 4thTrayTTM *MediaType RecyclePaper
*UIConstraints: *InputSlot 4thTrayTTM *MediaType Transparency
*UIConstraints: *InputSlot 4thTrayTTM *MediaType ThinPaper
*UIConstraints: *InputSlot 4thTrayTTM *MediaType LabelPaper
*UIConstraints: *InputSlot 4thTrayTTM *MediaType ThickPaper
*UIConstraints: *InputSlot 4thTrayTTM *MediaType ThickPaperBack
*UIConstraints: *InputSlot 4thTrayTTM *MediaType ThickPaperA
*UIConstraints: *InputSlot 4thTrayTTM *MediaType ThickPaperABack
*UIConstraints: *InputSlot 4thTrayTTM *MediaType ThickPaperB
*UIConstraints: *InputSlot 4thTrayTTM *MediaType ThickPaperBBack
*UIConstraints: *InputSlot 4thTrayTTM *MediaType ThickPaperC
*UIConstraints: *InputSlot 4thTrayTTM *MediaType ThickPaperCBack
*UIConstraints: *InputSlot 4thTrayTTM *MediaType ThickPaperS
*UIConstraints: *InputSlot 4thTrayTTM *MediaType ThickPaperSBack
*UIConstraints: *InputSlot 4thTrayTTM *MediaType ThickPaper2
*UIConstraints: *InputSlot 4thTrayTTM *MediaType ThickPaper2Back
*UIConstraints: *InputSlot 4thTrayTTM *MediaType ThickPaper2A
*UIConstraints: *InputSlot 4thTrayTTM *MediaType ThickPaper2ABack
*UIConstraints: *InputSlot 4thTrayTTM *MediaType ThickPaper2B
*UIConstraints: *InputSlot 4thTrayTTM *MediaType ThickPaper2BBack
*UIConstraints: *InputSlot 4thTrayTTM *MediaType ThickPaper2C
*UIConstraints: *InputSlot 4thTrayTTM *MediaType ThickPaper2CBack
*UIConstraints: *InputSlot 4thTrayTTM *MediaType ThickPaper2D
*UIConstraints: *InputSlot 4thTrayTTM *MediaType ThickPaper2DBack
*UIConstraints: *InputSlot 4thTrayTTM *MediaType ThickPaper2S
*UIConstraints: *InputSlot 4thTrayTTM *MediaType ThickPaper2SBack
*UIConstraints: *InputSlot 4thTrayTTM *MediaType ThickPaper3
*UIConstraints: *InputSlot 4thTrayTTM *MediaType ThickPaper3Back
*UIConstraints: *InputSlot 4thTrayTTM *MediaType CoatingPaper1
*UIConstraints: *InputSlot 4thTrayTTM *MediaType CoatingPaper1Back
*UIConstraints: *InputSlot 4thTrayTTM *MediaType CoatingPaper2
*UIConstraints: *InputSlot 4thTrayTTM *MediaType CoatingPaper2Back
*UIConstraints: *InputSlot 4thTrayTTM *MediaType PrepunchedPaper
*UIConstraints: *InputSlot 4thTrayTTM *MediaType LetterheadPaper
*UIConstraints: *InputSlot 4thTrayTTM *MediaType PrePrintedPaper
*UIConstraints: *InputSlot 4thTrayTTM *MediaType Envelope
*UIConstraints: *InputSlot 4thTrayTTM *MediaType OtherPaper
*UIConstraints: *InputSlot 4thTrayTTM *MediaType CustomSizedPaper1
*UIConstraints: *InputSlot 4thTrayTTM *MediaType CustomSizedPaper2
*UIConstraints: *InputSlot 4thTrayTTM *MediaType CustomSizedPaper3
*UIConstraints: *InputSlot 4thTrayTTM *MediaType CustomSizedPaper4
*UIConstraints: *InputSlot 4thTrayTTM *MediaType CustomSizedPaper5
*UIConstraints: *InputSlot HCF1 *MediaType FinePaper
*UIConstraints: *InputSlot HCF1 *MediaType Stationary
*UIConstraints: *InputSlot HCF1 *MediaType StationaryBack
*UIConstraints: *InputSlot HCF1 *MediaType RecyclePaper
*UIConstraints: *InputSlot HCF1 *MediaType Transparency
*UIConstraints: *InputSlot HCF1 *MediaType ThinPaper
*UIConstraints: *InputSlot HCF1 *MediaType LabelPaper
*UIConstraints: *InputSlot HCF1 *MediaType ThickPaper
*UIConstraints: *InputSlot HCF1 *MediaType ThickPaperBack
*UIConstraints: *InputSlot HCF1 *MediaType ThickPaperA
*UIConstraints: *InputSlot HCF1 *MediaType ThickPaperABack
*UIConstraints: *InputSlot HCF1 *MediaType ThickPaperB
*UIConstraints: *InputSlot HCF1 *MediaType ThickPaperBBack
*UIConstraints: *InputSlot HCF1 *MediaType ThickPaperC
*UIConstraints: *InputSlot HCF1 *MediaType ThickPaperCBack
*UIConstraints: *InputSlot HCF1 *MediaType ThickPaperS
*UIConstraints: *InputSlot HCF1 *MediaType ThickPaperSBack
*UIConstraints: *InputSlot HCF1 *MediaType ThickPaper2
*UIConstraints: *InputSlot HCF1 *MediaType ThickPaper2Back
*UIConstraints: *InputSlot HCF1 *MediaType ThickPaper2A
*UIConstraints: *InputSlot HCF1 *MediaType ThickPaper2ABack
*UIConstraints: *InputSlot HCF1 *MediaType ThickPaper2B
*UIConstraints: *InputSlot HCF1 *MediaType ThickPaper2BBack
*UIConstraints: *InputSlot HCF1 *MediaType ThickPaper2C
*UIConstraints: *InputSlot HCF1 *MediaType ThickPaper2CBack
*UIConstraints: *InputSlot HCF1 *MediaType ThickPaper2D
*UIConstraints: *InputSlot HCF1 *MediaType ThickPaper2DBack
*UIConstraints: *InputSlot HCF1 *MediaType ThickPaper2S
*UIConstraints: *InputSlot HCF1 *MediaType ThickPaper2SBack
*UIConstraints: *InputSlot HCF1 *MediaType ThickPaper3
*UIConstraints: *InputSlot HCF1 *MediaType ThickPaper3Back
*UIConstraints: *InputSlot HCF1 *MediaType CoatingPaper1
*UIConstraints: *InputSlot HCF1 *MediaType CoatingPaper1Back
*UIConstraints: *InputSlot HCF1 *MediaType CoatingPaper2
*UIConstraints: *InputSlot HCF1 *MediaType CoatingPaper2Back
*UIConstraints: *InputSlot HCF1 *MediaType PrepunchedPaper
*UIConstraints: *InputSlot HCF1 *MediaType LetterheadPaper
*UIConstraints: *InputSlot HCF1 *MediaType PrePrintedPaper
*UIConstraints: *InputSlot HCF1 *MediaType Envelope
*UIConstraints: *InputSlot HCF1 *MediaType OtherPaper
*UIConstraints: *InputSlot HCF1 *MediaType CustomSizedPaper1
*UIConstraints: *InputSlot HCF1 *MediaType CustomSizedPaper2
*UIConstraints: *InputSlot HCF1 *MediaType CustomSizedPaper3
*UIConstraints: *InputSlot HCF1 *MediaType CustomSizedPaper4
*UIConstraints: *InputSlot HCF1 *MediaType CustomSizedPaper5
*UIConstraints: *MediaType FinePaper *InputSlot 1stTray
*UIConstraints: *MediaType Stationary *InputSlot 1stTray
*UIConstraints: *MediaType StationaryBack *InputSlot 1stTray
*UIConstraints: *MediaType RecyclePaper *InputSlot 1stTray
*UIConstraints: *MediaType Transparency *InputSlot 1stTray
*UIConstraints: *MediaType ThinPaper *InputSlot 1stTray
*UIConstraints: *MediaType LabelPaper *InputSlot 1stTray
*UIConstraints: *MediaType ThickPaper *InputSlot 1stTray
*UIConstraints: *MediaType ThickPaperBack *InputSlot 1stTray
*UIConstraints: *MediaType ThickPaperA *InputSlot 1stTray
*UIConstraints: *MediaType ThickPaperABack *InputSlot 1stTray
*UIConstraints: *MediaType ThickPaperB *InputSlot 1stTray
*UIConstraints: *MediaType ThickPaperBBack *InputSlot 1stTray
*UIConstraints: *MediaType ThickPaperC *InputSlot 1stTray
*UIConstraints: *MediaType ThickPaperCBack *InputSlot 1stTray
*UIConstraints: *MediaType ThickPaperS *InputSlot 1stTray
*UIConstraints: *MediaType ThickPaperSBack *InputSlot 1stTray
*UIConstraints: *MediaType ThickPaper2 *InputSlot 1stTray
*UIConstraints: *MediaType ThickPaper2Back *InputSlot 1stTray
*UIConstraints: *MediaType ThickPaper2A *InputSlot 1stTray
*UIConstraints: *MediaType ThickPaper2ABack *InputSlot 1stTray
*UIConstraints: *MediaType ThickPaper2B *InputSlot 1stTray
*UIConstraints: *MediaType ThickPaper2BBack *InputSlot 1stTray
*UIConstraints: *MediaType ThickPaper2C *InputSlot 1stTray
*UIConstraints: *MediaType ThickPaper2CBack *InputSlot 1stTray
*UIConstraints: *MediaType ThickPaper2D *InputSlot 1stTray
*UIConstraints: *MediaType ThickPaper2DBack *InputSlot 1stTray
*UIConstraints: *MediaType ThickPaper2S *InputSlot 1stTray
*UIConstraints: *MediaType ThickPaper2SBack *InputSlot 1stTray
*UIConstraints: *MediaType ThickPaper3 *InputSlot 1stTray
*UIConstraints: *MediaType ThickPaper3Back *InputSlot 1stTray
*UIConstraints: *MediaType CoatingPaper1 *InputSlot 1stTray
*UIConstraints: *MediaType CoatingPaper1Back *InputSlot 1stTray
*UIConstraints: *MediaType CoatingPaper2 *InputSlot 1stTray
*UIConstraints: *MediaType CoatingPaper2Back *InputSlot 1stTray
*UIConstraints: *MediaType PrepunchedPaper *InputSlot 1stTray
*UIConstraints: *MediaType LetterheadPaper *InputSlot 1stTray
*UIConstraints: *MediaType PrePrintedPaper *InputSlot 1stTray
*UIConstraints: *MediaType Envelope *InputSlot 1stTray
*UIConstraints: *MediaType OtherPaper *InputSlot 1stTray
*UIConstraints: *MediaType CustomSizedPaper1 *InputSlot 1stTray
*UIConstraints: *MediaType CustomSizedPaper2 *InputSlot 1stTray
*UIConstraints: *MediaType CustomSizedPaper3 *InputSlot 1stTray
*UIConstraints: *MediaType CustomSizedPaper4 *InputSlot 1stTray
*UIConstraints: *MediaType CustomSizedPaper5 *InputSlot 1stTray
*UIConstraints: *MediaType FinePaper *InputSlot 2ndTray
*UIConstraints: *MediaType Stationary *InputSlot 2ndTray
*UIConstraints: *MediaType StationaryBack *InputSlot 2ndTray
*UIConstraints: *MediaType RecyclePaper *InputSlot 2ndTray
*UIConstraints: *MediaType Transparency *InputSlot 2ndTray
*UIConstraints: *MediaType ThinPaper *InputSlot 2ndTray
*UIConstraints: *MediaType LabelPaper *InputSlot 2ndTray
*UIConstraints: *MediaType ThickPaper *InputSlot 2ndTray
*UIConstraints: *MediaType ThickPaperBack *InputSlot 2ndTray
*UIConstraints: *MediaType ThickPaperA *InputSlot 2ndTray
*UIConstraints: *MediaType ThickPaperABack *InputSlot 2ndTray
*UIConstraints: *MediaType ThickPaperB *InputSlot 2ndTray
*UIConstraints: *MediaType ThickPaperBBack *InputSlot 2ndTray
*UIConstraints: *MediaType ThickPaperC *InputSlot 2ndTray
*UIConstraints: *MediaType ThickPaperCBack *InputSlot 2ndTray
*UIConstraints: *MediaType ThickPaperS *InputSlot 2ndTray
*UIConstraints: *MediaType ThickPaperSBack *InputSlot 2ndTray
*UIConstraints: *MediaType ThickPaper2 *InputSlot 2ndTray
*UIConstraints: *MediaType ThickPaper2Back *InputSlot 2ndTray
*UIConstraints: *MediaType ThickPaper2A *InputSlot 2ndTray
*UIConstraints: *MediaType ThickPaper2ABack *InputSlot 2ndTray
*UIConstraints: *MediaType ThickPaper2B *InputSlot 2ndTray
*UIConstraints: *MediaType ThickPaper2BBack *InputSlot 2ndTray
*UIConstraints: *MediaType ThickPaper2C *InputSlot 2ndTray
*UIConstraints: *MediaType ThickPaper2CBack *InputSlot 2ndTray
*UIConstraints: *MediaType ThickPaper2D *InputSlot 2ndTray
*UIConstraints: *MediaType ThickPaper2DBack *InputSlot 2ndTray
*UIConstraints: *MediaType ThickPaper2S *InputSlot 2ndTray
*UIConstraints: *MediaType ThickPaper2SBack *InputSlot 2ndTray
*UIConstraints: *MediaType ThickPaper3 *InputSlot 2ndTray
*UIConstraints: *MediaType ThickPaper3Back *InputSlot 2ndTray
*UIConstraints: *MediaType CoatingPaper1 *InputSlot 2ndTray
*UIConstraints: *MediaType CoatingPaper1Back *InputSlot 2ndTray
*UIConstraints: *MediaType CoatingPaper2 *InputSlot 2ndTray
*UIConstraints: *MediaType CoatingPaper2Back *InputSlot 2ndTray
*UIConstraints: *MediaType PrepunchedPaper *InputSlot 2ndTray
*UIConstraints: *MediaType LetterheadPaper *InputSlot 2ndTray
*UIConstraints: *MediaType PrePrintedPaper *InputSlot 2ndTray
*UIConstraints: *MediaType Envelope *InputSlot 2ndTray
*UIConstraints: *MediaType OtherPaper *InputSlot 2ndTray
*UIConstraints: *MediaType CustomSizedPaper1 *InputSlot 2ndTray
*UIConstraints: *MediaType CustomSizedPaper2 *InputSlot 2ndTray
*UIConstraints: *MediaType CustomSizedPaper3 *InputSlot 2ndTray
*UIConstraints: *MediaType CustomSizedPaper4 *InputSlot 2ndTray
*UIConstraints: *MediaType CustomSizedPaper5 *InputSlot 2ndTray
*UIConstraints: *MediaType FinePaper *InputSlot 3rdTray
*UIConstraints: *MediaType Stationary *InputSlot 3rdTray
*UIConstraints: *MediaType StationaryBack *InputSlot 3rdTray
*UIConstraints: *MediaType RecyclePaper *InputSlot 3rdTray
*UIConstraints: *MediaType Transparency *InputSlot 3rdTray
*UIConstraints: *MediaType ThinPaper *InputSlot 3rdTray
*UIConstraints: *MediaType LabelPaper *InputSlot 3rdTray
*UIConstraints: *MediaType ThickPaper *InputSlot 3rdTray
*UIConstraints: *MediaType ThickPaperBack *InputSlot 3rdTray
*UIConstraints: *MediaType ThickPaperA *InputSlot 3rdTray
*UIConstraints: *MediaType ThickPaperABack *InputSlot 3rdTray
*UIConstraints: *MediaType ThickPaperB *InputSlot 3rdTray
*UIConstraints: *MediaType ThickPaperBBack *InputSlot 3rdTray
*UIConstraints: *MediaType ThickPaperC *InputSlot 3rdTray
*UIConstraints: *MediaType ThickPaperCBack *InputSlot 3rdTray
*UIConstraints: *MediaType ThickPaperS *InputSlot 3rdTray
*UIConstraints: *MediaType ThickPaperSBack *InputSlot 3rdTray
*UIConstraints: *MediaType ThickPaper2 *InputSlot 3rdTray
*UIConstraints: *MediaType ThickPaper2Back *InputSlot 3rdTray
*UIConstraints: *MediaType ThickPaper2A *InputSlot 3rdTray
*UIConstraints: *MediaType ThickPaper2ABack *InputSlot 3rdTray
*UIConstraints: *MediaType ThickPaper2B *InputSlot 3rdTray
*UIConstraints: *MediaType ThickPaper2BBack *InputSlot 3rdTray
*UIConstraints: *MediaType ThickPaper2C *InputSlot 3rdTray
*UIConstraints: *MediaType ThickPaper2CBack *InputSlot 3rdTray
*UIConstraints: *MediaType ThickPaper2D *InputSlot 3rdTray
*UIConstraints: *MediaType ThickPaper2DBack *InputSlot 3rdTray
*UIConstraints: *MediaType ThickPaper2S *InputSlot 3rdTray
*UIConstraints: *MediaType ThickPaper2SBack *InputSlot 3rdTray
*UIConstraints: *MediaType ThickPaper3 *InputSlot 3rdTray
*UIConstraints: *MediaType ThickPaper3Back *InputSlot 3rdTray
*UIConstraints: *MediaType CoatingPaper1 *InputSlot 3rdTray
*UIConstraints: *MediaType CoatingPaper1Back *InputSlot 3rdTray
*UIConstraints: *MediaType CoatingPaper2 *InputSlot 3rdTray
*UIConstraints: *MediaType CoatingPaper2Back *InputSlot 3rdTray
*UIConstraints: *MediaType PrepunchedPaper *InputSlot 3rdTray
*UIConstraints: *MediaType LetterheadPaper *InputSlot 3rdTray
*UIConstraints: *MediaType PrePrintedPaper *InputSlot 3rdTray
*UIConstraints: *MediaType Envelope *InputSlot 3rdTray
*UIConstraints: *MediaType OtherPaper *InputSlot 3rdTray
*UIConstraints: *MediaType CustomSizedPaper1 *InputSlot 3rdTray
*UIConstraints: *MediaType CustomSizedPaper2 *InputSlot 3rdTray
*UIConstraints: *MediaType CustomSizedPaper3 *InputSlot 3rdTray
*UIConstraints: *MediaType CustomSizedPaper4 *InputSlot 3rdTray
*UIConstraints: *MediaType CustomSizedPaper5 *InputSlot 3rdTray
*UIConstraints: *MediaType FinePaper *InputSlot 4thTray
*UIConstraints: *MediaType Stationary *InputSlot 4thTray
*UIConstraints: *MediaType StationaryBack *InputSlot 4thTray
*UIConstraints: *MediaType RecyclePaper *InputSlot 4thTray
*UIConstraints: *MediaType Transparency *InputSlot 4thTray
*UIConstraints: *MediaType ThinPaper *InputSlot 4thTray
*UIConstraints: *MediaType LabelPaper *InputSlot 4thTray
*UIConstraints: *MediaType ThickPaper *InputSlot 4thTray
*UIConstraints: *MediaType ThickPaperBack *InputSlot 4thTray
*UIConstraints: *MediaType ThickPaperA *InputSlot 4thTray
*UIConstraints: *MediaType ThickPaperABack *InputSlot 4thTray
*UIConstraints: *MediaType ThickPaperB *InputSlot 4thTray
*UIConstraints: *MediaType ThickPaperBBack *InputSlot 4thTray
*UIConstraints: *MediaType ThickPaperC *InputSlot 4thTray
*UIConstraints: *MediaType ThickPaperCBack *InputSlot 4thTray
*UIConstraints: *MediaType ThickPaperS *InputSlot 4thTray
*UIConstraints: *MediaType ThickPaperSBack *InputSlot 4thTray
*UIConstraints: *MediaType ThickPaper2 *InputSlot 4thTray
*UIConstraints: *MediaType ThickPaper2Back *InputSlot 4thTray
*UIConstraints: *MediaType ThickPaper2A *InputSlot 4thTray
*UIConstraints: *MediaType ThickPaper2ABack *InputSlot 4thTray
*UIConstraints: *MediaType ThickPaper2B *InputSlot 4thTray
*UIConstraints: *MediaType ThickPaper2BBack *InputSlot 4thTray
*UIConstraints: *MediaType ThickPaper2C *InputSlot 4thTray
*UIConstraints: *MediaType ThickPaper2CBack *InputSlot 4thTray
*UIConstraints: *MediaType ThickPaper2D *InputSlot 4thTray
*UIConstraints: *MediaType ThickPaper2DBack *InputSlot 4thTray
*UIConstraints: *MediaType ThickPaper2S *InputSlot 4thTray
*UIConstraints: *MediaType ThickPaper2SBack *InputSlot 4thTray
*UIConstraints: *MediaType ThickPaper3 *InputSlot 4thTray
*UIConstraints: *MediaType ThickPaper3Back *InputSlot 4thTray
*UIConstraints: *MediaType CoatingPaper1 *InputSlot 4thTray
*UIConstraints: *MediaType CoatingPaper1Back *InputSlot 4thTray
*UIConstraints: *MediaType CoatingPaper2 *InputSlot 4thTray
*UIConstraints: *MediaType CoatingPaper2Back *InputSlot 4thTray
*UIConstraints: *MediaType PrepunchedPaper *InputSlot 4thTray
*UIConstraints: *MediaType LetterheadPaper *InputSlot 4thTray
*UIConstraints: *MediaType PrePrintedPaper *InputSlot 4thTray
*UIConstraints: *MediaType Envelope *InputSlot 4thTray
*UIConstraints: *MediaType OtherPaper *InputSlot 4thTray
*UIConstraints: *MediaType CustomSizedPaper1 *InputSlot 4thTray
*UIConstraints: *MediaType CustomSizedPaper2 *InputSlot 4thTray
*UIConstraints: *MediaType CustomSizedPaper3 *InputSlot 4thTray
*UIConstraints: *MediaType CustomSizedPaper4 *InputSlot 4thTray
*UIConstraints: *MediaType CustomSizedPaper5 *InputSlot 4thTray
*UIConstraints: *MediaType FinePaper *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType Stationary *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType StationaryBack *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType RecyclePaper *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType Transparency *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType ThinPaper *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType LabelPaper *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType ThickPaper *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType ThickPaperBack *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType ThickPaperA *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType ThickPaperABack *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType ThickPaperB *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType ThickPaperBBack *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType ThickPaperC *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType ThickPaperCBack *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType ThickPaperS *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType ThickPaperSBack *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType ThickPaper2 *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType ThickPaper2Back *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType ThickPaper2A *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType ThickPaper2ABack *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType ThickPaper2B *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType ThickPaper2BBack *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType ThickPaper2C *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType ThickPaper2CBack *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType ThickPaper2D *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType ThickPaper2DBack *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType ThickPaper2S *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType ThickPaper2SBack *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType ThickPaper3 *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType ThickPaper3Back *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType CoatingPaper1 *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType CoatingPaper1Back *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType CoatingPaper2 *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType CoatingPaper2Back *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType PrepunchedPaper *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType LetterheadPaper *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType PrePrintedPaper *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType Envelope *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType OtherPaper *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType CustomSizedPaper1 *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType CustomSizedPaper2 *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType CustomSizedPaper3 *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType CustomSizedPaper4 *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType CustomSizedPaper5 *InputSlot 3rdTrayTTM
*UIConstraints: *MediaType FinePaper *InputSlot 4thTrayTTM
*UIConstraints: *MediaType Stationary *InputSlot 4thTrayTTM
*UIConstraints: *MediaType StationaryBack *InputSlot 4thTrayTTM
*UIConstraints: *MediaType RecyclePaper *InputSlot 4thTrayTTM
*UIConstraints: *MediaType Transparency *InputSlot 4thTrayTTM
*UIConstraints: *MediaType ThinPaper *InputSlot 4thTrayTTM
*UIConstraints: *MediaType LabelPaper *InputSlot 4thTrayTTM
*UIConstraints: *MediaType ThickPaper *InputSlot 4thTrayTTM
*UIConstraints: *MediaType ThickPaperBack *InputSlot 4thTrayTTM
*UIConstraints: *MediaType ThickPaperA *InputSlot 4thTrayTTM
*UIConstraints: *MediaType ThickPaperABack *InputSlot 4thTrayTTM
*UIConstraints: *MediaType ThickPaperB *InputSlot 4thTrayTTM
*UIConstraints: *MediaType ThickPaperBBack *InputSlot 4thTrayTTM
*UIConstraints: *MediaType ThickPaperC *InputSlot 4thTrayTTM
*UIConstraints: *MediaType ThickPaperCBack *InputSlot 4thTrayTTM
*UIConstraints: *MediaType ThickPaperS *InputSlot 4thTrayTTM
*UIConstraints: *MediaType ThickPaperSBack *InputSlot 4thTrayTTM
*UIConstraints: *MediaType ThickPaper2 *InputSlot 4thTrayTTM
*UIConstraints: *MediaType ThickPaper2Back *InputSlot 4thTrayTTM
*UIConstraints: *MediaType ThickPaper2A *InputSlot 4thTrayTTM
*UIConstraints: *MediaType ThickPaper2ABack *InputSlot 4thTrayTTM
*UIConstraints: *MediaType ThickPaper2B *InputSlot 4thTrayTTM
*UIConstraints: *MediaType ThickPaper2BBack *InputSlot 4thTrayTTM
*UIConstraints: *MediaType ThickPaper2C *InputSlot 4thTrayTTM
*UIConstraints: *MediaType ThickPaper2CBack *InputSlot 4thTrayTTM
*UIConstraints: *MediaType ThickPaper2D *InputSlot 4thTrayTTM
*UIConstraints: *MediaType ThickPaper2DBack *InputSlot 4thTrayTTM
*UIConstraints: *MediaType ThickPaper2S *InputSlot 4thTrayTTM
*UIConstraints: *MediaType ThickPaper2SBack *InputSlot 4thTrayTTM
*UIConstraints: *MediaType ThickPaper3 *InputSlot 4thTrayTTM
*UIConstraints: *MediaType ThickPaper3Back *InputSlot 4thTrayTTM
*UIConstraints: *MediaType CoatingPaper1 *InputSlot 4thTrayTTM
*UIConstraints: *MediaType CoatingPaper1Back *InputSlot 4thTrayTTM
*UIConstraints: *MediaType CoatingPaper2 *InputSlot 4thTrayTTM
*UIConstraints: *MediaType CoatingPaper2Back *InputSlot 4thTrayTTM
*UIConstraints: *MediaType PrepunchedPaper *InputSlot 4thTrayTTM
*UIConstraints: *MediaType LetterheadPaper *InputSlot 4thTrayTTM
*UIConstraints: *MediaType PrePrintedPaper *InputSlot 4thTrayTTM
*UIConstraints: *MediaType Envelope *InputSlot 4thTrayTTM
*UIConstraints: *MediaType OtherPaper *InputSlot 4thTrayTTM
*UIConstraints: *MediaType CustomSizedPaper1 *InputSlot 4thTrayTTM
*UIConstraints: *MediaType CustomSizedPaper2 *InputSlot 4thTrayTTM
*UIConstraints: *MediaType CustomSizedPaper3 *InputSlot 4thTrayTTM
*UIConstraints: *MediaType CustomSizedPaper4 *InputSlot 4thTrayTTM
*UIConstraints: *MediaType CustomSizedPaper5 *InputSlot 4thTrayTTM
*UIConstraints: *MediaType FinePaper *InputSlot HCF1
*UIConstraints: *MediaType Stationary *InputSlot HCF1
*UIConstraints: *MediaType StationaryBack *InputSlot HCF1
*UIConstraints: *MediaType RecyclePaper *InputSlot HCF1
*UIConstraints: *MediaType Transparency *InputSlot HCF1
*UIConstraints: *MediaType ThinPaper *InputSlot HCF1
*UIConstraints: *MediaType LabelPaper *InputSlot HCF1
*UIConstraints: *MediaType ThickPaper *InputSlot HCF1
*UIConstraints: *MediaType ThickPaperBack *InputSlot HCF1
*UIConstraints: *MediaType ThickPaperA *InputSlot HCF1
*UIConstraints: *MediaType ThickPaperABack *InputSlot HCF1
*UIConstraints: *MediaType ThickPaperB *InputSlot HCF1
*UIConstraints: *MediaType ThickPaperBBack *InputSlot HCF1
*UIConstraints: *MediaType ThickPaperC *InputSlot HCF1
*UIConstraints: *MediaType ThickPaperCBack *InputSlot HCF1
*UIConstraints: *MediaType ThickPaperS *InputSlot HCF1
*UIConstraints: *MediaType ThickPaperSBack *InputSlot HCF1
*UIConstraints: *MediaType ThickPaper2 *InputSlot HCF1
*UIConstraints: *MediaType ThickPaper2Back *InputSlot HCF1
*UIConstraints: *MediaType ThickPaper2A *InputSlot HCF1
*UIConstraints: *MediaType ThickPaper2ABack *InputSlot HCF1
*UIConstraints: *MediaType ThickPaper2B *InputSlot HCF1
*UIConstraints: *MediaType ThickPaper2BBack *InputSlot HCF1
*UIConstraints: *MediaType ThickPaper2C *InputSlot HCF1
*UIConstraints: *MediaType ThickPaper2CBack *InputSlot HCF1
*UIConstraints: *MediaType ThickPaper2D *InputSlot HCF1
*UIConstraints: *MediaType ThickPaper2DBack *InputSlot HCF1
*UIConstraints: *MediaType ThickPaper2S *InputSlot HCF1
*UIConstraints: *MediaType ThickPaper2SBack *InputSlot HCF1
*UIConstraints: *MediaType ThickPaper3 *InputSlot HCF1
*UIConstraints: *MediaType ThickPaper3Back *InputSlot HCF1
*UIConstraints: *MediaType CoatingPaper1 *InputSlot HCF1
*UIConstraints: *MediaType CoatingPaper1Back *InputSlot HCF1
*UIConstraints: *MediaType CoatingPaper2 *InputSlot HCF1
*UIConstraints: *MediaType CoatingPaper2Back *InputSlot HCF1
*UIConstraints: *MediaType PrepunchedPaper *InputSlot HCF1
*UIConstraints: *MediaType LetterheadPaper *InputSlot HCF1
*UIConstraints: *MediaType PrePrintedPaper *InputSlot HCF1
*UIConstraints: *MediaType Envelope *InputSlot HCF1
*UIConstraints: *MediaType OtherPaper *InputSlot HCF1
*UIConstraints: *MediaType CustomSizedPaper1 *InputSlot HCF1
*UIConstraints: *MediaType CustomSizedPaper2 *InputSlot HCF1
*UIConstraints: *MediaType CustomSizedPaper3 *InputSlot HCF1
*UIConstraints: *MediaType CustomSizedPaper4 *InputSlot HCF1
*UIConstraints: *MediaType CustomSizedPaper5 *InputSlot HCF1

*UIConstraints: *FXJog EndOfSetSpecifiedCopies *Collate True
*UIConstraints: *Collate True *FXJog EndOfSetSpecifiedCopies
*UIConstraints: *FXRegionalPaperSetting Mm *PageRegion FX4x6
*UIConstraints: *FXRegionalPaperSetting Mm *PageRegion Statement
*UIConstraints: *FXRegionalPaperSetting Mm *PageRegion Executive
*UIConstraints: *FXRegionalPaperSetting Mm *PageRegion 8x10
*UIConstraints: *FXRegionalPaperSetting Mm *PageRegion FX846x124
*UIConstraints: *FXRegionalPaperSetting Mm *PageRegion FX8-KAI
*UIConstraints: *FXRegionalPaperSetting Mm *PageRegion FX16-KAI
*UIConstraints: *FXRegionalPaperSetting Mm *PageRegion FX8-KAI-GCO
*UIConstraints: *FXRegionalPaperSetting Mm *PageRegion FX16-KAI-GCO
*UIConstraints: *FXRegionalPaperSetting Mm *PageRegion EnvMonarch
*UIConstraints: *FXRegionalPaperSetting Mm *PageRegion Env10
*UIConstraints: *FXRegionalPaperSetting Mm *PageRegion EnvDL
*UIConstraints: *PageRegion FX4x6 *FXRegionalPaperSetting Mm
*UIConstraints: *PageRegion Statement *FXRegionalPaperSetting Mm
*UIConstraints: *PageRegion Executive *FXRegionalPaperSetting Mm
*UIConstraints: *PageRegion 8x10 *FXRegionalPaperSetting Mm
*UIConstraints: *PageRegion FX846x124 *FXRegionalPaperSetting Mm
*UIConstraints: *PageRegion FX8-KAI *FXRegionalPaperSetting Mm
*UIConstraints: *PageRegion FX16-KAI *FXRegionalPaperSetting Mm
*UIConstraints: *PageRegion FX8-KAI-GCO *FXRegionalPaperSetting Mm
*UIConstraints: *PageRegion FX16-KAI-GCO *FXRegionalPaperSetting Mm
*UIConstraints: *PageRegion EnvMonarch *FXRegionalPaperSetting Mm
*UIConstraints: *PageRegion Env10 *FXRegionalPaperSetting Mm
*UIConstraints: *PageRegion EnvDL *FXRegionalPaperSetting Mm
*UIConstraints: *FXRegionalPaperSetting Kai *PageRegion FXPostcard
*UIConstraints: *FXRegionalPaperSetting Kai *PageRegion DoublePostcardRotated
*UIConstraints: *FXRegionalPaperSetting Kai *PageRegion EnvChou3
*UIConstraints: *FXRegionalPaperSetting Kai *PageRegion Statement
*UIConstraints: *FXRegionalPaperSetting Kai *PageRegion Executive
*UIConstraints: *FXRegionalPaperSetting Kai *PageRegion 8x10
*UIConstraints: *FXRegionalPaperSetting Kai *PageRegion FX846x124
*UIConstraints: *PageRegion FXPostcard *FXRegionalPaperSetting Kai
*UIConstraints: *PageRegion DoublePostcardRotated *FXRegionalPaperSetting Kai
*UIConstraints: *PageRegion EnvChou3 *FXRegionalPaperSetting Kai
*UIConstraints: *PageRegion Statement *FXRegionalPaperSetting Kai
*UIConstraints: *PageRegion Executive *FXRegionalPaperSetting Kai
*UIConstraints: *PageRegion 8x10 *FXRegionalPaperSetting Kai
*UIConstraints: *PageRegion FX846x124 *FXRegionalPaperSetting Kai
*UIConstraints: *FXRegionalPaperSetting Legal13 *PageRegion B4
*UIConstraints: *FXRegionalPaperSetting Legal13 *PageRegion B6
*UIConstraints: *FXRegionalPaperSetting Legal13 *PageRegion FXPostcard
*UIConstraints: *FXRegionalPaperSetting Legal13 *PageRegion DoublePostcardRotated
*UIConstraints: *FXRegionalPaperSetting Legal13 *PageRegion EnvChou3
*UIConstraints: *FXRegionalPaperSetting Legal13 *PageRegion FX8-KAI
*UIConstraints: *FXRegionalPaperSetting Legal13 *PageRegion FX16-KAI
*UIConstraints: *FXRegionalPaperSetting Legal13 *PageRegion FX8-KAI-GCO
*UIConstraints: *FXRegionalPaperSetting Legal13 *PageRegion FX16-KAI-GCO
*UIConstraints: *FXRegionalPaperSetting Legal *PageRegion B4
*UIConstraints: *FXRegionalPaperSetting Legal *PageRegion B6
*UIConstraints: *FXRegionalPaperSetting Legal *PageRegion FXPostcard
*UIConstraints: *FXRegionalPaperSetting Legal *PageRegion DoublePostcardRotated
*UIConstraints: *FXRegionalPaperSetting Legal *PageRegion EnvChou3
*UIConstraints: *FXRegionalPaperSetting Legal *PageRegion FX8-KAI
*UIConstraints: *FXRegionalPaperSetting Legal *PageRegion FX16-KAI
*UIConstraints: *FXRegionalPaperSetting Legal *PageRegion FX8-KAI-GCO
*UIConstraints: *FXRegionalPaperSetting Legal *PageRegion FX16-KAI-GCO
*UIConstraints: *FXRegionalPaperSetting Inch *PageRegion B4
*UIConstraints: *FXRegionalPaperSetting Inch *PageRegion B6
*UIConstraints: *FXRegionalPaperSetting Inch *PageRegion FXPostcard
*UIConstraints: *FXRegionalPaperSetting Inch *PageRegion DoublePostcardRotated
*UIConstraints: *FXRegionalPaperSetting Inch *PageRegion EnvChou3
*UIConstraints: *FXRegionalPaperSetting Inch *PageRegion FX8-KAI
*UIConstraints: *FXRegionalPaperSetting Inch *PageRegion FX16-KAI
*UIConstraints: *FXRegionalPaperSetting Inch *PageRegion FX8-KAI-GCO
*UIConstraints: *FXRegionalPaperSetting Inch *PageRegion FX16-KAI-GCO
*UIConstraints: *PageRegion B4 *FXRegionalPaperSetting Legal13
*UIConstraints: *PageRegion B6 *FXRegionalPaperSetting Legal13
*UIConstraints: *PageRegion FXPostcard *FXRegionalPaperSetting Legal13
*UIConstraints: *PageRegion DoublePostcardRotated *FXRegionalPaperSetting Legal13
*UIConstraints: *PageRegion EnvChou3 *FXRegionalPaperSetting Legal13
*UIConstraints: *PageRegion FX8-KAI *FXRegionalPaperSetting Legal13
*UIConstraints: *PageRegion FX16-KAI *FXRegionalPaperSetting Legal13
*UIConstraints: *PageRegion FX8-KAI-GCO *FXRegionalPaperSetting Legal13
*UIConstraints: *PageRegion FX16-KAI-GCO *FXRegionalPaperSetting Legal13
*UIConstraints: *PageRegion B4 *FXRegionalPaperSetting Legal
*UIConstraints: *PageRegion B6 *FXRegionalPaperSetting Legal
*UIConstraints: *PageRegion FXPostcard *FXRegionalPaperSetting Legal
*UIConstraints: *PageRegion DoublePostcardRotated *FXRegionalPaperSetting Legal
*UIConstraints: *PageRegion EnvChou3 *FXRegionalPaperSetting Legal
*UIConstraints: *PageRegion FX8-KAI *FXRegionalPaperSetting Legal
*UIConstraints: *PageRegion FX16-KAI *FXRegionalPaperSetting Legal
*UIConstraints: *PageRegion FX8-KAI-GCO *FXRegionalPaperSetting Legal
*UIConstraints: *PageRegion FX16-KAI-GCO *FXRegionalPaperSetting Legal
*UIConstraints: *PageRegion B4 *FXRegionalPaperSetting Inch
*UIConstraints: *PageRegion B6 *FXRegionalPaperSetting Inch
*UIConstraints: *PageRegion FXPostcard *FXRegionalPaperSetting Inch
*UIConstraints: *PageRegion DoublePostcardRotated *FXRegionalPaperSetting Inch
*UIConstraints: *PageRegion EnvChou3 *FXRegionalPaperSetting Inch
*UIConstraints: *PageRegion FX8-KAI *FXRegionalPaperSetting Inch
*UIConstraints: *PageRegion FX16-KAI *FXRegionalPaperSetting Inch
*UIConstraints: *PageRegion FX8-KAI-GCO *FXRegionalPaperSetting Inch
*UIConstraints: *PageRegion FX16-KAI-GCO *FXRegionalPaperSetting Inch
*UIConstraints: *FXSwitchPaperSize GCO *PageRegion FX8-KAI
*UIConstraints: *FXSwitchPaperSize GCO *PageRegion FX16-KAI
*UIConstraints: *PageRegion FX8-KAI *FXSwitchPaperSize GCO
*UIConstraints: *PageRegion FX16-KAI *FXSwitchPaperSize GCO
*UIConstraints: *FXSwitchPaperSize Taiwan *PageRegion FX8-KAI-GCO
*UIConstraints: *FXSwitchPaperSize Taiwan *PageRegion FX16-KAI-GCO
*UIConstraints: *PageRegion FX8-KAI-GCO *FXSwitchPaperSize Taiwan
*UIConstraints: *PageRegion FX16-KAI-GCO *FXSwitchPaperSize Taiwan
*UIConstraints: *PageRegion B6 *InputSlot MediaTypeAPS
*UIConstraints: *PageRegion B6 *InputSlot 1stTray
*UIConstraints: *PageRegion B6 *InputSlot 2ndTray
*UIConstraints: *PageRegion B6 *InputSlot 3rdTray
*UIConstraints: *PageRegion B6 *InputSlot 4thTray
*UIConstraints: *PageRegion B6 *InputSlot 3rdTrayTTM
*UIConstraints: *PageRegion B6 *InputSlot 4thTrayTTM
*UIConstraints: *PageRegion B6 *InputSlot HCF1
*UIConstraints: *PageRegion A6 *InputSlot MediaTypeAPS
*UIConstraints: *PageRegion A6 *InputSlot 1stTray
*UIConstraints: *PageRegion A6 *InputSlot 2ndTray
*UIConstraints: *PageRegion A6 *InputSlot 3rdTray
*UIConstraints: *PageRegion A6 *InputSlot 4thTray
*UIConstraints: *PageRegion A6 *InputSlot 3rdTrayTTM
*UIConstraints: *PageRegion A6 *InputSlot 4thTrayTTM
*UIConstraints: *PageRegion A6 *InputSlot HCF1
*UIConstraints: *PageRegion FXPostcard *InputSlot MediaTypeAPS
*UIConstraints: *PageRegion FXPostcard *InputSlot 1stTray
*UIConstraints: *PageRegion FXPostcard *InputSlot 2ndTray
*UIConstraints: *PageRegion FXPostcard *InputSlot 3rdTray
*UIConstraints: *PageRegion FXPostcard *InputSlot 4thTray
*UIConstraints: *PageRegion FXPostcard *InputSlot 3rdTrayTTM
*UIConstraints: *PageRegion FXPostcard *InputSlot 4thTrayTTM
*UIConstraints: *PageRegion FXPostcard *InputSlot HCF1
*UIConstraints: *PageRegion DoublePostcardRotated *InputSlot MediaTypeAPS
*UIConstraints: *PageRegion DoublePostcardRotated *InputSlot 1stTray
*UIConstraints: *PageRegion DoublePostcardRotated *InputSlot 2ndTray
*UIConstraints: *PageRegion DoublePostcardRotated *InputSlot 3rdTray
*UIConstraints: *PageRegion DoublePostcardRotated *InputSlot 4thTray
*UIConstraints: *PageRegion DoublePostcardRotated *InputSlot 3rdTrayTTM
*UIConstraints: *PageRegion DoublePostcardRotated *InputSlot 4thTrayTTM
*UIConstraints: *PageRegion DoublePostcardRotated *InputSlot HCF1
*UIConstraints: *PageRegion FX4x6 *InputSlot MediaTypeAPS
*UIConstraints: *PageRegion FX4x6 *InputSlot 1stTray
*UIConstraints: *PageRegion FX4x6 *InputSlot 2ndTray
*UIConstraints: *PageRegion FX4x6 *InputSlot 3rdTray
*UIConstraints: *PageRegion FX4x6 *InputSlot 4thTray
*UIConstraints: *PageRegion FX4x6 *InputSlot 3rdTrayTTM
*UIConstraints: *PageRegion FX4x6 *InputSlot 4thTrayTTM
*UIConstraints: *PageRegion FX4x6 *InputSlot HCF1
*UIConstraints: *PageRegion EnvChou3 *InputSlot MediaTypeAPS
*UIConstraints: *PageRegion EnvChou3 *InputSlot 1stTray
*UIConstraints: *PageRegion EnvChou3 *InputSlot 2ndTray
*UIConstraints: *PageRegion EnvChou3 *InputSlot 3rdTray
*UIConstraints: *PageRegion EnvChou3 *InputSlot 4thTray
*UIConstraints: *PageRegion EnvChou3 *InputSlot 3rdTrayTTM
*UIConstraints: *PageRegion EnvChou3 *InputSlot 4thTrayTTM
*UIConstraints: *PageRegion EnvChou3 *InputSlot HCF1
*UIConstraints: *PageRegion EnvC4 *InputSlot MediaTypeAPS
*UIConstraints: *PageRegion EnvC4 *InputSlot 1stTray
*UIConstraints: *PageRegion EnvC4 *InputSlot 2ndTray
*UIConstraints: *PageRegion EnvC4 *InputSlot 3rdTray
*UIConstraints: *PageRegion EnvC4 *InputSlot 4thTray
*UIConstraints: *PageRegion EnvC4 *InputSlot 3rdTrayTTM
*UIConstraints: *PageRegion EnvC4 *InputSlot 4thTrayTTM
*UIConstraints: *PageRegion EnvC4 *InputSlot HCF1
*UIConstraints: *PageRegion EnvC5 *InputSlot MediaTypeAPS
*UIConstraints: *PageRegion EnvC5 *InputSlot 1stTray
*UIConstraints: *PageRegion EnvC5 *InputSlot 2ndTray
*UIConstraints: *PageRegion EnvC5 *InputSlot 3rdTray
*UIConstraints: *PageRegion EnvC5 *InputSlot 4thTray
*UIConstraints: *PageRegion EnvC5 *InputSlot 3rdTrayTTM
*UIConstraints: *PageRegion EnvC5 *InputSlot 4thTrayTTM
*UIConstraints: *PageRegion EnvC5 *InputSlot HCF1
*UIConstraints: *PageRegion FX5x7 *InputSlot MediaTypeAPS
*UIConstraints: *PageRegion FX5x7 *InputSlot 1stTray
*UIConstraints: *PageRegion FX5x7 *InputSlot 2ndTray
*UIConstraints: *PageRegion FX5x7 *InputSlot 3rdTray
*UIConstraints: *PageRegion FX5x7 *InputSlot 4thTray
*UIConstraints: *PageRegion FX5x7 *InputSlot 3rdTrayTTM
*UIConstraints: *PageRegion FX5x7 *InputSlot 4thTrayTTM
*UIConstraints: *PageRegion FX5x7 *InputSlot HCF1
*UIConstraints: *PageRegion 8x10 *InputSlot MediaTypeAPS
*UIConstraints: *PageRegion 8x10 *InputSlot 1stTray
*UIConstraints: *PageRegion 8x10 *InputSlot 2ndTray
*UIConstraints: *PageRegion 8x10 *InputSlot 3rdTray
*UIConstraints: *PageRegion 8x10 *InputSlot 4thTray
*UIConstraints: *PageRegion 8x10 *InputSlot 3rdTrayTTM
*UIConstraints: *PageRegion 8x10 *InputSlot 4thTrayTTM
*UIConstraints: *PageRegion 8x10 *InputSlot HCF1
*UIConstraints: *PageRegion FX846x124 *InputSlot MediaTypeAPS
*UIConstraints: *PageRegion FX846x124 *InputSlot 1stTray
*UIConstraints: *PageRegion FX846x124 *InputSlot 2ndTray
*UIConstraints: *PageRegion FX846x124 *InputSlot 3rdTray
*UIConstraints: *PageRegion FX846x124 *InputSlot 4thTray
*UIConstraints: *PageRegion FX846x124 *InputSlot 3rdTrayTTM
*UIConstraints: *PageRegion FX846x124 *InputSlot 4thTrayTTM
*UIConstraints: *PageRegion FX846x124 *InputSlot HCF1
*UIConstraints: *PageRegion FX11x15 *InputSlot MediaTypeAPS
*UIConstraints: *PageRegion FX11x15 *InputSlot 1stTray
*UIConstraints: *PageRegion FX11x15 *InputSlot 2ndTray
*UIConstraints: *PageRegion FX11x15 *InputSlot 3rdTray
*UIConstraints: *PageRegion FX11x15 *InputSlot 4thTray
*UIConstraints: *PageRegion FX11x15 *InputSlot 3rdTrayTTM
*UIConstraints: *PageRegion FX11x15 *InputSlot 4thTrayTTM
*UIConstraints: *PageRegion FX11x15 *InputSlot HCF1
*UIConstraints: *PageRegion FXA4Cover *InputSlot MediaTypeAPS
*UIConstraints: *PageRegion FXA4Cover *InputSlot 1stTray
*UIConstraints: *PageRegion FXA4Cover *InputSlot 2ndTray
*UIConstraints: *PageRegion FXA4Cover *InputSlot 3rdTray
*UIConstraints: *PageRegion FXA4Cover *InputSlot 4thTray
*UIConstraints: *PageRegion FXA4Cover *InputSlot 3rdTrayTTM
*UIConstraints: *PageRegion FXA4Cover *InputSlot 4thTrayTTM
*UIConstraints: *PageRegion FXA4Cover *InputSlot HCF1
*UIConstraints: *PageRegion 9x11 *InputSlot MediaTypeAPS
*UIConstraints: *PageRegion 9x11 *InputSlot 1stTray
*UIConstraints: *PageRegion 9x11 *InputSlot 2ndTray
*UIConstraints: *PageRegion 9x11 *InputSlot 3rdTray
*UIConstraints: *PageRegion 9x11 *InputSlot 4thTray
*UIConstraints: *PageRegion 9x11 *InputSlot 3rdTrayTTM
*UIConstraints: *PageRegion 9x11 *InputSlot 4thTrayTTM
*UIConstraints: *PageRegion 9x11 *InputSlot HCF1
*UIConstraints: *PageRegion EnvMonarch *InputSlot MediaTypeAPS
*UIConstraints: *PageRegion EnvMonarch *InputSlot 1stTray
*UIConstraints: *PageRegion EnvMonarch *InputSlot 2ndTray
*UIConstraints: *PageRegion EnvMonarch *InputSlot 3rdTray
*UIConstraints: *PageRegion EnvMonarch *InputSlot 4thTray
*UIConstraints: *PageRegion EnvMonarch *InputSlot 3rdTrayTTM
*UIConstraints: *PageRegion EnvMonarch *InputSlot 4thTrayTTM
*UIConstraints: *PageRegion EnvMonarch *InputSlot HCF1
*UIConstraints: *PageRegion Env10 *InputSlot MediaTypeAPS
*UIConstraints: *PageRegion Env10 *InputSlot 1stTray
*UIConstraints: *PageRegion Env10 *InputSlot 2ndTray
*UIConstraints: *PageRegion Env10 *InputSlot 3rdTray
*UIConstraints: *PageRegion Env10 *InputSlot 4thTray
*UIConstraints: *PageRegion Env10 *InputSlot 3rdTrayTTM
*UIConstraints: *PageRegion Env10 *InputSlot 4thTrayTTM
*UIConstraints: *PageRegion Env10 *InputSlot HCF1
*UIConstraints: *PageRegion EnvDL *InputSlot MediaTypeAPS
*UIConstraints: *PageRegion EnvDL *InputSlot 1stTray
*UIConstraints: *PageRegion EnvDL *InputSlot 2ndTray
*UIConstraints: *PageRegion EnvDL *InputSlot 3rdTray
*UIConstraints: *PageRegion EnvDL *InputSlot 4thTray
*UIConstraints: *PageRegion EnvDL *InputSlot 3rdTrayTTM
*UIConstraints: *PageRegion EnvDL *InputSlot 4thTrayTTM
*UIConstraints: *PageRegion EnvDL *InputSlot HCF1
*UIConstraints: *InputSlot MediaTypeAPS *PageRegion B6
*UIConstraints: *InputSlot 1stTray *PageRegion B6
*UIConstraints: *InputSlot 2ndTray *PageRegion B6
*UIConstraints: *InputSlot 3rdTray *PageRegion B6
*UIConstraints: *InputSlot 4thTray *PageRegion B6
*UIConstraints: *InputSlot 3rdTrayTTM *PageRegion B6
*UIConstraints: *InputSlot 4thTrayTTM *PageRegion B6
*UIConstraints: *InputSlot HCF1 *PageRegion B6
*UIConstraints: *InputSlot MediaTypeAPS *PageRegion A6
*UIConstraints: *InputSlot 1stTray *PageRegion A6
*UIConstraints: *InputSlot 2ndTray *PageRegion A6
*UIConstraints: *InputSlot 3rdTray *PageRegion A6
*UIConstraints: *InputSlot 4thTray *PageRegion A6
*UIConstraints: *InputSlot 3rdTrayTTM *PageRegion A6
*UIConstraints: *InputSlot 4thTrayTTM *PageRegion A6
*UIConstraints: *InputSlot HCF1 *PageRegion A6
*UIConstraints: *InputSlot MediaTypeAPS *PageRegion FXPostcard
*UIConstraints: *InputSlot 1stTray *PageRegion FXPostcard
*UIConstraints: *InputSlot 2ndTray *PageRegion FXPostcard
*UIConstraints: *InputSlot 3rdTray *PageRegion FXPostcard
*UIConstraints: *InputSlot 4thTray *PageRegion FXPostcard
*UIConstraints: *InputSlot 3rdTrayTTM *PageRegion FXPostcard
*UIConstraints: *InputSlot 4thTrayTTM *PageRegion FXPostcard
*UIConstraints: *InputSlot HCF1 *PageRegion FXPostcard
*UIConstraints: *InputSlot MediaTypeAPS *PageRegion DoublePostcardRotated
*UIConstraints: *InputSlot 1stTray *PageRegion DoublePostcardRotated
*UIConstraints: *InputSlot 2ndTray *PageRegion DoublePostcardRotated
*UIConstraints: *InputSlot 3rdTray *PageRegion DoublePostcardRotated
*UIConstraints: *InputSlot 4thTray *PageRegion DoublePostcardRotated
*UIConstraints: *InputSlot 3rdTrayTTM *PageRegion DoublePostcardRotated
*UIConstraints: *InputSlot 4thTrayTTM *PageRegion DoublePostcardRotated
*UIConstraints: *InputSlot HCF1 *PageRegion DoublePostcardRotated
*UIConstraints: *InputSlot MediaTypeAPS *PageRegion FX4x6
*UIConstraints: *InputSlot 1stTray *PageRegion FX4x6
*UIConstraints: *InputSlot 2ndTray *PageRegion FX4x6
*UIConstraints: *InputSlot 3rdTray *PageRegion FX4x6
*UIConstraints: *InputSlot 4thTray *PageRegion FX4x6
*UIConstraints: *InputSlot 3rdTrayTTM *PageRegion FX4x6
*UIConstraints: *InputSlot 4thTrayTTM *PageRegion FX4x6
*UIConstraints: *InputSlot HCF1 *PageRegion FX4x6
*UIConstraints: *InputSlot MediaTypeAPS *PageRegion EnvChou3
*UIConstraints: *InputSlot 1stTray *PageRegion EnvChou3
*UIConstraints: *InputSlot 2ndTray *PageRegion EnvChou3
*UIConstraints: *InputSlot 3rdTray *PageRegion EnvChou3
*UIConstraints: *InputSlot 4thTray *PageRegion EnvChou3
*UIConstraints: *InputSlot 3rdTrayTTM *PageRegion EnvChou3
*UIConstraints: *InputSlot 4thTrayTTM *PageRegion EnvChou3
*UIConstraints: *InputSlot HCF1 *PageRegion EnvChou3
*UIConstraints: *InputSlot MediaTypeAPS *PageRegion EnvC4
*UIConstraints: *InputSlot 1stTray *PageRegion EnvC4
*UIConstraints: *InputSlot 2ndTray *PageRegion EnvC4
*UIConstraints: *InputSlot 3rdTray *PageRegion EnvC4
*UIConstraints: *InputSlot 4thTray *PageRegion EnvC4
*UIConstraints: *InputSlot 3rdTrayTTM *PageRegion EnvC4
*UIConstraints: *InputSlot 4thTrayTTM *PageRegion EnvC4
*UIConstraints: *InputSlot HCF1 *PageRegion EnvC4
*UIConstraints: *InputSlot MediaTypeAPS *PageRegion EnvC5
*UIConstraints: *InputSlot 1stTray *PageRegion EnvC5
*UIConstraints: *InputSlot 2ndTray *PageRegion EnvC5
*UIConstraints: *InputSlot 3rdTray *PageRegion EnvC5
*UIConstraints: *InputSlot 4thTray *PageRegion EnvC5
*UIConstraints: *InputSlot 3rdTrayTTM *PageRegion EnvC5
*UIConstraints: *InputSlot 4thTrayTTM *PageRegion EnvC5
*UIConstraints: *InputSlot HCF1 *PageRegion EnvC5
*UIConstraints: *InputSlot MediaTypeAPS *PageRegion FX5x7
*UIConstraints: *InputSlot 1stTray *PageRegion FX5x7
*UIConstraints: *InputSlot 2ndTray *PageRegion FX5x7
*UIConstraints: *InputSlot 3rdTray *PageRegion FX5x7
*UIConstraints: *InputSlot 4thTray *PageRegion FX5x7
*UIConstraints: *InputSlot 3rdTrayTTM *PageRegion FX5x7
*UIConstraints: *InputSlot 4thTrayTTM *PageRegion FX5x7
*UIConstraints: *InputSlot HCF1 *PageRegion FX5x7
*UIConstraints: *InputSlot MediaTypeAPS *PageRegion 8x10
*UIConstraints: *InputSlot 1stTray *PageRegion 8x10
*UIConstraints: *InputSlot 2ndTray *PageRegion 8x10
*UIConstraints: *InputSlot 3rdTray *PageRegion 8x10
*UIConstraints: *InputSlot 4thTray *PageRegion 8x10
*UIConstraints: *InputSlot 3rdTrayTTM *PageRegion 8x10
*UIConstraints: *InputSlot 4thTrayTTM *PageRegion 8x10
*UIConstraints: *InputSlot HCF1 *PageRegion 8x10
*UIConstraints: *InputSlot MediaTypeAPS *PageRegion FX846x124
*UIConstraints: *InputSlot 1stTray *PageRegion FX846x124
*UIConstraints: *InputSlot 2ndTray *PageRegion FX846x124
*UIConstraints: *InputSlot 3rdTray *PageRegion FX846x124
*UIConstraints: *InputSlot 4thTray *PageRegion FX846x124
*UIConstraints: *InputSlot 3rdTrayTTM *PageRegion FX846x124
*UIConstraints: *InputSlot 4thTrayTTM *PageRegion FX846x124
*UIConstraints: *InputSlot HCF1 *PageRegion FX846x124
*UIConstraints: *InputSlot MediaTypeAPS *PageRegion FX11x15
*UIConstraints: *InputSlot 1stTray *PageRegion FX11x15
*UIConstraints: *InputSlot 2ndTray *PageRegion FX11x15
*UIConstraints: *InputSlot 3rdTray *PageRegion FX11x15
*UIConstraints: *InputSlot 4thTray *PageRegion FX11x15
*UIConstraints: *InputSlot 3rdTrayTTM *PageRegion FX11x15
*UIConstraints: *InputSlot 4thTrayTTM *PageRegion FX11x15
*UIConstraints: *InputSlot HCF1 *PageRegion FX11x15
*UIConstraints: *InputSlot MediaTypeAPS *PageRegion FXA4Cover
*UIConstraints: *InputSlot 1stTray *PageRegion FXA4Cover
*UIConstraints: *InputSlot 2ndTray *PageRegion FXA4Cover
*UIConstraints: *InputSlot 3rdTray *PageRegion FXA4Cover
*UIConstraints: *InputSlot 4thTray *PageRegion FXA4Cover
*UIConstraints: *InputSlot 3rdTrayTTM *PageRegion FXA4Cover
*UIConstraints: *InputSlot 4thTrayTTM *PageRegion FXA4Cover
*UIConstraints: *InputSlot HCF1 *PageRegion FXA4Cover
*UIConstraints: *InputSlot MediaTypeAPS *PageRegion 9x11
*UIConstraints: *InputSlot 1stTray *PageRegion 9x11
*UIConstraints: *InputSlot 2ndTray *PageRegion 9x11
*UIConstraints: *InputSlot 3rdTray *PageRegion 9x11
*UIConstraints: *InputSlot 4thTray *PageRegion 9x11
*UIConstraints: *InputSlot 3rdTrayTTM *PageRegion 9x11
*UIConstraints: *InputSlot 4thTrayTTM *PageRegion 9x11
*UIConstraints: *InputSlot HCF1 *PageRegion 9x11
*UIConstraints: *InputSlot MediaTypeAPS *PageRegion EnvMonarch
*UIConstraints: *InputSlot 1stTray *PageRegion EnvMonarch
*UIConstraints: *InputSlot 2ndTray *PageRegion EnvMonarch
*UIConstraints: *InputSlot 3rdTray *PageRegion EnvMonarch
*UIConstraints: *InputSlot 4thTray *PageRegion EnvMonarch
*UIConstraints: *InputSlot 3rdTrayTTM *PageRegion EnvMonarch
*UIConstraints: *InputSlot 4thTrayTTM *PageRegion EnvMonarch
*UIConstraints: *InputSlot HCF1 *PageRegion EnvMonarch
*UIConstraints: *InputSlot MediaTypeAPS *PageRegion Env10
*UIConstraints: *InputSlot 1stTray *PageRegion Env10
*UIConstraints: *InputSlot 2ndTray *PageRegion Env10
*UIConstraints: *InputSlot 3rdTray *PageRegion Env10
*UIConstraints: *InputSlot 4thTray *PageRegion Env10
*UIConstraints: *InputSlot 3rdTrayTTM *PageRegion Env10
*UIConstraints: *InputSlot 4thTrayTTM *PageRegion Env10
*UIConstraints: *InputSlot HCF1 *PageRegion Env10
*UIConstraints: *InputSlot MediaTypeAPS *PageRegion EnvDL
*UIConstraints: *InputSlot 1stTray *PageRegion EnvDL
*UIConstraints: *InputSlot 2ndTray *PageRegion EnvDL
*UIConstraints: *InputSlot 3rdTray *PageRegion EnvDL
*UIConstraints: *InputSlot 4thTray *PageRegion EnvDL
*UIConstraints: *InputSlot 3rdTrayTTM *PageRegion EnvDL
*UIConstraints: *InputSlot 4thTrayTTM *PageRegion EnvDL
*UIConstraints: *InputSlot HCF1 *PageRegion EnvDL
*UIConstraints: *PageRegion B6 *ManualFeed False
*UIConstraints: *PageRegion A6 *ManualFeed False
*UIConstraints: *PageRegion FXPostcard *ManualFeed False
*UIConstraints: *PageRegion DoublePostcardRotated *ManualFeed False
*UIConstraints: *PageRegion FX4x6 *ManualFeed False
*UIConstraints: *PageRegion EnvChou3 *ManualFeed False
*UIConstraints: *PageRegion EnvC4 *ManualFeed False
*UIConstraints: *PageRegion EnvC5 *ManualFeed False
*UIConstraints: *PageRegion FX5x7 *ManualFeed False
*UIConstraints: *PageRegion 8x10 *ManualFeed False
*UIConstraints: *PageRegion FX846x124 *ManualFeed False
*UIConstraints: *PageRegion FX11x15 *ManualFeed False
*UIConstraints: *PageRegion FXA4Cover *ManualFeed False
*UIConstraints: *PageRegion 9x11 *ManualFeed False
*UIConstraints: *PageRegion EnvMonarch *ManualFeed False
*UIConstraints: *PageRegion Env10 *ManualFeed False
*UIConstraints: *PageRegion EnvDL *ManualFeed False
*UIConstraints: *ManualFeed False *PageRegion B6
*UIConstraints: *ManualFeed False *PageRegion A6
*UIConstraints: *ManualFeed False *PageRegion FXPostcard
*UIConstraints: *ManualFeed False *PageRegion DoublePostcardRotated
*UIConstraints: *ManualFeed False *PageRegion FX4x6
*UIConstraints: *ManualFeed False *PageRegion EnvChou3
*UIConstraints: *ManualFeed False *PageRegion EnvC4
*UIConstraints: *ManualFeed False *PageRegion EnvC5
*UIConstraints: *ManualFeed False *PageRegion FX5x7
*UIConstraints: *ManualFeed False *PageRegion 8x10
*UIConstraints: *ManualFeed False *PageRegion FX846x124
*UIConstraints: *ManualFeed False *PageRegion FX11x15
*UIConstraints: *ManualFeed False *PageRegion FXA4Cover
*UIConstraints: *ManualFeed False *PageRegion 9x11
*UIConstraints: *ManualFeed False *PageRegion EnvMonarch
*UIConstraints: *ManualFeed False *PageRegion Env10
*UIConstraints: *ManualFeed False *PageRegion EnvDL
*UIConstraints: *PageRegion SRA3 *InputSlot 1stTray
*UIConstraints: *PageRegion SRA3 *InputSlot 3rdTrayTTM
*UIConstraints: *PageRegion SRA3 *InputSlot 4thTrayTTM
*UIConstraints: *PageRegion SRA3 *InputSlot HCF1
*UIConstraints: *PageRegion TabloidExtra *InputSlot 1stTray
*UIConstraints: *PageRegion TabloidExtra *InputSlot 3rdTrayTTM
*UIConstraints: *PageRegion TabloidExtra *InputSlot 4thTrayTTM
*UIConstraints: *PageRegion TabloidExtra *InputSlot HCF1
*UIConstraints: *InputSlot 1stTray *PageRegion SRA3
*UIConstraints: *InputSlot 3rdTrayTTM *PageRegion SRA3
*UIConstraints: *InputSlot 4thTrayTTM *PageRegion SRA3
*UIConstraints: *InputSlot HCF1 *PageRegion SRA3
*UIConstraints: *InputSlot 1stTray *PageRegion TabloidExtra
*UIConstraints: *InputSlot 3rdTrayTTM *PageRegion TabloidExtra
*UIConstraints: *InputSlot 4thTrayTTM *PageRegion TabloidExtra
*UIConstraints: *InputSlot HCF1 *PageRegion TabloidExtra
*UIConstraints: *PageRegion A3 *InputSlot 3rdTrayTTM
*UIConstraints: *PageRegion A3 *InputSlot 4thTrayTTM
*UIConstraints: *PageRegion A3 *InputSlot HCF1
*UIConstraints: *PageRegion B4 *InputSlot 3rdTrayTTM
*UIConstraints: *PageRegion B4 *InputSlot 4thTrayTTM
*UIConstraints: *PageRegion B4 *InputSlot HCF1
*UIConstraints: *PageRegion A5 *InputSlot 3rdTrayTTM
*UIConstraints: *PageRegion A5 *InputSlot 4thTrayTTM
*UIConstraints: *PageRegion A5 *InputSlot HCF1
*UIConstraints: *PageRegion Statement *InputSlot 3rdTrayTTM
*UIConstraints: *PageRegion Statement *InputSlot 4thTrayTTM
*UIConstraints: *PageRegion Statement *InputSlot HCF1
*UIConstraints: *PageRegion Legal *InputSlot 3rdTrayTTM
*UIConstraints: *PageRegion Legal *InputSlot 4thTrayTTM
*UIConstraints: *PageRegion Legal *InputSlot HCF1
*UIConstraints: *PageRegion FanFoldGermanLegal *InputSlot 3rdTrayTTM
*UIConstraints: *PageRegion FanFoldGermanLegal *InputSlot 4thTrayTTM
*UIConstraints: *PageRegion FanFoldGermanLegal *InputSlot HCF1
*UIConstraints: *PageRegion Tabloid *InputSlot 3rdTrayTTM
*UIConstraints: *PageRegion Tabloid *InputSlot 4thTrayTTM
*UIConstraints: *PageRegion Tabloid *InputSlot HCF1
*UIConstraints: *PageRegion FX8-KAI *InputSlot 3rdTrayTTM
*UIConstraints: *PageRegion FX8-KAI *InputSlot 4thTrayTTM
*UIConstraints: *PageRegion FX8-KAI *InputSlot HCF1
*UIConstraints: *PageRegion FX16-KAI *InputSlot 3rdTrayTTM
*UIConstraints: *PageRegion FX16-KAI *InputSlot 4thTrayTTM
*UIConstraints: *PageRegion FX16-KAI *InputSlot HCF1
*UIConstraints: *PageRegion FX8-KAI-GCO *InputSlot 3rdTrayTTM
*UIConstraints: *PageRegion FX8-KAI-GCO *InputSlot 4thTrayTTM
*UIConstraints: *PageRegion FX8-KAI-GCO *InputSlot HCF1
*UIConstraints: *PageRegion FX16-KAI-GCO *InputSlot 3rdTrayTTM
*UIConstraints: *PageRegion FX16-KAI-GCO *InputSlot 4thTrayTTM
*UIConstraints: *PageRegion FX16-KAI-GCO *InputSlot HCF1
*UIConstraints: *InputSlot 3rdTrayTTM *PageRegion A3
*UIConstraints: *InputSlot 4thTrayTTM *PageRegion A3
*UIConstraints: *InputSlot HCF1 *PageRegion A3
*UIConstraints: *InputSlot 3rdTrayTTM *PageRegion B4
*UIConstraints: *InputSlot 4thTrayTTM *PageRegion B4
*UIConstraints: *InputSlot HCF1 *PageRegion B4
*UIConstraints: *InputSlot 3rdTrayTTM *PageRegion A5
*UIConstraints: *InputSlot 4thTrayTTM *PageRegion A5
*UIConstraints: *InputSlot HCF1 *PageRegion A5
*UIConstraints: *InputSlot 3rdTrayTTM *PageRegion Statement
*UIConstraints: *InputSlot 4thTrayTTM *PageRegion Statement
*UIConstraints: *InputSlot HCF1 *PageRegion Statement
*UIConstraints: *InputSlot 3rdTrayTTM *PageRegion Legal
*UIConstraints: *InputSlot 4thTrayTTM *PageRegion Legal
*UIConstraints: *InputSlot HCF1 *PageRegion Legal
*UIConstraints: *InputSlot 3rdTrayTTM *PageRegion FanFoldGermanLegal
*UIConstraints: *InputSlot 4thTrayTTM *PageRegion FanFoldGermanLegal
*UIConstraints: *InputSlot HCF1 *PageRegion FanFoldGermanLegal
*UIConstraints: *InputSlot 3rdTrayTTM *PageRegion Tabloid
*UIConstraints: *InputSlot 4thTrayTTM *PageRegion Tabloid
*UIConstraints: *InputSlot HCF1 *PageRegion Tabloid
*UIConstraints: *InputSlot 3rdTrayTTM *PageRegion FX8-KAI
*UIConstraints: *InputSlot 4thTrayTTM *PageRegion FX8-KAI
*UIConstraints: *InputSlot HCF1 *PageRegion FX8-KAI
*UIConstraints: *InputSlot 3rdTrayTTM *PageRegion FX16-KAI
*UIConstraints: *InputSlot 4thTrayTTM *PageRegion FX16-KAI
*UIConstraints: *InputSlot HCF1 *PageRegion FX16-KAI
*UIConstraints: *InputSlot 3rdTrayTTM *PageRegion FX8-KAI-GCO
*UIConstraints: *InputSlot 4thTrayTTM *PageRegion FX8-KAI-GCO
*UIConstraints: *InputSlot HCF1 *PageRegion FX8-KAI-GCO
*UIConstraints: *InputSlot 3rdTrayTTM *PageRegion FX16-KAI-GCO
*UIConstraints: *InputSlot 4thTrayTTM *PageRegion FX16-KAI-GCO
*UIConstraints: *InputSlot HCF1 *PageRegion FX16-KAI-GCO
*UIConstraints: *PageRegion A6 *Duplex DuplexNoTumble
*UIConstraints: *PageRegion A6 *Duplex DuplexTumble
*UIConstraints: *PageRegion FXPostcard *Duplex DuplexNoTumble
*UIConstraints: *PageRegion FXPostcard *Duplex DuplexTumble
*UIConstraints: *PageRegion DoublePostcardRotated *Duplex DuplexNoTumble
*UIConstraints: *PageRegion DoublePostcardRotated *Duplex DuplexTumble
*UIConstraints: *PageRegion FX4x6 *Duplex DuplexNoTumble
*UIConstraints: *PageRegion FX4x6 *Duplex DuplexTumble
*UIConstraints: *PageRegion EnvChou3 *Duplex DuplexNoTumble
*UIConstraints: *PageRegion EnvChou3 *Duplex DuplexTumble
*UIConstraints: *PageRegion EnvC4 *Duplex DuplexNoTumble
*UIConstraints: *PageRegion EnvC4 *Duplex DuplexTumble
*UIConstraints: *PageRegion EnvC5 *Duplex DuplexNoTumble
*UIConstraints: *PageRegion EnvC5 *Duplex DuplexTumble
*UIConstraints: *PageRegion FX5x7 *Duplex DuplexNoTumble
*UIConstraints: *PageRegion FX5x7 *Duplex DuplexTumble
*UIConstraints: *PageRegion EnvMonarch *Duplex DuplexNoTumble
*UIConstraints: *PageRegion EnvMonarch *Duplex DuplexTumble
*UIConstraints: *PageRegion Env10 *Duplex DuplexNoTumble
*UIConstraints: *PageRegion Env10 *Duplex DuplexTumble
*UIConstraints: *PageRegion EnvDL *Duplex DuplexNoTumble
*UIConstraints: *PageRegion EnvDL *Duplex DuplexTumble
*UIConstraints: *Duplex DuplexNoTumble *PageRegion A6
*UIConstraints: *Duplex DuplexTumble *PageRegion A6
*UIConstraints: *Duplex DuplexNoTumble *PageRegion FXPostcard
*UIConstraints: *Duplex DuplexTumble *PageRegion FXPostcard
*UIConstraints: *Duplex DuplexNoTumble *PageRegion DoublePostcardRotated
*UIConstraints: *Duplex DuplexTumble *PageRegion DoublePostcardRotated
*UIConstraints: *Duplex DuplexNoTumble *PageRegion FX4x6
*UIConstraints: *Duplex DuplexTumble *PageRegion FX4x6
*UIConstraints: *Duplex DuplexNoTumble *PageRegion EnvChou3
*UIConstraints: *Duplex DuplexTumble *PageRegion EnvChou3
*UIConstraints: *Duplex DuplexNoTumble *PageRegion EnvC4
*UIConstraints: *Duplex DuplexTumble *PageRegion EnvC4
*UIConstraints: *Duplex DuplexNoTumble *PageRegion EnvC5
*UIConstraints: *Duplex DuplexTumble *PageRegion EnvC5
*UIConstraints: *Duplex DuplexNoTumble *PageRegion FX5x7
*UIConstraints: *Duplex DuplexTumble *PageRegion FX5x7
*UIConstraints: *Duplex DuplexNoTumble *PageRegion EnvMonarch
*UIConstraints: *Duplex DuplexTumble *PageRegion EnvMonarch
*UIConstraints: *Duplex DuplexNoTumble *PageRegion Env10
*UIConstraints: *Duplex DuplexTumble *PageRegion Env10
*UIConstraints: *Duplex DuplexNoTumble *PageRegion EnvDL
*UIConstraints: *Duplex DuplexTumble *PageRegion EnvDL
*% =============== Device Capabilities ===============
*LanguageLevel: "3"
*Protocols: BCP TBCP
*1284Modes Parallel: Compat Nibble ECP
*1284DeviceID: "MANUFACTURER:FUJI XEROX;COMMAND SET:;MODEL:ApeosPort-IV C5570 ;CLASS:PRINTER;COMPATIBLE ID:;DESCRIPTION:FUJI XEROX ApeosPort-IV C5570 ;"

*FreeVM: "71317760"
*VMOption 2048Meg/2048MB: "71317760"

*ColorDevice: True
*DefaultColorSpace: CMYK
*VariablePaperSize: True
*LandscapeOrientation: Plus90
*TTRasterizer: Type42
*?TTRasterizer: "
save
    42 /FontType resourcestatus
    {pop pop (Type42)}{(No Type42)} ifelse = flush
restore
"
*End
*FileSystem: True
*?FileSystem: "
  save false
   (%disk?%)
   { currentdevparams dup /Writeable known
      { /Writeable get {pop true} if }  { pop } ifelse
    } 10 string /IODevice resourceforall
    {(True)}{(False)} ifelse = flush
 restore
"
*End

*Throughput: "50"
*Password: "()" 
*ExitServer: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not { 
     (WARNING: Cannot modify initial VM.) =
     (Missing or invalid password.) =
     (Please contact the author of this software.) = flush quit
     } if
"
*End
*Reset: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not { 
    (WARNING: Cannot reset printer.) =
    (Missing or invalid password.) =
    (Please contact the author of this software.) = flush quit
    } if
 systemdict /quit get exec
 (WARNING : Printer Reset Failed.) = flush
"
*End

*SuggestedJobTimeout: "0"
*SuggestedWaitTimeout: "300"
*PrintPSErrors: True

*% OutputMode Information ===================
*DefaultResolution: 600dpi
*?Resolution: "
save
    currentpagedevice /HWResolution get dup aload pop eq
    {0 get cvi 9 string cvs print}
    {aload pop exch cvi 9 string cvs print (x) print cvi 9 string cvs print}
    ifelse (dpi) =
restore
"
*End

*AccurateScreensSupport: True

*% Paper Handling ===================

*RequiresPageRegion All: True

*OpenUI *PageSize/Paper Size: PickOne
*OrderDependency: 80.0 AnySetup *PageSize
*DefaultPageSize: A4
*PageSize A3/A3 (297 x 420mm): "
    6 dict dup /PageSize [842 1191] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize B4/B4 (257 x 364mm): "
    6 dict dup /PageSize [729 1032] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize A4/A4 (210 x 297mm): "
    6 dict dup /PageSize [595 842] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize B5/B5 (182 x 257mm): "
    6 dict dup /PageSize [516 729] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize A5/A5 (148 x 210mm): "
    6 dict dup /PageSize [420 595] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize B6/B6 (128 x 182mm): "
    6 dict dup /PageSize [363 516] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize A6/A6 (105 x 148mm): "
    6 dict dup /PageSize [297 420] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize FXPostcard/Postcard (100 x 148mm): "
    6 dict dup /PageSize [283 420] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize DoublePostcardRotated/Postcard (148 x 200mm): "
    6 dict dup /PageSize [420 567] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize FX4x6/Postcard (4 x 6"): "
    6 dict dup /PageSize [288 432] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize EnvChou3/Envelope (120 x 235mm): "
    6 dict dup /PageSize [340 666] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize EnvC4/C4 Envelope (229 x 324mm): "
    6 dict dup /PageSize [649 918] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize EnvC5/C5 Envelope (162 x 229mm): "
    6 dict dup /PageSize [459 649] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize SRA3/SRA3 (320 x 450mm): "
    6 dict dup /PageSize [907 1274] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize FX5x7/5 x 7": "
    6 dict dup /PageSize [360 504] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize Statement/Statement (5.5 x 8.5"): "
    6 dict dup /PageSize [396 612] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize Executive/Executive (7.25 x 10.5"): "
    6 dict dup /PageSize [522 756] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize 8x10/8 x 10": "
    6 dict dup /PageSize [576 720] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize FX846x124/215 x 315mm: "
    6 dict dup /PageSize [609 892] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize Letter/Letter (8.5 x 11"): "
    6 dict dup /PageSize [612 792] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize Legal/Legal (8.5 x 14"): "
    6 dict dup /PageSize [612 1008] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize FanFoldGermanLegal/8.5 x 13": "
    6 dict dup /PageSize [612 936] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize FX11x15/11 x 15": "
    6 dict dup /PageSize [792 1080] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize Tabloid/Tabloid (11 x 17"): "
    6 dict dup /PageSize [792 1224] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize TabloidExtra/Oversized Tabloid (12 x 18"): "
    6 dict dup /PageSize [864 1296] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize FX8-KAI/8K (267 x 388mm): "
    6 dict dup /PageSize [757 1100] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize FX16-KAI/16K (194 x 267mm): "
    6 dict dup /PageSize [550 757] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize FX8-KAI-GCO/8K (270 x 390mm): "
    6 dict dup /PageSize [765 1106] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize FX16-KAI-GCO/16K (195 x 270mm): "
    6 dict dup /PageSize [553 765] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize FXA4Cover/A4 Cover (223 x 297mm): "
    6 dict dup /PageSize [632 842] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize 9x11/9 x 11": "
    6 dict dup /PageSize [648 792] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize EnvMonarch/Monarch Envelope (3.9 x 7.5"): "
    6 dict dup /PageSize [279 540] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize Env10/No. 10 Envelope (4.1 x 9.5"): "
    6 dict dup /PageSize [297 684] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageSize EnvDL/DL Envelope (110 x 220 mm): "
    6 dict dup /PageSize [312 624] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    dup /MediaPosition null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*?PageSize: "
    save
    currentpagedevice /PageSize get aload pop
    2 copy gt {exch} if 
    (Unknown) 
    50 dict
    dup [842 1191] (A3) put
    dup [729 1032] (B4) put
    dup [595 842] (A4) put
    dup [516 729] (B5) put
    dup [420 595] (A5) put
    dup [363 516] (B6) put
    dup [297 420] (A6) put
    dup [283 420] (FXPostcard) put
    dup [420 567] (DoublePostcardRotated) put
    dup [288 432] (FX4x6) put
    dup [340 666] (EnvChou3) put
    dup [649 918] (EnvC4) put
    dup [459 649] (EnvC5) put
    dup [907 1274] (SRA3) put
    dup [360 504] (FX5x7) put
    dup [396 612] (Statement) put
    dup [522 756] (Executive) put
    dup [576 720] (8x10) put
    dup [609 892] (FX846x124) put
    dup [612 792] (Letter) put
    dup [612 1008] (Legal) put
    dup [612 936] (FanFoldGermanLegal) put
    dup [792 1080] (FX11x15) put
    dup [792 1224] (Tabloid) put
    dup [864 1296] (TabloidExtra) put
    dup [757 1100] (FX8-KAI) put
    dup [550 757] (FX16-KAI) put
    dup [765 1106] (FX8-KAI-GCO) put
    dup [553 765] (FX16-KAI-GCO) put
    dup [632 842] (FXA4Cover) put
    dup [648 792] (9x11) put
    dup [279 540] (EnvMonarch) put
    dup [297 684] (Env10) put
    dup [312 624] (EnvDL) put
    { exch aload pop 4 index sub abs 5 le exch 
      5 index sub abs 5 le and 
      {exch pop exit} {pop} ifelse
    } bind forall
    = flush pop pop
    restore
"
*End
*CloseUI: *PageSize

*OpenUI *PageRegion: PickOne
*OrderDependency: 90.0 AnySetup *PageRegion
*DefaultPageRegion: A4
*PageRegion A3/A3 (297 x 420mm): "
    6 dict dup /PageSize [842 1191] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion B4/B4 (257 x 364mm): "
    6 dict dup /PageSize [729 1032] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion A4/A4 (210 x 297mm): "
    6 dict dup /PageSize [595 842] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion B5/B5 (182 x 257mm): "
    6 dict dup /PageSize [516 729] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion A5/A5 (148 x 210mm): "
    6 dict dup /PageSize [420 595] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion B6/B6 (128 x 182mm): "
    6 dict dup /PageSize [363 516] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion A6/A6 (105 x 148mm): "
    6 dict dup /PageSize [297 420] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion FXPostcard/Postcard (100 x 148mm): "
    6 dict dup /PageSize [283 420] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion DoublePostcardRotated/Postcard (148 x 200mm): "
    6 dict dup /PageSize [420 567] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion FX4x6/Postcard (4 x 6"): "
    6 dict dup /PageSize [288 432] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion EnvChou3/Envelope (120 x 235mm): "
    6 dict dup /PageSize [340 666] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion EnvC4/C4 Envelope (229 x 324mm): "
    6 dict dup /PageSize [649 918] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion EnvC5/C5 Envelope (162 x 229mm): "
    6 dict dup /PageSize [459 649] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion SRA3/SRA3 (320 x 450mm): "
    6 dict dup /PageSize [907 1274] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion FX5x7/5 x 7": "
    6 dict dup /PageSize [360 504] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion Statement/Statement (5.5 x 8.5"): "
    6 dict dup /PageSize [396 612] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion Executive/Executive (7.25 x 10.5"): "
    6 dict dup /PageSize [522 756] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion 8x10/8 x 10": "
    6 dict dup /PageSize [576 720] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion FX846x124/215 x 315mm: "
    6 dict dup /PageSize [609 892] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion Letter/Letter (8.5 x 11"): "
    6 dict dup /PageSize [612 792] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion Legal/Legal (8.5 x 14"): "
    6 dict dup /PageSize [612 1008] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion FanFoldGermanLegal/8.5 x 13": "
    6 dict dup /PageSize [612 936] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion FX11x15/11 x 15": "
    6 dict dup /PageSize [792 1080] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion Tabloid/Tabloid (11 x 17"): "
    6 dict dup /PageSize [792 1224] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion TabloidExtra/Oversized Tabloid (12 x 18"): "
    6 dict dup /PageSize [864 1296] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion FX8-KAI/8K (267 x 388mm): "
    6 dict dup /PageSize [757 1100] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion FX16-KAI/16K (194 x 267mm): "
    6 dict dup /PageSize [550 757] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion FX8-KAI-GCO/8K (270 x 390mm): "
    6 dict dup /PageSize [765 1106] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion FX16-KAI-GCO/16K (195 x 270mm): "
    6 dict dup /PageSize [553 765] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion FXA4Cover/A4 Cover (223 x 297mm): "
    6 dict dup /PageSize [632 842] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion 9x11/9 x 11": "
    6 dict dup /PageSize [648 792] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion EnvMonarch/Monarch Envelope (3.9 x 7.5"): "
    6 dict dup /PageSize [279 540] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion Env10/No. 10 Envelope (4.1 x 9.5"): "
    6 dict dup /PageSize [297 684] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*PageRegion EnvDL/DL Envelope (110 x 220 mm): "
    6 dict dup /PageSize [312 624] put dup /ImagingBBox null put 
    dup /LeadingEdge null put
    currentpagedevice
    /Policies 2 copy known 
    { get /PageSize 2 copy known 
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse setpagedevice
"
*End
*CloseUI: *PageRegion

*DefaultImageableArea: A4
*ImageableArea A3/A3 (297 x 420mm): "11.62 11.62 830.27 1178.93 "
*ImageableArea B4/B4 (257 x 364mm): "11.62 11.62 716.88 1020.19 "
*ImageableArea A4/A4 (210 x 297mm): "11.62 11.62 583.65 830.27 "
*ImageableArea B5/B5 (182 x 257mm): "11.62 11.62 504.28 716.88 "
*ImageableArea A5/A5 (148 x 210mm): "11.62 11.62 407.91 583.65 "
*ImageableArea B6/B6 (128 x 182mm): "11.62 11.62 351.21 504.28 "
*ImageableArea A6/A6 (105 x 148mm): "11.62 11.62 286.02 407.91 "
*ImageableArea FXPostcard/Postcard (100 x 148mm): "11.62 11.62 271.84 407.91 "
*ImageableArea DoublePostcardRotated/Postcard (148 x 200mm): "11.62 11.62 407.91 555.31 "
*ImageableArea FX4x6/Postcard (4 x 6"): "11.62 11.62 276.38 420.38 "
*ImageableArea EnvChou3/Envelope (120 x 235mm): "11.62 11.62 328.54 654.52 "
*ImageableArea EnvC4/C4 Envelope (229 x 324mm): "11.62 11.62 637.51 906.80 "
*ImageableArea EnvC5/C5 Envelope (162 x 229mm): "11.62 11.62 447.59 637.51 "
*ImageableArea SRA3/SRA3 (320 x 450mm): "24.09 11.62 882.99 1262.83 "
*ImageableArea FX5x7/5 x 7": "11.62 11.62 348.38 492.38 "
*ImageableArea Statement/Statement (5.5 x 8.5"): "11.62 11.62 384.38 600.38 "
*ImageableArea Executive/Executive (7.25 x 10.5"): "11.62 11.62 510.52 744.38 "
*ImageableArea 8x10/8 x 10": "11.62 11.62 564.38 708.38 "
*ImageableArea FX846x124/215 x 315mm: "11.62 11.62 597.83 881.29 "
*ImageableArea Letter/Letter (8.5 x 11"): "11.62 11.62 600.38 780.38 "
*ImageableArea Legal/Legal (8.5 x 14"): "11.62 11.62 600.38 996.38 "
*ImageableArea FanFoldGermanLegal/8.5 x 13": "11.62 11.62 600.38 924.38 "
*ImageableArea FX11x15/11 x 15": "11.62 11.62 780.38 1068.38 "
*ImageableArea Tabloid/Tabloid (11 x 17"): "11.62 11.62 780.38 1212.38 "
*ImageableArea TabloidExtra/Oversized Tabloid (12 x 18"): "11.62 11.62 852.38 1284.38 "
*ImageableArea FX8-KAI/8K (267 x 388mm): "11.62 11.62 745.23 1088.22 "
*ImageableArea FX16-KAI/16K (194 x 267mm): "11.62 11.62 538.30 745.23 "
*ImageableArea FX8-KAI-GCO/8K (270 x 390mm): "11.62 11.62 753.73 1093.89 "
*ImageableArea FX16-KAI-GCO/16K (195 x 270mm): "11.62 11.62 541.13 753.73 "
*ImageableArea FXA4Cover/A4 Cover (223 x 297mm): "11.62 11.62 620.50 830.27 "
*ImageableArea 9x11/9 x 11": "11.62 11.62 636.38 780.38 "
*ImageableArea EnvMonarch/Monarch Envelope (3.9 x 7.5"): "11.62 11.62 267.31 528.38 "
*ImageableArea Env10/No. 10 Envelope (4.1 x 9.5"): "11.62 11.62 285.45 672.38 "
*ImageableArea EnvDL/DL Envelope (110 x 220 mm): "11.62 11.62 300.19 612.00 "
*?ImageableArea: "
save
   3 dict begin
   /cvp { (                ) cvs print ( ) print } bind def
   /upperright {10000 mul floor 10000 div} bind def
   /lowerleft {10000 mul ceiling 10000 div} bind def
   newpath clippath pathbbox
   4 -2 roll exch 2 {lowerleft cvp} repeat
   exch 2 {upperright cvp} repeat (\n) print flush
   end
restore
"
*End

*DefaultPaperDimension: A4
*PaperDimension A3/A3 (297 x 420mm): "842 1191"
*PaperDimension B4/B4 (257 x 364mm): "729 1032"
*PaperDimension A4/A4 (210 x 297mm): "595 842"
*PaperDimension B5/B5 (182 x 257mm): "516 729"
*PaperDimension A5/A5 (148 x 210mm): "420 595"
*PaperDimension B6/B6 (128 x 182mm): "363 516"
*PaperDimension A6/A6 (105 x 148mm): "297 420"
*PaperDimension FXPostcard/Postcard (100 x 148mm): "283 420"
*PaperDimension DoublePostcardRotated/Postcard (148 x 200mm): "420 567"
*PaperDimension FX4x6/Postcard (4 x 6"): "288 432"
*PaperDimension EnvChou3/Envelope (120 x 235mm): "340 666"
*PaperDimension EnvC4/C4 Envelope (229 x 324mm): "649 918"
*PaperDimension EnvC5/C5 Envelope (162 x 229mm): "459 649"
*PaperDimension SRA3/SRA3 (320 x 450mm): "907 1274"
*PaperDimension FX5x7/5 x 7": "360 504"
*PaperDimension Statement/Statement (5.5 x 8.5"): "396 612"
*PaperDimension Executive/Executive (7.25 x 10.5"): "522 756"
*PaperDimension 8x10/8 x 10": "576 720"
*PaperDimension FX846x124/215 x 315mm: "609 892"
*PaperDimension Letter/Letter (8.5 x 11"): "612 792"
*PaperDimension Legal/Legal (8.5 x 14"): "612 1008"
*PaperDimension FanFoldGermanLegal/8.5 x 13": "612 936"
*PaperDimension FX11x15/11 x 15": "792 1080"
*PaperDimension Tabloid/Tabloid (11 x 17"): "792 1224"
*PaperDimension TabloidExtra/Oversized Tabloid (12 x 18"): "864 1296"
*PaperDimension FX8-KAI/8K (267 x 388mm): "757 1100"
*PaperDimension FX16-KAI/16K (194 x 267mm): "550 757"
*PaperDimension FX8-KAI-GCO/8K (270 x 390mm): "765 1106"
*PaperDimension FX16-KAI-GCO/16K (195 x 270mm): "553 765"
*PaperDimension FXA4Cover/A4 Cover (223 x 297mm): "632 842"
*PaperDimension 9x11/9 x 11": "648 792"
*PaperDimension EnvMonarch/Monarch Envelope (3.9 x 7.5"): "279 540"
*PaperDimension Env10/No. 10 Envelope (4.1 x 9.5"): "297 684"
*PaperDimension EnvDL/DL Envelope (110 x 220 mm): "312 624"

*OpenUI *InputSlot/Paper Tray: PickOne
*OrderDependency: 60.0 AnySetup *InputSlot
*DefaultInputSlot: MediaTypeAPS
*InputSlot MediaTypeAPS/Auto Paper Select (Type / Color): "
  5 dict
  dup /MediaPosition null put
  dup /ManualFeed false put
  dup /DeferredMediaSelection true put
  currentpagedevice
   /Policies 2 copy known 
    {get /PageSize 2 copy known
      {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
      {pop pop} ifelse
    }{pop pop} ifelse 
    setpagedevice
"
*End
*InputSlot 1stTray/Tray 1: "
  3 dict begin
  /MediaPosition 0 def
  currentpagedevice /InputAttributes get dup 0 known
  {0 get dup null eq 
   { pop }
   { /MediaClass get /MediaClass exch def } ifelse
  }
  { pop } ifelse
  /DeferredMediaSelection true def
  /ManualFeed false def
  currentdict end setpagedevice
"
*End
*InputSlot 2ndTray/Tray 2: "
  3 dict begin
  /MediaPosition 1 def
  currentpagedevice /InputAttributes get dup 1 known
  {1 get dup null eq 
   { pop }
   { /MediaClass get /MediaClass exch def } ifelse
  }
  { pop } ifelse
  /DeferredMediaSelection true def
  /ManualFeed false def
  currentdict end setpagedevice
"
*End
*InputSlot 3rdTray/Tray 3: "
  3 dict begin
  /MediaPosition 2 def
  currentpagedevice /InputAttributes get dup 2 known
  {2 get dup null eq 
   { pop }
   { /MediaClass get /MediaClass exch def } ifelse
  }
  { pop } ifelse
  /DeferredMediaSelection true def
  /ManualFeed false def
  currentdict end setpagedevice
"
*End
*InputSlot 4thTray/Tray 4: "
  3 dict begin
  /MediaPosition 3 def
  currentpagedevice /InputAttributes get dup 3 known
  {3 get dup null eq 
   { pop }
   { /MediaClass get /MediaClass exch def } ifelse
  }
  { pop } ifelse
  /DeferredMediaSelection true def
  /ManualFeed false def
  currentdict end setpagedevice
"
*End
*InputSlot 3rdTrayTTM/Tray 3 (High Capacity): "
  3 dict begin
  /MediaPosition 2 def
  currentpagedevice /InputAttributes get dup 2 known
  {2 get dup null eq 
   { pop }
   { /MediaClass get /MediaClass exch def } ifelse
  }
  { pop } ifelse
  /DeferredMediaSelection true def
  /ManualFeed false def
  currentdict end setpagedevice
"
*End
*InputSlot 4thTrayTTM/Tray 4 (High Capacity): "
  3 dict begin
  /MediaPosition 3 def
  currentpagedevice /InputAttributes get dup 3 known
  {3 get dup null eq 
   { pop }
   { /MediaClass get /MediaClass exch def } ifelse
  }
  { pop } ifelse
  /DeferredMediaSelection true def
  /ManualFeed false def
  currentdict end setpagedevice
"
*End
*InputSlot HCF1/Tray 6: "
  3 dict begin
  /MediaPosition 4 def
  currentpagedevice /InputAttributes get dup 4 known
  {4 get dup null eq 
   { pop }
   { /MediaClass get /MediaClass exch def } ifelse
  }
  { pop } ifelse
  /DeferredMediaSelection true def
  /ManualFeed false def
  currentdict end setpagedevice
"
*End
*?InputSlot: "
save
  7 dict
  dup 0 (1stTray) put
  dup 1 (2ndTray) put
  dup 2 (3rdTray) put
  dup 3 (4thTray) put
  dup 4 (3rdTrayTTM) put
  dup 5 (4thTrayTTM) put
  dup 6 (HCF1) put
  currentpagedevice dup /MediaPosition known 
  { /MediaPosition get dup null eq {pop pop (MediaTypeAPS)}
    {
    /Custom /ProcSet resourcestatus {
      pop pop /Custom /ProcSet findresource dup /engineoptions known {
        /engineoptions get exec /TandemTray 2 copy known {get {2 add} if}{pop pop} ifelse
      } {pop} ifelse
    } if
    get
    } ifelse
  } {pop pop (Unknown)} ifelse
  = flush
  restore
"
*End
*CloseUI: *InputSlot

*OpenUI *ManualFeed/Tray 5 (Bypass): Boolean
*OrderDependency: 34.0 AnySetup *ManualFeed
*DefaultManualFeed: False
*ManualFeed True: "2 dict dup/ManualFeed true put dup/MediaClass null put setpagedevice"
*ManualFeed False: "2 dict dup/ManualFeed false put dup/MediaClass null put setpagedevice"
*?ManualFeed: "
  save
    currentpagedevice /ManualFeed known
    {currentpagedevice /ManualFeed get {(True)}{(False)}ifelse}
    {(False)} ifelse = flush
  restore
"
*End
*CloseUI: *ManualFeed

*OpenUI *MediaType/Paper Type: PickOne
*OrderDependency: 70.0 AnySetup *MediaType
*DefaultMediaType: Default
*MediaType Default/Printer Default Type: ""
*MediaType FinePaper/Bond: "1 dict dup/MediaClass(fine)put setpagedevice"
*MediaType Stationary/Plain: "1 dict dup/MediaClass(stationary)put setpagedevice"
*MediaType StationaryBack/Plain Reload: "1 dict dup/MediaClass(used)put setpagedevice"
*MediaType RecyclePaper/Recycled: "1 dict dup/MediaClass(recycled)put setpagedevice"
*MediaType Transparency/Transparency: "1 dict dup/MediaClass(transparency)put setpagedevice"
*MediaType ThinPaper/Lightweight: "1 dict dup/MediaClass(thin)put setpagedevice"
*MediaType LabelPaper/Labels: "1 dict dup/MediaClass(label)put setpagedevice"
*MediaType ThickPaper/Heavyweight (HW) (106 - 169gsm): "1 dict dup/MediaClass(thick1)put setpagedevice"
*MediaType ThickPaperBack/HW Reload (106 - 169gsm): "1 dict dup/MediaClass(thick1 side2)put setpagedevice"
*MediaType ThickPaperA/Heavyweight A (106 - 169gsm): "1 dict dup/MediaClass(thick1[A])put setpagedevice"
*MediaType ThickPaperABack/Heavyweight A Reload: "1 dict dup/MediaClass(thick1 side2[A])put setpagedevice"
*MediaType ThickPaperB/Heavyweight B (106 - 169gsm): "1 dict dup/MediaClass(thick1[B])put setpagedevice"
*MediaType ThickPaperBBack/Heavyweight B Reload: "1 dict dup/MediaClass(thick1 side2[B])put setpagedevice"
*MediaType ThickPaperC/Heavyweight C (106 - 169gsm): "1 dict dup/MediaClass(thick1[C])put setpagedevice"
*MediaType ThickPaperCBack/Heavyweight C Reload: "1 dict dup/MediaClass(thick1 side2[C])put setpagedevice"
*MediaType ThickPaperS/Heavyweight S (106 - 169gsm): "1 dict dup/MediaClass(thick1[S])put setpagedevice"
*MediaType ThickPaperSBack/Heavyweight S Reload: "1 dict dup/MediaClass(thick1 side2[S])put setpagedevice"
*MediaType ThickPaper2/Extra HW (X-HW) (170 - 256gsm): "1 dict dup/MediaClass(thick2)put setpagedevice"
*MediaType ThickPaper2Back/X-HW Reload (170 - 256gsm): "1 dict dup/MediaClass(thick2 side2)put setpagedevice"
*MediaType ThickPaper2A/Extra HW (X-HW) A (170 - 256gsm): "1 dict dup/MediaClass(thick2[A])put setpagedevice"
*MediaType ThickPaper2ABack/Extra HW (X-HW) A Reload: "1 dict dup/MediaClass(thick2 side2[A])put setpagedevice"
*MediaType ThickPaper2B/Extra HW (X-HW) B (170 - 256gsm): "1 dict dup/MediaClass(thick2[B])put setpagedevice"
*MediaType ThickPaper2BBack/Extra HW (X-HW) B Reload: "1 dict dup/MediaClass(thick2 side2[B])put setpagedevice"
*MediaType ThickPaper2C/Extra HW (X-HW) C (170 - 256gsm): "1 dict dup/MediaClass(thick2[C])put setpagedevice"
*MediaType ThickPaper2CBack/Extra HW (X-HW) C Reload: "1 dict dup/MediaClass(thick2 side2[C])put setpagedevice"
*MediaType ThickPaper2D/Extra HW (X-HW) D (170 - 256gsm): "1 dict dup/MediaClass(thick2[D])put setpagedevice"
*MediaType ThickPaper2DBack/Extra HW (X-HW) D Reload: "1 dict dup/MediaClass(thick2 side2[D])put setpagedevice"
*MediaType ThickPaper2S/Extra HW (X-HW) S (170 - 256gsm): "1 dict dup/MediaClass(thick2[S])put setpagedevice"
*MediaType ThickPaper2SBack/Extra HW (X-HW) S Reload: "1 dict dup/MediaClass(thick2 side2[S])put setpagedevice"
*MediaType ThickPaper3/X-HW Plus (X-HW) (257 - 280gsm): "1 dict dup/MediaClass(thick3)put setpagedevice"
*MediaType ThickPaper3Back/X-HW Plus Reload (257 - 280gsm): "1 dict dup/MediaClass(thick3 side2)put setpagedevice"
*MediaType CoatingPaper1/Gloss (106 - 169gsm): "1 dict dup/MediaClass(coating1)put setpagedevice"
*MediaType CoatingPaper1Back/Gloss Reload (106 - 169gsm): "1 dict dup/MediaClass(coating1 side2)put setpagedevice"
*MediaType CoatingPaper2/HW Gloss (170 - 256gsm): "1 dict dup/MediaClass(coating2)put setpagedevice"
*MediaType CoatingPaper2Back/HW Gloss (170 - 256gsm) Reload: "1 dict dup/MediaClass(coating2 side2)put setpagedevice"
*MediaType PrepunchedPaper/Hole Punched: "1 dict dup/MediaClass(holed)put setpagedevice"
*MediaType LetterheadPaper/Letterhead: "1 dict dup/MediaClass(letterhead)put setpagedevice"
*MediaType PrePrintedPaper/Pre-Printed: "1 dict dup/MediaClass(preprinted)put setpagedevice"
*MediaType Envelope/Envelope: "1 dict dup/MediaClass(envelope)put setpagedevice"
*MediaType OtherPaper/Other: "1 dict dup/MediaClass(other)put setpagedevice"
*MediaType CustomSizedPaper1/Custom 1: "1 dict dup/MediaClass(user1)put setpagedevice"
*MediaType CustomSizedPaper2/Custom 2: "1 dict dup/MediaClass(user2)put setpagedevice"
*MediaType CustomSizedPaper3/Custom 3: "1 dict dup/MediaClass(user3)put setpagedevice"
*MediaType CustomSizedPaper4/Custom 4: "1 dict dup/MediaClass(user4)put setpagedevice"
*MediaType CustomSizedPaper5/Custom 5: "1 dict dup/MediaClass(user5)put setpagedevice"
*?MediaType: "
	save mark {
		50 dict
			(fine) (FinePaper)
			(stationary) (Stationary)
			(used) (StationaryBack)
			(recycled) (RecyclePaper)
			(transparency) (Transparency)
			(thin) (ThinPaper)
			(label) (LabelPaper)
			(thick1) (ThickPaper)
			(thick1 side2) (ThickPaperBack)
			(thick1[A]) (ThickPaperA)
			(thick1 side2[A]) (ThickPaperABack)
			(thick1[B]) (ThickPaperB)
			(thick1 side2[B]) (ThickPaperBBack)
			(thick1[C]) (ThickPaperC)
			(thick1 side2[C]) (ThickPaperCBack)
			(thick1[S]) (ThickPaperS)
			(thick1 side2[S]) (ThickPaperSBack)
			(thick2) (ThickPaper2)
			(thick2 side2) (ThickPaper2Back)
			(thick2[A]) (ThickPaper2A)
			(thick2 side2[A]) (ThickPaper2ABack)
			(thick2[B]) (ThickPaper2B)
			(thick2 side2[B]) (ThickPaper2BBack)
			(thick2[C]) (ThickPaper2C)
			(thick2 side2[C]) (ThickPaper2CBack)
			(thick2[D]) (ThickPaper2D)
			(thick2 side2[D]) (ThickPaper2DBack)
			(thick2[S]) (ThickPaper2S)
			(thick2 side2[S]) (ThickPaper2SBack)
			(thick3) (ThickPaper3)
			(thick3 side2) (ThickPaper3Back)
			(coating1) (CoatingPaper1)
			(coating1 side2) (CoatingPaper1Back)
			(coating2) (CoatingPaper2)
			(coating2 side2) (CoatingPaper2Back)
			(holed) (PrepunchedPaper)
			(letterhead) (LetterheadPaper)
			(preprinted) (PrePrintedPaper)
			(envelope) (Envelope)
			(other) (OtherPaper)
			(user1) (CustomSizedPaper1)
			(user2) (CustomSizedPaper2)
			(user3) (CustomSizedPaper3)
			(user4) (CustomSizedPaper4)
			(user5) (CustomSizedPaper5)
		currentpagedevice /MediaClass get get = flush
	} stopped { (Unknown) = flush } if
	cleartomark restore
"
*End
*CloseUI: *MediaType

*OpenUI *FXMediaColor/Paper Color: PickOne
*OrderDependency: 75.0 AnySetup *FXMediaColor
*DefaultFXMediaColor: White
*FXMediaColor White/White: "1 dict dup/MediaColor(white)put setpagedevice"
*FXMediaColor Blue/Blue: "1 dict dup/MediaColor(blue)put setpagedevice"
*FXMediaColor Yellow/Yellow: "1 dict dup/MediaColor(yellow)put setpagedevice"
*FXMediaColor Green/Green: "1 dict dup/MediaColor(green)put setpagedevice"
*FXMediaColor Pink/Pink: "1 dict dup/MediaColor(pink)put setpagedevice"
*FXMediaColor Clear/Clear: "1 dict dup/MediaColor(transparent)put setpagedevice"
*FXMediaColor Ivory/Ivory: "1 dict dup/MediaColor(ivory)put setpagedevice"
*FXMediaColor Gray/Gray: "1 dict dup/MediaColor(gray)put setpagedevice"
*FXMediaColor Buff/Buff: "1 dict dup/MediaColor(buff)put setpagedevice"
*FXMediaColor Goldenrod/Goldenrod: "1 dict dup/MediaColor(goldenrod)put setpagedevice"
*FXMediaColor Red/Red: "1 dict dup/MediaColor(red)put setpagedevice"
*FXMediaColor Orange/Orange: "1 dict dup/MediaColor(orange)put setpagedevice"
*FXMediaColor Custom1/Custom 1: "1 dict dup/MediaColor(custom1)put setpagedevice"
*FXMediaColor Custom2/Custom 2: "1 dict dup/MediaColor(custom2)put setpagedevice"
*FXMediaColor Custom3/Custom 3: "1 dict dup/MediaColor(custom3)put setpagedevice"
*FXMediaColor Custom4/Custom 4: "1 dict dup/MediaColor(custom4)put setpagedevice"
*FXMediaColor Custom5/Custom 5: "1 dict dup/MediaColor(custom5)put setpagedevice"
*FXMediaColor Other/Other: "1 dict dup/MediaColor(other)put setpagedevice"
*FXMediaColor Any/Auto Paper Select: ""
*?FXMediaColor: "
	save mark {
		40 dict
			dup (white) (White) put
			dup (blue) (Blue) put
			dup (yellow) (Yellow) put
			dup (green) (Green) put
			dup (pink) (Pink) put
			dup (transparent) (Clear) put
			dup (ivory) (Ivory) put
			dup (gray) (Gray) put
			dup (buff) (Buff) put
			dup (goldenrod) (Goldenrod) put
			dup (red) (Red) put
			dup (orange) (Orange) put
			dup (custom1) (Custom1) put
			dup (custom2) (Custom2) put
			dup (custom3) (Custom3) put
			dup (custom4) (Custom4) put
			dup (custom5) (Custom5) put
			dup (other) (Other) put
		currentpagedevice /MediaColor get get = flush
	} stopped { (Unknown) = flush } if
	cleartomark restore
"
*End
*CloseUI: *FXMediaColor

*OpenUI *Duplex/2 Sided Print: PickOne
*OrderDependency: 100.0 AnySetup *Duplex
*DefaultDuplex: None
*Duplex None/1 Sided Print: "
    userdict /$$OEMPreConfigDict known {
        userdict /$$OEMPreConfigDict get /Duplex 2 copy known {
            get exec false
        }{
            pop pop true
        } ifelse
    }{
        true
    } ifelse
    {
        1 dict
        dup /Duplex false put
        setpagedevice
    } if
"
*End
*Duplex DuplexNoTumble/2 Sided Print: "
    userdict /$$OEMPreConfigDict known {
        userdict /$$OEMPreConfigDict get /Duplex 2 copy known {
            get exec false
        }{
            pop pop true
        } ifelse
    }{
        true
    } ifelse
    {
        2 dict dup /Duplex true put
        dup /Tumble false put setpagedevice
    } if
"
*End
*Duplex DuplexTumble/2 Sided, Flip on Short Edge: "
    userdict /$$OEMPreConfigDict known {
        userdict /$$OEMPreConfigDict get /Duplex 2 copy known {
            get exec false
        }{
            pop pop true
        } ifelse
    }{
        true
    } ifelse
    {
        2 dict dup /Duplex true put
        dup /Tumble true put setpagedevice
    } if
"
*End
*?Duplex: "
save
   currentpagedevice /Duplex known 
   { currentpagedevice /Duplex get
       { currentpagedevice /Tumble get
          {(DuplexTumble)}{(DuplexNoTumble)}ifelse
       }
       { (None) } ifelse
   }
   { (None)}
   ifelse = flush
restore
"
*End
*CloseUI: *Duplex

*OpenUI *Collate/Collated: Boolean
*OrderDependency: 160.0 AnySetup *Collate
*DefaultCollate: False
*Collate False/Off: "
/Custom /ProcSet findresource /currentcoverseparator get exec
dup /FrontCoverSheet get 0 eq exch /BackCoverSheet get 0 eq and
{
 /Custom /ProcSet findresource /currentcoverseparator get exec
 /SeparatorPages get length 0 eq {
  /Custom/ProcSet findresource/currentsignature 2 copy known {
   get exec dup 0 eq exch 3 eq or
  }{
   pop pop true
  } ifelse
  {1 dict dup /Collate false put setpagedevice} if
 } if
} if
"
*End
*Collate True/On: "1 dict dup/Collate true put setpagedevice"
*?Collate: "save currentpagedevice dup/Collate known{/Collate get{(True)}{(False)}ifelse}{pop(Unknown)}ifelse = flush restore"
*CloseUI: *Collate

*OpenUI *OutputBin/Output Destination: PickOne
*OrderDependency: 230.0 AnySetup *OutputBin
*DefaultOutputBin: Auto
*OutputBin Auto/Auto Select: ""
*OutputBin Center2/Center Tray - Upper: "
  currentpagedevice /OutputAttributes get dup 1 known 
  {1 get dup null eq 
   { pop } 
   { dup length dict copy 
     setpagedevice
   } ifelse }
  {pop}
  ifelse
"
*End
*OutputBin SideTray/Left Top Tray (Face Up): "
  currentpagedevice /OutputAttributes get dup 2 known 
  {2 get dup null eq 
   { pop } 
   { dup length dict copy 
     setpagedevice
   } ifelse }
  {pop}
  ifelse
"
*End
*OutputBin FinisherTray/Right Middle Tray (Large Output): "
  currentpagedevice /OutputAttributes get dup 30 known 
  {30 get dup null eq 
   { pop } 
   { dup length dict copy 
     setpagedevice
   } ifelse }
  {pop}
  ifelse
"
*End
*OutputBin FinisherOutputTray/Right Top Tray: "
  currentpagedevice /OutputAttributes get dup 31 known 
  {31 get dup null eq 
   { pop } 
   { dup length dict copy 
     setpagedevice
   } ifelse }
  {pop}
  ifelse
"
*End
*?OutputBin: "
	save
	currentpagedevice
	dup /OutputType get null eq {
	 /OutputAttributes get dup /Priority get
	 {
	  2 copy known {exit} {pop} ifelse
	 } forall
	 dup type /integertype eq {
	  exch pop
	 } {
	  pop 0
	 } ifelse
	} {
	 /OutputAttributes get
	 dup /Priority get
	 {
	  2 copy known {
	   2 copy get /OutputType get
	   currentpagedevice /OutputType get
	   anchorsearch {
	    pop length 0 eq {exit} if
	   } {
	    pop
	   } ifelse
	   pop
	  } {
	   pop
	  } ifelse
	 } forall
	 dup type /integertype eq {
	  exch pop
	 } {
	  pop 30
	 } ifelse
	} ifelse
	3 dict
	dup 0 (Auto) put
	dup 1 (SideTray) put
	dup 30 (FinisherTray) put
	exch 2 copy known {get} {pop pop (Unknown)} ifelse
	= flush
	restore
"
*End
*CloseUI: *OutputBin

*OpenUI *FXStaple/Staple: PickOne
*OrderDependency: 180.0 AnySetup *FXStaple
*DefaultFXStaple: None
*FXStaple None/No Staple: "1 dict dup/Staple 0 put setpagedevice"
*FXStaple LeftDoublePort/2 Staples Left (Portrait): "
4 dict begin
 /Staple 3 def
 /OutputType (FINISHER TRAY) def
 currentpagedevice /Staple get 0 eq {/LeadingEdge 1 def} if
  2 dict begin
  /Type 7 def
  /Location 6 def currentdict end
 /StapleDetails exch def currentdict end
setpagedevice
"
*End
*FXStaple LeftDoubleLand/2 Staples Left (Landscape): "
4 dict begin
 /Staple 3 def
 /OutputType (FINISHER TRAY) def
 currentpagedevice /Staple get 0 eq {/LeadingEdge 0 def} if
  2 dict begin
  /Type 7 def
  /Location 5 def currentdict end
 /StapleDetails exch def currentdict end
setpagedevice
"
*End
*FXStaple UpperLeftSinglePort/1 Staple Top Left (Portrait): "
4 dict begin
 /Staple 3 def
 /OutputType (FINISHER TRAY) def
    /Custom /ProcSet findresource /engineoptions get exec /Finisher 2 copy known {
      get exec (B1) eq {
        currentpagedevice /PageSize get aload pop 720 eq exch 576 eq and
        {
          /LeadingEdge 1 def
        } if
      } if
    } {pop pop }ifelse
  2 dict begin
  /Type 7 def
  /Location 0 def currentdict end
 /StapleDetails exch def currentdict end
setpagedevice
"
*End
*FXStaple UpperLeftSingleLand/1 Staple Top Left (Landscape): "
4 dict begin
 /Staple 3 def
 /OutputType (FINISHER TRAY) def
    /Custom /ProcSet findresource /engineoptions get exec /Finisher 2 copy known {
      get exec (B1) eq {
        currentpagedevice /PageSize get aload pop 720 eq exch 576 eq and
        {
          /LeadingEdge 1 def
        } if
      } if
    } {pop pop }ifelse
  2 dict begin
  /Type 7 def
  /Location 1 def currentdict end
 /StapleDetails exch def currentdict end
setpagedevice
"
*End
*FXStaple TopDoublePort/2 Staples Top (Portrait): "
4 dict begin
 /Staple 3 def
 /OutputType (FINISHER TRAY) def
 currentpagedevice /Staple get 0 eq {/LeadingEdge 0 def} if
  2 dict begin
  /Type 7 def
  /Location 4 def currentdict end
 /StapleDetails exch def currentdict end
setpagedevice
"
*End
*FXStaple TopDoubleLand/2 Staples Top (Landscape): "
4 dict begin
 /Staple 3 def
 /OutputType (FINISHER TRAY) def
 currentpagedevice /Staple get 0 eq {/LeadingEdge 1 def} if
  2 dict begin
  /Type 7 def
  /Location 6 def currentdict end
 /StapleDetails exch def currentdict end
setpagedevice
"
*End
*FXStaple UpperRightSinglePort/1 Staple Top Right (Portrait): "
4 dict begin
 /Staple 3 def
 /OutputType (FINISHER TRAY) def
    /Custom /ProcSet findresource /engineoptions get exec /Finisher 2 copy known {
      get exec (B1) eq {
        currentpagedevice /PageSize get aload pop 720 eq exch 576 eq and
        {
          /LeadingEdge 1 def
        } if
      } if
    } {pop pop }ifelse
  2 dict begin
  /Type 7 def
  /Location 2 def currentdict end
 /StapleDetails exch def currentdict end
setpagedevice
"
*End
*FXStaple UpperRightSingleLand/1 Staple Top Right (Landscape): "
4 dict begin
 /Staple 3 def
 /OutputType (FINISHER TRAY) def
    /Custom /ProcSet findresource /engineoptions get exec /Finisher 2 copy known {
      get exec (B1) eq {
        currentpagedevice /PageSize get aload pop 720 eq exch 576 eq and
        {
          /LeadingEdge 1 def
        } if
      } if
    } {pop pop }ifelse
  2 dict begin
  /Type 7 def
  /Location 0 def currentdict end
 /StapleDetails exch def currentdict end
setpagedevice
"
*End
*FXStaple RightDoublePort/2 Staples Right (Portrait): "
4 dict begin
 /Staple 3 def
 /OutputType (FINISHER TRAY) def
 currentpagedevice /Staple get 0 eq {/LeadingEdge 1 def} if
  2 dict begin
  /Type 7 def
  /Location 7 def currentdict end
 /StapleDetails exch def currentdict end
setpagedevice
"
*End
*FXStaple RightDoubleLand/2 Staples Right (Landscape): "
4 dict begin
 /Staple 3 def
 /OutputType (FINISHER TRAY) def
 currentpagedevice /Staple get 0 eq {/LeadingEdge 0 def} if
  2 dict begin
  /Type 7 def
  /Location 4 def currentdict end
 /StapleDetails exch def currentdict end
setpagedevice
"
*End
*FXStaple LowerRightSinglePort/1 Staple Bottom Right (Portrait): "
4 dict begin
 /Staple 3 def
 /OutputType (FINISHER TRAY) def
    /Custom /ProcSet findresource /engineoptions get exec /Finisher 2 copy known {
      get exec (B1) eq {
        currentpagedevice /PageSize get aload pop 720 eq exch 576 eq and
        {
          /LeadingEdge 1 def
        } if
      } if
    } {pop pop }ifelse
  2 dict begin
  /Type 7 def
  /Location 3 def currentdict end
 /StapleDetails exch def currentdict end
setpagedevice
"
*End
*FXStaple LowerRightSingleLand/1 Staple Bottom Right (Landscape): "
4 dict begin
 /Staple 3 def
 /OutputType (FINISHER TRAY) def
    /Custom /ProcSet findresource /engineoptions get exec /Finisher 2 copy known {
      get exec (B1) eq {
        currentpagedevice /PageSize get aload pop 720 eq exch 576 eq and
        {
          /LeadingEdge 1 def
        } if
      } if
    } {pop pop }ifelse
  2 dict begin
  /Type 7 def
  /Location 2 def currentdict end
 /StapleDetails exch def currentdict end
setpagedevice
"
*End
*FXStaple BottomDoublePort/2 Staples Bottom (Portrait): "
4 dict begin
 /Staple 3 def
 /OutputType (FINISHER TRAY) def
 currentpagedevice /Staple get 0 eq {/LeadingEdge 0 def} if
  2 dict begin
  /Type 7 def
  /Location 5 def currentdict end
 /StapleDetails exch def currentdict end
setpagedevice
"
*End
*FXStaple BottomDoubleLand/2 Staples Bottom (Landscape): "
4 dict begin
 /Staple 3 def
 /OutputType (FINISHER TRAY) def
 currentpagedevice /Staple get 0 eq {/LeadingEdge 1 def} if
  2 dict begin
  /Type 7 def
  /Location 7 def currentdict end
 /StapleDetails exch def currentdict end
setpagedevice
"
*End
*FXStaple LowerLeftSinglePort/1 Staple Bottom Left (Portrait): "
4 dict begin
 /Staple 3 def
 /OutputType (FINISHER TRAY) def
    /Custom /ProcSet findresource /engineoptions get exec /Finisher 2 copy known {
      get exec (B1) eq {
        currentpagedevice /PageSize get aload pop 720 eq exch 576 eq and
        {
          /LeadingEdge 1 def
        } if
      } if
    } {pop pop }ifelse
  2 dict begin
  /Type 7 def
  /Location 1 def currentdict end
 /StapleDetails exch def currentdict end
setpagedevice
"
*End
*FXStaple LowerLeftSingleLand/1 Staple Bottom Left (Landscape): "
4 dict begin
 /Staple 3 def
 /OutputType (FINISHER TRAY) def
    /Custom /ProcSet findresource /engineoptions get exec /Finisher 2 copy known {
      get exec (B1) eq {
        currentpagedevice /PageSize get aload pop 720 eq exch 576 eq and
        {
          /LeadingEdge 1 def
        } if
      } if
    } {pop pop }ifelse
  2 dict begin
  /Type 7 def
  /Location 3 def currentdict end
 /StapleDetails exch def currentdict end
setpagedevice
"
*End
*FXStaple SaddleStaple/Booklet Fold and Staple: "
 7 dict
 dup /Collate true put
 dup /LeadingEdge 0 put
 dup /OutputType (BOOKLET TRAY) put
 dup /Booklet true put
 dup /BookletDetails
  2 dict
  dup /StapleType 1 put
  dup /PrintInside true put
  put
 setpagedevice
"
*End
*?FXStaple: "
save
  currentpagedevice dup /Staple 2 copy known 
   {get 0 eq
    {pop (None)}
    {/StapleDetails 2 copy known
     {get dup /Type get 7 eq
      {/Location get [(UpperLeftSinglePort)(LowerLeftSinglePort)(UpperRightSinglePort)(LowerRightSinglePort)
			(TopDoublePort)(BottomDoublePort)(LeftDoublePort)(RightDoublePort)
      (UpperRightSingleLand)(UpperLeftSingleLand)(LowerRightSingleLand)(LowerLeftSingleLand)
			(RightDoubleLand)(LeftDoubleLand)(TopDoubleLand)(BottomDoubleLand)] exch get}
      {pop (Unknown)} ifelse
     {pop pop (Unknown)}ifelse
    }ifelse
   }
   {pop pop pop
    currentpagedevice dup /Booklet 2 copy known
     {get {(SaddleStaple)}{(Unknown)} ifelse}{pop pop (Unknown)} ifelse
   } ifelse
  = flush
restore
"
*End
*CloseUI: *FXStaple

*OpenUI *FXPunch/Hole Punch: PickOne
*OrderDependency: 170.0 AnySetup *FXPunch
*DefaultFXPunch: None
*FXPunch None/No Punch: "1 dict dup/Punch 0 put setpagedevice"
*FXPunch LeftPort/Left (Portrait): "
5 dict begin
 /Punch 3 def
 currentpagedevice /Punch get 0 eq {/LeadingEdge 1 def} if
  2 dict begin
  /Type 5 def
  /Position 2 def currentdict end
 /PunchDetails exch def currentdict
 /Custom /ProcSet findresource /engineoptions get exec /Finisher get exec dup (C) eq {
  pop /OutputType (TOP TRAY) def
 }{ (B1) eq
  { /OutputType (FINISHER TRAY) def } if
 } ifelse
 end
setpagedevice
"
*End
*FXPunch LeftLand/Left (Landscape): "
5 dict begin
 /Punch 3 def
 currentpagedevice /Punch get 0 eq {/LeadingEdge 0 def} if
  2 dict begin
  /Type 5 def
  /Position 1 def currentdict end
 /PunchDetails exch def currentdict
 /Custom /ProcSet findresource /engineoptions get exec /Finisher get exec dup (C) eq {
  pop /OutputType (TOP TRAY) def
 }{ (B1) eq
  { /OutputType (FINISHER TRAY) def } if
 } ifelse
 end
setpagedevice
"
*End
*FXPunch TopPort/Top (Portrait): "
5 dict begin
 /Punch 3 def
 currentpagedevice /Punch get 0 eq {/LeadingEdge 0 def} if
  2 dict begin
  /Type 5 def
  /Position 0 def currentdict end
 /PunchDetails exch def currentdict
 /Custom /ProcSet findresource /engineoptions get exec /Finisher get exec dup (C) eq {
  pop /OutputType (TOP TRAY) def
 }{ (B1) eq
  { /OutputType (FINISHER TRAY) def } if
 } ifelse
 end
setpagedevice
"
*End
*FXPunch TopLand/Top (Landscape): "
5 dict begin
 /Punch 3 def
 currentpagedevice /Punch get 0 eq {/LeadingEdge 1 def} if
  2 dict begin
  /Type 5 def
  /Position 2 def currentdict end
 /PunchDetails exch def currentdict
 /Custom /ProcSet findresource /engineoptions get exec /Finisher get exec dup (C) eq {
  pop /OutputType (TOP TRAY) def
 }{ (B1) eq
  { /OutputType (FINISHER TRAY) def } if
 } ifelse
 end
setpagedevice
"
*End
*FXPunch RightPort/Right (Portrait): "
5 dict begin
 /Punch 3 def
 currentpagedevice /Punch get 0 eq {/LeadingEdge 1 def} if
  2 dict begin
  /Type 5 def
  /Position 3 def currentdict end
 /PunchDetails exch def currentdict
 /Custom /ProcSet findresource /engineoptions get exec /Finisher get exec dup (C) eq {
  pop /OutputType (TOP TRAY) def
 }{ (B1) eq
  { /OutputType (FINISHER TRAY) def } if
 } ifelse
 end
setpagedevice
"
*End
*FXPunch RightLand/Right (Landscape): "
5 dict begin
 /Punch 3 def
 currentpagedevice /Punch get 0 eq {/LeadingEdge 0 def} if
  2 dict begin
  /Type 5 def
  /Position 0 def currentdict end
 /PunchDetails exch def currentdict
 /Custom /ProcSet findresource /engineoptions get exec /Finisher get exec dup (C) eq {
  pop /OutputType (TOP TRAY) def
 }{ (B1) eq
  { /OutputType (FINISHER TRAY) def } if
 } ifelse
 end
setpagedevice
"
*End
*FXPunch BottomPort/Bottom (Portrait): "
5 dict begin
 /Punch 3 def
 currentpagedevice /Punch get 0 eq {/LeadingEdge 0 def} if
  2 dict begin
  /Type 5 def
  /Position 1 def currentdict end
 /PunchDetails exch def currentdict
 /Custom /ProcSet findresource /engineoptions get exec /Finisher get exec dup (C) eq {
  pop /OutputType (TOP TRAY) def
 }{ (B1) eq
  { /OutputType (FINISHER TRAY) def } if
 } ifelse
 end
setpagedevice
"
*End
*FXPunch BottomLand/Bottom (Landscape): "
5 dict begin
 /Punch 3 def
 currentpagedevice /Punch get 0 eq {/LeadingEdge 1 def} if
  2 dict begin
  /Type 5 def
  /Position 3 def currentdict end
 /PunchDetails exch def currentdict
 /Custom /ProcSet findresource /engineoptions get exec /Finisher get exec dup (C) eq {
  pop /OutputType (TOP TRAY) def
 }{ (B1) eq
  { /OutputType (FINISHER TRAY) def } if
 } ifelse
 end
setpagedevice
"
*End
*?FXPunch: "
	save mark {
		currentpagedevice /Punch get 0 eq {
			(None) = flush
		} {
			[(TopPort)(BottomPort)(LeftPort)(RightPort)
			(RightLand)(LeftLand)(TopLand)(BottomLand)]
			currentpagedevice /PunchDetails get /Position get = flush
		} ifelse
	} stopped { (Unknown) = flush } if
	cleartomark restore
"
*End
*CloseUI: *FXPunch

*OpenUI *FXNumPunchHoles/Hole Punch Settings: PickOne
*OrderDependency: 169.0 AnySetup *FXNumPunchHoles
*DefaultFXNumPunchHoles: Auto
*FXNumPunchHoles Auto/Printer Default: ""
*FXNumPunchHoles 2Holes/2 Hole Punch: "1 dict dup/PunchDetails 1 dict dup/NumHoles 2 put put setpagedevice"
*FXNumPunchHoles 3Holes/3 Hole Punch: "1 dict dup/PunchDetails 1 dict dup/NumHoles 3 put put setpagedevice"
*FXNumPunchHoles 4Holes/4 Hole Punch: "1 dict dup/PunchDetails 1 dict dup/NumHoles 4 put put setpagedevice"
*?FXNumPunchHoles: "
 save mark {
   currentpagedevice /PunchDetails get /NumHoles 2 copy known {
     get [(Unknown)(Unknown)(2Holes)(3Holes)(4Holes)] exch get = flush
     } {
        (Auto) = flush
     } ifelse
  } stopped { (Unknown) = flush } if
 cleartomark restore
"
*End
*CloseUI: *FXNumPunchHoles

*OpenUI *FXFold/Folding: PickOne
*OrderDependency: 190.0 AnySetup *FXFold
*DefaultFXFold: None
*FXFold None/No Folding: "2 dict dup/Fold 0 put setpagedevice"
*FXFold BiFold/Single Fold: "
 4 dict
 dup /Booklet true put
 dup /OutputType (BOOKLET TRAY) put
 dup /LeadingEdge 0 put
 dup /BookletDetails
  3 dict
  dup /Type 3 put
  dup /StapleType 0 put
  dup /PrintInside true put
  put
 setpagedevice
"
*End
*FXFold BiFoldMulti/Booklet Fold: "
 5 dict
 dup /Collate true put
 dup /Booklet true put
 dup /OutputType (BOOKLET TRAY) put
 dup /LeadingEdge 0 put
 dup /BookletDetails
  4 dict
  dup /Type 3 put
  dup /StapleType 0 put
  dup /PrintInside true put
  dup /PageSet true put
  put
 setpagedevice
"
*End
*?FXFold: "
save
currentpagedevice dup /Fold known {
    dup /Fold get 4 eq {
        dup /FoldDetails get dup /FoldType get dup 0 eq {
            exch /ImageRotation get 0 eq {
                pop pop (ZFoldLeft)
            }{
                pop pop (ZFoldRight)
            } ifelse
        }{
            dup 1 eq {
                exch /PrintInside get {
                    pop pop (ZLFoldInside)
                }{
                    pop pop (ZLFoldOutside)
                } ifelse
            }{
                pop /PrintInside get {
                    pop (CLFoldInside)
                }{
                    pop (CLFoldOutside)
                } ifelse
            } ifelse
        } ifelse
    }{
        dup /Booklet known {
            dup /Booklet get {
                /BookletDetails get dup /StapleType get 0 eq {
                    /PrintInside get {
			(BiFoldMulti) pop
                        (BiFoldInside)
                    }{
                        (BiFoldOutside)
                    } ifelse
                }{
                    pop (None)
                } ifelse
            }{
                pop (None)
            } ifelse
        }{
            pop (None)
        } ifelse
    } ifelse
}{
    dup /Booklet known {
        dup /Booklet get {
            /BookletDetails get dup /StapleType get 0 eq {
                /PrintInside get {
                    (BiFoldInside)
                }{
                    (BiFoldOutside)
                } ifelse
            }{
                pop (None)
            } ifelse
        }{
            pop (None)
        } ifelse
    }{
        pop (None)
    } ifelse
} ifelse
= flush
restore
"
*End
*CloseUI: *FXFold

*OpenUI *FXJog/Offset Stacking: PickOne
*OrderDependency: 175.0 AnySetup *FXJog
*DefaultFXJog: None
*FXJog None/No Offset: "1 dict dup /Jog 0 put setpagedevice"
*FXJog EndOfSet/Offset per Set: "
2 dict
 dup /Jog 3 put
 currentpagedevice /Punch 2 copy known {
  get 3 eq {
   dup /OutputType (FINISHER TRAY) put
  } if
 } { pop pop } ifelse
setpagedevice
"
*End
*FXJog DeviceDeactivation/Offset per Job: "
 currentpagedevice dup /Punch known 
 { /Punch get  3 eq
   { 1 dict dup /OutputType (FINISHER TRAY) put setpagedevice } if
 }{ pop } ifelse
 /Custom /ProcSet resourcestatus
 { pop pop /Custom /ProcSet findresource dup /setjobinstruction known
   { /setjobinstruction get 1 dict begin
      /Jog true def currentdict end exch exec
   }if
 }if
"
*End
*FXJog EndOfSetSpecifiedPage/Offset per Pages: "currentpagedevice dup/Punch known{/Punch get 3 eq{1 dict dup/OutputType(FINISHER TRAY)put setpagedevice}if}{pop}ifelse"
*FXJog EndOfSetSpecifiedCopies/Offset per Units: "currentpagedevice dup/Punch known{/Punch get 3 eq{1 dict dup/OutputType(FINISHER TRAY)put setpagedevice}if}{pop}ifelse"
*?FXJog: "
save
  [(None)(DeviceDeactivation)(DeviceDeactivation)(EndOfSet)]
  currentpagedevice /Jog known 
  {currentpagedevice /Jog get {get} stopped {pop pop (Unknown)} if}
  {pop (Unknown)}ifelse = flush
restore
"
*End
*CloseUI: *FXJog

*OpenUI *FXIntCoverSheet/Add Front Cover: PickOne
*OrderDependency: 140.0 AnySetup *FXIntCoverSheet
*DefaultFXIntCoverSheet: None
*FXIntCoverSheet None/No Front Cover: "
	/Custom /ProcSet findresource /setcoverseparator 2 copy known {
		get 1 dict dup /FrontCoverSheet 0 put exch exec
	}{
		pop pop
	} ifelse
"
*End
*FXIntCoverSheet 1stTray/Tray 1: "
	/Custom /ProcSet findresource /setcoverseparator 2 copy known {
		get 1 dict dup /FrontCoverSheet 1 put exch exec
	}{
		pop pop
	} ifelse
"
*End
*FXIntCoverSheet 2ndTray/Tray 2: "
	/Custom /ProcSet findresource /setcoverseparator 2 copy known {
		get 1 dict dup /FrontCoverSheet 2 put exch exec
	}{
		pop pop
	} ifelse
"
*End
*FXIntCoverSheet 3rdTray/Tray 3: "
	/Custom /ProcSet findresource /setcoverseparator 2 copy known {
		get 1 dict dup /FrontCoverSheet 3 put exch exec
	}{
		pop pop
	} ifelse
"
*End
*FXIntCoverSheet 4thTray/Tray 4: "
	/Custom /ProcSet findresource /setcoverseparator 2 copy known {
		get 1 dict dup /FrontCoverSheet 4 put exch exec
	}{
		pop pop
	} ifelse
"
*End
*FXIntCoverSheet 3rdTrayTTM/Tray 3 (High Capacity): "
	/Custom /ProcSet findresource /setcoverseparator 2 copy known {
		get 1 dict dup /FrontCoverSheet 3 put exch exec
	}{
		pop pop
	} ifelse
"
*End
*FXIntCoverSheet 4thTrayTTM/Tray 4 (High Capacity): "
	/Custom /ProcSet findresource /setcoverseparator 2 copy known {
		get 1 dict dup /FrontCoverSheet 4 put exch exec
	}{
		pop pop
	} ifelse
"
*End
*FXIntCoverSheet MSI/Tray 5 (Bypass): "
	/Custom /ProcSet findresource /setcoverseparator 2 copy known {
		get 1 dict dup /FrontCoverSheet 5 put exch exec
	}{
		pop pop
	} ifelse
"
*End
*FXIntCoverSheet HCF1/Tray 6: "
	/Custom /ProcSet findresource /setcoverseparator 2 copy known {
		get 1 dict dup /FrontCoverSheet 6 put exch exec
	}{
		pop pop
	} ifelse
"
*End
*?FXIntCoverSheet: "
  save mark {
    [
      (None)
      (1stTray)
      (2ndTray)
      (3rdTray)
      (4thTray)
      (MSI)
      (HCF1)
    ] /Custom /ProcSet findresource /currentcoverseparator get exec
    /FrontCoverSheet get get} stopped {(Unknown)} 
      {
      /Custom /ProcSet resourcestatus 
            { pop pop /Custom /ProcSet findresource
              dup /engineoptions known {
                  /engineoptions get exec
                  /TandemTray 2 copy known {get}{pop pop false} ifelse
              }
              { pop false } ifelse
              { dup (4thTray) eq { pop (4thTrayTTM) } 
              { dup (3rdTray) eq { pop (3rdTrayTTM) } if
          }ifelse
                } if
            } if
      }ifelse
      = flush
  cleartomark restore

"
*End
*CloseUI: *FXIntCoverSheet

*OpenUI *FXIntBackCoverSheet/Add Back Cover: PickOne
*OrderDependency: 142.0 AnySetup *FXIntBackCoverSheet
*DefaultFXIntBackCoverSheet: None
*FXIntBackCoverSheet None/No Back Cover: "
	/Custom /ProcSet findresource /setcoverseparator 2 copy known {
		get 1 dict dup /BackCoverSheet 0 put exch exec
	}{
		pop pop
	} ifelse
"
*End
*FXIntBackCoverSheet 1stTray/Tray 1: "
	/Custom /ProcSet findresource /setcoverseparator 2 copy known {
		get 1 dict dup /BackCoverSheet 1 put exch exec
	}{
		pop pop
	} ifelse
"
*End
*FXIntBackCoverSheet 2ndTray/Tray 2: "
	/Custom /ProcSet findresource /setcoverseparator 2 copy known {
		get 1 dict dup /BackCoverSheet 2 put exch exec
	}{
		pop pop
	} ifelse
"
*End
*FXIntBackCoverSheet 3rdTray/Tray 3: "
	/Custom /ProcSet findresource /setcoverseparator 2 copy known {
		get 1 dict dup /BackCoverSheet 3 put exch exec
	}{
		pop pop
	} ifelse
"
*End
*FXIntBackCoverSheet 4thTray/Tray 4: "
	/Custom /ProcSet findresource /setcoverseparator 2 copy known {
		get 1 dict dup /BackCoverSheet 4 put exch exec
	}{
		pop pop
	} ifelse
"
*End
*FXIntBackCoverSheet 3rdTrayTTM/Tray 3 (High Capacity): "
	/Custom /ProcSet findresource /setcoverseparator 2 copy known {
		get 1 dict dup /BackCoverSheet 3 put exch exec
	}{
		pop pop
	} ifelse
"
*End
*FXIntBackCoverSheet 4thTrayTTM/Tray 4 (High Capacity): "
	/Custom /ProcSet findresource /setcoverseparator 2 copy known {
		get 1 dict dup /BackCoverSheet 4 put exch exec
	}{
		pop pop
	} ifelse
"
*End
*FXIntBackCoverSheet MSI/Tray 5 (Bypass): "
	/Custom /ProcSet findresource /setcoverseparator 2 copy known {
		get 1 dict dup /BackCoverSheet 5 put exch exec
	}{
		pop pop
	} ifelse
"
*End
*FXIntBackCoverSheet HCF1/Tray 6: "
	/Custom /ProcSet findresource /setcoverseparator 2 copy known {
		get 1 dict dup /BackCoverSheet 6 put exch exec
	}{
		pop pop
	} ifelse
"
*End
*?FXIntBackCoverSheet: "
  save mark {
    [
      (None)
      (1stTray)
      (2ndTray)
      (3rdTray)
      (4thTray)
      (MSI)
      (HCF1)
    ] /Custom /ProcSet findresource /currentcoverseparator get exec
    /BackCoverSheet get get} stopped {(Unknown)} 
      {
      /Custom /ProcSet resourcestatus 
            { pop pop /Custom /ProcSet findresource
              dup /engineoptions known {
                  /engineoptions get exec
                  /TandemTray 2 copy known {get}{pop pop false} ifelse
              }
              { pop false } ifelse
              { dup (4thTray) eq { pop (4thTrayTTM) } 
              { dup (3rdTray) eq { pop (3rdTrayTTM) } if
          }ifelse
                } if
            } if
      }ifelse
      = flush
  cleartomark restore

"
*End
*CloseUI: *FXIntBackCoverSheet

*OpenUI *FXIntSheet/Separators: PickOne
*OrderDependency: 155.0 AnySetup *FXIntSheet
*DefaultFXIntSheet: None
*FXIntSheet None/No Separators: ""
*FXIntSheet 1stTray/Tray 1: "
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SeparatorTray 1 put exch exec
    }{
        pop pop
    } ifelse
"
*End
*FXIntSheet 2ndTray/Tray 2: "
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SeparatorTray 2 put exch exec
    }{
        pop pop
    } ifelse
"
*End
*FXIntSheet 3rdTray/Tray 3: "
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SeparatorTray 3 put exch exec
    }{
        pop pop
    } ifelse
"
*End
*FXIntSheet 4thTray/Tray 4: "
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SeparatorTray 4 put exch exec
    }{
        pop pop
    } ifelse
"
*End
*FXIntSheet 3rdTrayTTM/Tray 3 (High Capacity): "
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SeparatorTray 3 put exch exec
    }{
        pop pop
    } ifelse
"
*End
*FXIntSheet 4thTrayTTM/Tray 4 (High Capacity): "
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SeparatorTray 4 put exch exec
    }{
        pop pop
    } ifelse
"
*End
*FXIntSheet MSI/Tray 5 (Bypass): "
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SeparatorTray 5 put exch exec
    }{
        pop pop
    } ifelse
"
*End
*FXIntSheet HCF1/Tray 6: "
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SeparatorTray 6 put exch exec
    }{
        pop pop
    } ifelse
"
*End
*?FXIntSheet: "
	save mark {
		[
			(None)
			(1stTray)
			(2ndTray)
			(3rdTray)
			(4thTray)
			(MSI)
			(HCF1)
		] /Custom /ProcSet findresource /currentcoverseparator get exec
		/SeparatorTray get get 
		} stopped {(Unknown)}
		{
		/Custom /ProcSet resourcestatus 
			{ pop pop /Custom /ProcSet findresource
			  dup /engineoptions known {
				/engineoptions get exec
				/TandemTray 2 copy known {get}{pop pop false} ifelse
			  }
			  { pop false } ifelse
			  { dup (4thTray) eq { pop (4thTrayTTM) } 
			  { dup (3rdTray) eq { pop (3rdTrayTTM) } if
			  	}ifelse
			  } if
			} if
		}ifelse
	= flush
	cleartomark restore
"
*End
*CloseUI: *FXIntSheet

*OpenUI *FXIntSheetMediaType/Paper Type (Covers / Separators): PickOne
*OrderDependency: 157.0 AnySetup *FXIntSheetMediaType
*DefaultFXIntSheetMediaType: Default
*FXIntSheetMediaType Default/Printer Default: ""
*FXIntSheetMediaType FinePaper/Bond: "
/Custom /ProcSet findresource /currentcoverseparator 2 copy known {
    get exec dup /FrontCoverSheet get 5 eq {
        pop true
    }{
        /BackCoverSheet get 5 eq {
            true
        }{
            /Custom /ProcSet findresource /currentcoverseparator 2 copy known {
                get exec /SeparatorTray get 5 eq {
                    true
                }{
                    false
                } ifelse
            }{
                pop pop false
            } ifelse
        } ifelse
    } ifelse
}{
    pop pop
} ifelse

{
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SMHMediaClass (fine) put exch exec
    }{
        pop pop
    } ifelse
} if
"
*End
*FXIntSheetMediaType Stationary/Plain: "
/Custom /ProcSet findresource /currentcoverseparator 2 copy known {
    get exec dup /FrontCoverSheet get 5 eq {
        pop true
    }{
        /BackCoverSheet get 5 eq {
            true
        }{
            /Custom /ProcSet findresource /currentcoverseparator 2 copy known {
                get exec /SeparatorTray get 5 eq {
                    true
                }{
                    false
                } ifelse
            }{
                pop pop false
            } ifelse
        } ifelse
    } ifelse
}{
    pop pop
} ifelse

{
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SMHMediaClass (stationary) put exch exec
    }{
        pop pop
    } ifelse
} if
"
*End
*FXIntSheetMediaType StationaryBack/Plain Reload: "
/Custom /ProcSet findresource /currentcoverseparator 2 copy known {
    get exec dup /FrontCoverSheet get 5 eq {
        pop true
    }{
        /BackCoverSheet get 5 eq {
            true
        }{
            /Custom /ProcSet findresource /currentcoverseparator 2 copy known {
                get exec /SeparatorTray get 5 eq {
                    true
                }{
                    false
                } ifelse
            }{
                pop pop false
            } ifelse
        } ifelse
    } ifelse
}{
    pop pop
} ifelse

{
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SMHMediaClass (used) put exch exec
    }{
        pop pop
    } ifelse
} if
"
*End
*FXIntSheetMediaType RecyclePaper/Recycled: "
/Custom /ProcSet findresource /currentcoverseparator 2 copy known {
    get exec dup /FrontCoverSheet get 5 eq {
        pop true
    }{
        /BackCoverSheet get 5 eq {
            true
        }{
            /Custom /ProcSet findresource /currentcoverseparator 2 copy known {
                get exec /SeparatorTray get 5 eq {
                    true
                }{
                    false
                } ifelse
            }{
                pop pop false
            } ifelse
        } ifelse
    } ifelse
}{
    pop pop
} ifelse

{
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SMHMediaClass (recycled) put exch exec
    }{
        pop pop
    } ifelse
} if
"
*End
*FXIntSheetMediaType Transparency/Transparency: "
/Custom /ProcSet findresource /currentcoverseparator 2 copy known {
    get exec dup /FrontCoverSheet get 5 eq {
        pop true
    }{
        /BackCoverSheet get 5 eq {
            true
        }{
            /Custom /ProcSet findresource /currentcoverseparator 2 copy known {
                get exec /SeparatorTray get 5 eq {
                    true
                }{
                    false
                } ifelse
            }{
                pop pop false
            } ifelse
        } ifelse
    } ifelse
}{
    pop pop
} ifelse

{
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SMHMediaClass (transparency) put exch exec
    }{
        pop pop
    } ifelse
} if
"
*End
*FXIntSheetMediaType ThinPaper/Lightweight: "
/Custom /ProcSet findresource /currentcoverseparator 2 copy known {
    get exec dup /FrontCoverSheet get 5 eq {
        pop true
    }{
        /BackCoverSheet get 5 eq {
            true
        }{
            /Custom /ProcSet findresource /currentcoverseparator 2 copy known {
                get exec /SeparatorTray get 5 eq {
                    true
                }{
                    false
                } ifelse
            }{
                pop pop false
            } ifelse
        } ifelse
    } ifelse
}{
    pop pop
} ifelse

{
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SMHMediaClass (thin) put exch exec
    }{
        pop pop
    } ifelse
} if
"
*End
*FXIntSheetMediaType LabelPaper/Labels: "
/Custom /ProcSet findresource /currentcoverseparator 2 copy known {
    get exec dup /FrontCoverSheet get 5 eq {
        pop true
    }{
        /BackCoverSheet get 5 eq {
            true
        }{
            /Custom /ProcSet findresource /currentcoverseparator 2 copy known {
                get exec /SeparatorTray get 5 eq {
                    true
                }{
                    false
                } ifelse
            }{
                pop pop false
            } ifelse
        } ifelse
    } ifelse
}{
    pop pop
} ifelse

{
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SMHMediaClass (label) put exch exec
    }{
        pop pop
    } ifelse
} if
"
*End
*FXIntSheetMediaType ThickPaper/Heavyweight (HW) (106 - 169gsm): "
/Custom /ProcSet findresource /currentcoverseparator 2 copy known {
    get exec dup /FrontCoverSheet get 5 eq {
        pop true
    }{
        /BackCoverSheet get 5 eq {
            true
        }{
            /Custom /ProcSet findresource /currentcoverseparator 2 copy known {
                get exec /SeparatorTray get 5 eq {
                    true
                }{
                    false
                } ifelse
            }{
                pop pop false
            } ifelse
        } ifelse
    } ifelse
}{
    pop pop
} ifelse

{
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SMHMediaClass (thick1) put exch exec
    }{
        pop pop
    } ifelse
} if
"
*End
*FXIntSheetMediaType ThickPaperBack/HW Reload (106 - 169gsm): "
/Custom /ProcSet findresource /currentcoverseparator 2 copy known {
    get exec dup /FrontCoverSheet get 5 eq {
        pop true
    }{
        /BackCoverSheet get 5 eq {
            true
        }{
            /Custom /ProcSet findresource /currentcoverseparator 2 copy known {
                get exec /SeparatorTray get 5 eq {
                    true
                }{
                    false
                } ifelse
            }{
                pop pop false
            } ifelse
        } ifelse
    } ifelse
}{
    pop pop
} ifelse

{
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SMHMediaClass (thick1 side2) put exch exec
    }{
        pop pop
    } ifelse
} if
"
*End
*FXIntSheetMediaType ThickPaper2/Extra HW (X-HW) (170 - 256gsm): "
/Custom /ProcSet findresource /currentcoverseparator 2 copy known {
    get exec dup /FrontCoverSheet get 5 eq {
        pop true
    }{
        /BackCoverSheet get 5 eq {
            true
        }{
            /Custom /ProcSet findresource /currentcoverseparator 2 copy known {
                get exec /SeparatorTray get 5 eq {
                    true
                }{
                    false
                } ifelse
            }{
                pop pop false
            } ifelse
        } ifelse
    } ifelse
}{
    pop pop
} ifelse

{
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SMHMediaClass (thick2) put exch exec
    }{
        pop pop
    } ifelse
} if
"
*End
*FXIntSheetMediaType ThickPaper2Back/X-HW Reload (170 - 256gsm): "
/Custom /ProcSet findresource /currentcoverseparator 2 copy known {
    get exec dup /FrontCoverSheet get 5 eq {
        pop true
    }{
        /BackCoverSheet get 5 eq {
            true
        }{
            /Custom /ProcSet findresource /currentcoverseparator 2 copy known {
                get exec /SeparatorTray get 5 eq {
                    true
                }{
                    false
                } ifelse
            }{
                pop pop false
            } ifelse
        } ifelse
    } ifelse
}{
    pop pop
} ifelse

{
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SMHMediaClass (thick2 side2) put exch exec
    }{
        pop pop
    } ifelse
} if
"
*End
*FXIntSheetMediaType ThickPaper3/X-HW Plus (X-HW) (257 - 280gsm): "
/Custom /ProcSet findresource /currentcoverseparator 2 copy known {
    get exec dup /FrontCoverSheet get 5 eq {
        pop true
    }{
        /BackCoverSheet get 5 eq {
            true
        }{
            /Custom /ProcSet findresource /currentcoverseparator 2 copy known {
                get exec /SeparatorTray get 5 eq {
                    true
                }{
                    false
                } ifelse
            }{
                pop pop false
            } ifelse
        } ifelse
    } ifelse
}{
    pop pop
} ifelse

{
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SMHMediaClass (thick3) put exch exec
    }{
        pop pop
    } ifelse
} if
"
*End
*FXIntSheetMediaType ThickPaper3Back/X-HW Plus Reload (257 - 280gsm): "
/Custom /ProcSet findresource /currentcoverseparator 2 copy known {
    get exec dup /FrontCoverSheet get 5 eq {
        pop true
    }{
        /BackCoverSheet get 5 eq {
            true
        }{
            /Custom /ProcSet findresource /currentcoverseparator 2 copy known {
                get exec /SeparatorTray get 5 eq {
                    true
                }{
                    false
                } ifelse
            }{
                pop pop false
            } ifelse
        } ifelse
    } ifelse
}{
    pop pop
} ifelse

{
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SMHMediaClass (thick3 side2) put exch exec
    }{
        pop pop
    } ifelse
} if
"
*End
*FXIntSheetMediaType CoatingPaper1/Gloss (106 - 169gsm): "
/Custom /ProcSet findresource /currentcoverseparator 2 copy known {
    get exec dup /FrontCoverSheet get 5 eq {
        pop true
    }{
        /BackCoverSheet get 5 eq {
            true
        }{
            /Custom /ProcSet findresource /currentcoverseparator 2 copy known {
                get exec /SeparatorTray get 5 eq {
                    true
                }{
                    false
                } ifelse
            }{
                pop pop false
            } ifelse
        } ifelse
    } ifelse
}{
    pop pop
} ifelse

{
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SMHMediaClass (coating1) put exch exec
    }{
        pop pop
    } ifelse
} if
"
*End
*FXIntSheetMediaType CoatingPaper1Back/Gloss Reload (106 - 169gsm): "
/Custom /ProcSet findresource /currentcoverseparator 2 copy known {
    get exec dup /FrontCoverSheet get 5 eq {
        pop true
    }{
        /BackCoverSheet get 5 eq {
            true
        }{
            /Custom /ProcSet findresource /currentcoverseparator 2 copy known {
                get exec /SeparatorTray get 5 eq {
                    true
                }{
                    false
                } ifelse
            }{
                pop pop false
            } ifelse
        } ifelse
    } ifelse
}{
    pop pop
} ifelse

{
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SMHMediaClass (coating1 side2) put exch exec
    }{
        pop pop
    } ifelse
} if
"
*End
*FXIntSheetMediaType CoatingPaper2/HW Gloss (170 - 256gsm): "
/Custom /ProcSet findresource /currentcoverseparator 2 copy known {
    get exec dup /FrontCoverSheet get 5 eq {
        pop true
    }{
        /BackCoverSheet get 5 eq {
            true
        }{
            /Custom /ProcSet findresource /currentcoverseparator 2 copy known {
                get exec /SeparatorTray get 5 eq {
                    true
                }{
                    false
                } ifelse
            }{
                pop pop false
            } ifelse
        } ifelse
    } ifelse
}{
    pop pop
} ifelse

{
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SMHMediaClass (coating2) put exch exec
    }{
        pop pop
    } ifelse
} if
"
*End
*FXIntSheetMediaType CoatingPaper2Back/HW Gloss (170 - 256gsm) Reload: "
/Custom /ProcSet findresource /currentcoverseparator 2 copy known {
    get exec dup /FrontCoverSheet get 5 eq {
        pop true
    }{
        /BackCoverSheet get 5 eq {
            true
        }{
            /Custom /ProcSet findresource /currentcoverseparator 2 copy known {
                get exec /SeparatorTray get 5 eq {
                    true
                }{
                    false
                } ifelse
            }{
                pop pop false
            } ifelse
        } ifelse
    } ifelse
}{
    pop pop
} ifelse

{
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SMHMediaClass (coating2 side2) put exch exec
    }{
        pop pop
    } ifelse
} if
"
*End
*FXIntSheetMediaType PrepunchedPaper/Hole Punched: "
/Custom /ProcSet findresource /currentcoverseparator 2 copy known {
    get exec dup /FrontCoverSheet get 5 eq {
        pop true
    }{
        /BackCoverSheet get 5 eq {
            true
        }{
            /Custom /ProcSet findresource /currentcoverseparator 2 copy known {
                get exec /SeparatorTray get 5 eq {
                    true
                }{
                    false
                } ifelse
            }{
                pop pop false
            } ifelse
        } ifelse
    } ifelse
}{
    pop pop
} ifelse

{
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SMHMediaClass (holed) put exch exec
    }{
        pop pop
    } ifelse
} if
"
*End
*FXIntSheetMediaType LetterheadPaper/Letterhead: "
/Custom /ProcSet findresource /currentcoverseparator 2 copy known {
    get exec dup /FrontCoverSheet get 5 eq {
        pop true
    }{
        /BackCoverSheet get 5 eq {
            true
        }{
            /Custom /ProcSet findresource /currentcoverseparator 2 copy known {
                get exec /SeparatorTray get 5 eq {
                    true
                }{
                    false
                } ifelse
            }{
                pop pop false
            } ifelse
        } ifelse
    } ifelse
}{
    pop pop
} ifelse

{
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SMHMediaClass (letterhead) put exch exec
    }{
        pop pop
    } ifelse
} if
"
*End
*FXIntSheetMediaType PrePrintedPaper/Pre-Printed: "
/Custom /ProcSet findresource /currentcoverseparator 2 copy known {
    get exec dup /FrontCoverSheet get 5 eq {
        pop true
    }{
        /BackCoverSheet get 5 eq {
            true
        }{
            /Custom /ProcSet findresource /currentcoverseparator 2 copy known {
                get exec /SeparatorTray get 5 eq {
                    true
                }{
                    false
                } ifelse
            }{
                pop pop false
            } ifelse
        } ifelse
    } ifelse
}{
    pop pop
} ifelse

{
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SMHMediaClass (preprinted) put exch exec
    }{
        pop pop
    } ifelse
} if
"
*End
*FXIntSheetMediaType Envelope/Envelope: "
/Custom /ProcSet findresource /currentcoverseparator 2 copy known {
    get exec dup /FrontCoverSheet get 5 eq {
        pop true
    }{
        /BackCoverSheet get 5 eq {
            true
        }{
            /Custom /ProcSet findresource /currentcoverseparator 2 copy known {
                get exec /SeparatorTray get 5 eq {
                    true
                }{
                    false
                } ifelse
            }{
                pop pop false
            } ifelse
        } ifelse
    } ifelse
}{
    pop pop
} ifelse

{
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SMHMediaClass (envelope) put exch exec
    }{
        pop pop
    } ifelse
} if
"
*End
*FXIntSheetMediaType OtherPaper/Other: "
/Custom /ProcSet findresource /currentcoverseparator 2 copy known {
    get exec dup /FrontCoverSheet get 5 eq {
        pop true
    }{
        /BackCoverSheet get 5 eq {
            true
        }{
            /Custom /ProcSet findresource /currentcoverseparator 2 copy known {
                get exec /SeparatorTray get 5 eq {
                    true
                }{
                    false
                } ifelse
            }{
                pop pop false
            } ifelse
        } ifelse
    } ifelse
}{
    pop pop
} ifelse

{
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SMHMediaClass (other) put exch exec
    }{
        pop pop
    } ifelse
} if
"
*End
*FXIntSheetMediaType CustomSizedPaper1/Custom 1: "
/Custom /ProcSet findresource /currentcoverseparator 2 copy known {
    get exec dup /FrontCoverSheet get 5 eq {
        pop true
    }{
        /BackCoverSheet get 5 eq {
            true
        }{
            /Custom /ProcSet findresource /currentcoverseparator 2 copy known {
                get exec /SeparatorTray get 5 eq {
                    true
                }{
                    false
                } ifelse
            }{
                pop pop false
            } ifelse
        } ifelse
    } ifelse
}{
    pop pop
} ifelse

{
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SMHMediaClass (user1) put exch exec
    }{
        pop pop
    } ifelse
} if
"
*End
*FXIntSheetMediaType CustomSizedPaper2/Custom 2: "
/Custom /ProcSet findresource /currentcoverseparator 2 copy known {
    get exec dup /FrontCoverSheet get 5 eq {
        pop true
    }{
        /BackCoverSheet get 5 eq {
            true
        }{
            /Custom /ProcSet findresource /currentcoverseparator 2 copy known {
                get exec /SeparatorTray get 5 eq {
                    true
                }{
                    false
                } ifelse
            }{
                pop pop false
            } ifelse
        } ifelse
    } ifelse
}{
    pop pop
} ifelse

{
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SMHMediaClass (user2) put exch exec
    }{
        pop pop
    } ifelse
} if
"
*End
*FXIntSheetMediaType CustomSizedPaper3/Custom 3: "
/Custom /ProcSet findresource /currentcoverseparator 2 copy known {
    get exec dup /FrontCoverSheet get 5 eq {
        pop true
    }{
        /BackCoverSheet get 5 eq {
            true
        }{
            /Custom /ProcSet findresource /currentcoverseparator 2 copy known {
                get exec /SeparatorTray get 5 eq {
                    true
                }{
                    false
                } ifelse
            }{
                pop pop false
            } ifelse
        } ifelse
    } ifelse
}{
    pop pop
} ifelse

{
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SMHMediaClass (user3) put exch exec
    }{
        pop pop
    } ifelse
} if
"
*End
*FXIntSheetMediaType CustomSizedPaper4/Custom 4: "
/Custom /ProcSet findresource /currentcoverseparator 2 copy known {
    get exec dup /FrontCoverSheet get 5 eq {
        pop true
    }{
        /BackCoverSheet get 5 eq {
            true
        }{
            /Custom /ProcSet findresource /currentcoverseparator 2 copy known {
                get exec /SeparatorTray get 5 eq {
                    true
                }{
                    false
                } ifelse
            }{
                pop pop false
            } ifelse
        } ifelse
    } ifelse
}{
    pop pop
} ifelse

{
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SMHMediaClass (user4) put exch exec
    }{
        pop pop
    } ifelse
} if
"
*End
*FXIntSheetMediaType CustomSizedPaper5/Custom 5: "
/Custom /ProcSet findresource /currentcoverseparator 2 copy known {
    get exec dup /FrontCoverSheet get 5 eq {
        pop true
    }{
        /BackCoverSheet get 5 eq {
            true
        }{
            /Custom /ProcSet findresource /currentcoverseparator 2 copy known {
                get exec /SeparatorTray get 5 eq {
                    true
                }{
                    false
                } ifelse
            }{
                pop pop false
            } ifelse
        } ifelse
    } ifelse
}{
    pop pop
} ifelse

{
    /Custom /ProcSet findresource /setcoverseparator 2 copy known {
        get 1 dict dup /SMHMediaClass (user5) put exch exec
    }{
        pop pop
    } ifelse
} if
"
*End
*?FXIntSheetMediaType: "
save mark {
    40 dict
    dup (null) (Default) put
    dup (fine) (FinePaper) put
    dup (stationary) (Stationary) put
    dup (used) (StationaryBack) put
    dup (recycled) (RecyclePaper) put
    dup (transparency) (Transparency) put
    dup (thin) (ThinPaper) put
    dup (label) (LabelPaper) put
    dup (thick1) (ThickPaper) put
    dup (thick1 side2) (ThickPaperBack) put
    dup (thick2) (ThickPaper2) put
    dup (thick2 side2) (ThickPaper2Back) put
    dup (thick3) (ThickPaper3) put
    dup (thick3 side2) (ThickPaper3Back) put
    dup (coating1) (CoatingPaper1) put
    dup (coating1 side2) (CoatingPaper1Back) put
    dup (coating2) (CoatingPaper2) put
    dup (coating2 side2) (CoatingPaper2Back) put
    dup (holed) (PrepunchedPaper) put
    dup (letterhead) (LetterheadPaper) put
    dup (preprinted) (PrePrintedPaper) put
    dup (envelope) (Envelope) put
    dup (other) (OtherPaper) put
    dup (user1) (CustomSizedPaper1) put
    dup (user2) (CustomSizedPaper2) put
    dup (user3) (CustomSizedPaper3) put
    dup (user4) (CustomSizedPaper4) put
    dup (user5) (CustomSizedPaper5) put
    /Custom /ProcSet findresource /currentcoverseparator get /SMHMediaClass get get = flush
} stopped { (Unknown) = flush } if
cleartomark restore
"
*End
*CloseUI: *FXIntSheetMediaType

*OpenGroup: FXTransparencyGroup/Transparency Separators
*OpenUI *FXSlipSheet/Transp. Separators: PickOne
*OrderDependency: 120.0 AnySetup *FXSlipSheet
*DefaultFXSlipSheet: OFF
*FXSlipSheet OFF/No Separators: "1 dict dup/SlipSheet 0 put setpagedevice"
*FXSlipSheet AutoTray/Auto Paper Select: "2 dict dup dup/SlipSheet 4 put/SlipSheetDetails 2 dict dup/AutoTraySelect 1 put dup/Type 1 put put setpagedevice"
*FXSlipSheet 1stTray/Tray 1: "
    2 dict dup dup /SlipSheet 4 put
    /SlipSheetDetails 3 dict dup /AutoTraySelect 0 put
    dup /Type 1 put dup
    /SheetTray 0 put put setpagedevice
"
*End
*FXSlipSheet 2ndTray/Tray 2: "
    2 dict dup dup /SlipSheet 4 put
    /SlipSheetDetails 3 dict dup /AutoTraySelect 0 put
    dup /Type 1 put dup
    /SheetTray 1 put put setpagedevice
"
*End
*FXSlipSheet 3rdTray/Tray 3: "
    2 dict dup dup /SlipSheet 4 put
    /SlipSheetDetails 3 dict dup /AutoTraySelect 0 put
    dup /Type 1 put dup
    /SheetTray 2 put put setpagedevice
"
*End
*FXSlipSheet 4thTray/Tray 4: "
    2 dict dup dup /SlipSheet 4 put
    /SlipSheetDetails 3 dict dup /AutoTraySelect 0 put
    dup /Type 1 put dup
    /SheetTray 3 put put setpagedevice
"
*End
*FXSlipSheet 3rdTrayTTM/Tray 3 (High Capacity): "
    2 dict dup dup /SlipSheet 4 put
    /SlipSheetDetails 3 dict dup /AutoTraySelect 0 put
    dup /Type 1 put dup
    /SheetTray 2 put put setpagedevice
"
*End
*FXSlipSheet 4thTrayTTM/Tray 4 (High Capacity): "
    2 dict dup dup /SlipSheet 4 put
    /SlipSheetDetails 3 dict dup /AutoTraySelect 0 put
    dup /Type 1 put dup
    /SheetTray 3 put put setpagedevice
"
*End
*FXSlipSheet MSI/Tray 5 (Bypass): "
    2 dict dup dup /SlipSheet 4 put
    /SlipSheetDetails 3 dict dup /AutoTraySelect 0 put
    dup /Type 1 put dup
    /SheetTray 100 put put setpagedevice
"
*End
*FXSlipSheet HCF1/Tray 6: "
    2 dict dup dup /SlipSheet 4 put
    /SlipSheetDetails 3 dict dup /AutoTraySelect 0 put
    dup /Type 1 put dup
    /SheetTray 4 put put setpagedevice
"
*End
*?FXSlipSheet: "
save
  currentpagedevice /SlipSheet known {
    currentpagedevice dup /SlipSheet get 0 eq {pop (OFF)}
    {
       /SlipSheetDetails known {
          currentpagedevice /SlipSheetDetails get dup /Type get 1 eq {
            dup /AutoTraySelect get 1 eq {pop (AutoTray)}
            { /SheetTray get dup 1 ge {
                /Custom /ProcSet resourcestatus {
                  pop pop /Custom /ProcSet findresource dup /engineoptions known {
                    /engineoptions get exec /TandemTray 2 copy known {get {2 add} if}{pop pop} ifelse
                  } {pop} ifelse
                } if
              } if
              dup 100 eq {pop (MSI)}{[(1stTray)(2ndTray)(3rdTray)(4thTray)(3rdTrayTTM)(4thTrayTTM)(HCF1)] exch get} ifelse
            } ifelse
          } {pop (Unknown)} ifelse
       } {(Unknown)} ifelse
    } ifelse
  }{(Unknown)} ifelse
  = flush
restore
"
*End
*CloseUI: *FXSlipSheet

*OpenUI *FXSlipSheetPrint/Print on Transp. Separators: PickOne
*OrderDependency: 119.0 AnySetup *FXSlipSheetPrint
*DefaultFXSlipSheetPrint: Off
*FXSlipSheetPrint Off/Blank Separators: "
  /Custom /ProcSet resourcestatus {
    pop pop /Custom/ProcSet findresource dup /setjobinstruction known {
      begin 
      1 dict dup/Interleaf 0 put setjobinstruction
      end
    }{pop} ifelse
  } if
"
*End
*FXSlipSheetPrint On/Printed Separators: "
  /Custom /ProcSet resourcestatus {
    pop pop /Custom/ProcSet findresource dup /setjobinstruction known {
      begin 
      1 dict dup/Interleaf 1 put setjobinstruction
      end
    }{pop} ifelse
  } if
"
*End
*CloseUI: *FXSlipSheetPrint

*OpenUI *FXSlipSheetMediaType/Paper Type (Transp. Separators): PickOne
*OrderDependency: 125.0 AnySetup *FXSlipSheetMediaType
*DefaultFXSlipSheetMediaType: Default
*FXSlipSheetMediaType Default/Printer Default: ""
*FXSlipSheetMediaType FinePaper/Bond: "1 dict dup/SlipSheetDetails 2 dict dup/Type 1 put dup/MediaClass(fine)put put setpagedevice"
*FXSlipSheetMediaType Stationary/Plain: "1 dict dup/SlipSheetDetails 2 dict dup/Type 1 put dup/MediaClass(stationary)put put setpagedevice"
*FXSlipSheetMediaType StationaryBack/Plain Reload: "1 dict dup/SlipSheetDetails 2 dict dup/Type 1 put dup/MediaClass(used)put put setpagedevice"
*FXSlipSheetMediaType RecyclePaper/Recycled: "1 dict dup/SlipSheetDetails 2 dict dup/Type 1 put dup/MediaClass(recycled)put put setpagedevice"
*FXSlipSheetMediaType ThinPaper/Lightweight: "1 dict dup/SlipSheetDetails 2 dict dup/Type 1 put dup/MediaClass(thin)put put setpagedevice"
*FXSlipSheetMediaType LabelPaper/Labels: "1 dict dup/SlipSheetDetails 2 dict dup/Type 1 put dup/MediaClass(label)put put setpagedevice"
*FXSlipSheetMediaType ThickPaper/Heavyweight (HW) (106 - 169gsm): "1 dict dup/SlipSheetDetails 2 dict dup/Type 1 put dup/MediaClass(thick1)put put setpagedevice"
*FXSlipSheetMediaType ThickPaperBack/HW Reload (106 - 169gsm): "1 dict dup/SlipSheetDetails 2 dict dup/Type 1 put dup/MediaClass(thick1 side2)put put setpagedevice"
*FXSlipSheetMediaType ThickPaper2/Extra HW (X-HW) (170 - 256gsm): "1 dict dup/SlipSheetDetails 2 dict dup/Type 1 put dup/MediaClass(thick2)put put setpagedevice"
*FXSlipSheetMediaType ThickPaper2Back/X-HW Reload (170 - 256gsm): "1 dict dup/SlipSheetDetails 2 dict dup/Type 1 put dup/MediaClass(thick2 side2)put put setpagedevice"
*FXSlipSheetMediaType ThickPaper3/X-HW Plus (X-HW) (257 - 280gsm): "1 dict dup/SlipSheetDetails 2 dict dup/Type 1 put dup/MediaClass(thick3)put put setpagedevice"
*FXSlipSheetMediaType ThickPaper3Back/X-HW Plus Reload (257 - 280gsm): "1 dict dup/SlipSheetDetails 2 dict dup/Type 1 put dup/MediaClass(thick3 side2)put put setpagedevice"
*FXSlipSheetMediaType CoatingPaper1/Gloss (106 - 169gsm): "1 dict dup/SlipSheetDetails 2 dict dup/Type 1 put dup/MediaClass(coating1)put put setpagedevice"
*FXSlipSheetMediaType CoatingPaper1Back/Gloss Reload (106 - 169gsm): "1 dict dup/SlipSheetDetails 2 dict dup/Type 1 put dup/MediaClass(coating1 side2)put put setpagedevice"
*FXSlipSheetMediaType CoatingPaper2/HW Gloss (170 - 256gsm): "1 dict dup/SlipSheetDetails 2 dict dup/Type 1 put dup/MediaClass(coating2)put put setpagedevice"
*FXSlipSheetMediaType CoatingPaper2Back/HW Gloss (170 - 256gsm) Reload: "1 dict dup/SlipSheetDetails 2 dict dup/Type 1 put dup/MediaClass(coating2 side2)put put setpagedevice"
*FXSlipSheetMediaType PrepunchedPaper/Hole Punched: "1 dict dup/SlipSheetDetails 2 dict dup/Type 1 put dup/MediaClass(hold)put put setpagedevice"
*FXSlipSheetMediaType LetterheadPaper/Letterhead: "1 dict dup/SlipSheetDetails 2 dict dup/Type 1 put dup/MediaClass(letterhead)put put setpagedevice"
*FXSlipSheetMediaType PrePrintedPaper/Pre-Printed: "1 dict dup/SlipSheetDetails 2 dict dup/Type 1 put dup/MediaClass(preprinted)put put setpagedevice"
*FXSlipSheetMediaType Envelope/Envelope: "1 dict dup/SlipSheetDetails 2 dict dup/Type 1 put dup/MediaClass(envelope)put put setpagedevice"
*FXSlipSheetMediaType OtherPaper/Other: "1 dict dup/SlipSheetDetails 2 dict dup/Type 1 put dup/MediaClass(other)put put setpagedevice"
*FXSlipSheetMediaType CustomSizedPaper1/Custom 1: "1 dict dup/SlipSheetDetails 2 dict dup/Type 1 put dup/MediaClass(user1)put put setpagedevice"
*FXSlipSheetMediaType CustomSizedPaper2/Custom 2: "1 dict dup/SlipSheetDetails 2 dict dup/Type 1 put dup/MediaClass(user2)put put setpagedevice"
*FXSlipSheetMediaType CustomSizedPaper3/Custom 3: "1 dict dup/SlipSheetDetails 2 dict dup/Type 1 put dup/MediaClass(user3)put put setpagedevice"
*FXSlipSheetMediaType CustomSizedPaper4/Custom 4: "1 dict dup/SlipSheetDetails 2 dict dup/Type 1 put dup/MediaClass(user4)put put setpagedevice"
*FXSlipSheetMediaType CustomSizedPaper5/Custom 5: "1 dict dup/SlipSheetDetails 2 dict dup/Type 1 put dup/MediaClass(user5)put put setpagedevice"
*?FXSlipSheetMediaType: "
save
mark {
  currentpagedevice /SlipSheetDetails get
  dup /Type 1 ne {stop} if
  /MediaClass get
  dup (null) eq {(Default)=} if
  dup (fine) eq {(FinePaper)=} if
  dup (stationary) eq {(Stationary)=} if
  dup (used) eq {(StationaryBack)=} if
  dup (recycled) eq {(RecyclePaper)=} if
  dup (thin) eq {(ThinPaper)=} if
  dup (label) eq {(LabelPaper)=} if
  dup (thick1) eq {(ThickPaper)=} if
  dup (thick1 side2) eq {(ThickPaperBack)=} if
  dup (thick2) eq {(ThickPaper2)=} if
  dup (thick2 side2) eq {(ThickPaper2Back)=} if
  dup (thick3) eq {(ThickPaper3)=} if
  dup (thick3 side2) eq {(ThickPaper3Back)=} if
  dup (coating1) eq {(CoatingPaper1)=} if
  dup (coating1 side2) eq {(CoatingPaper1Back)=} if
  dup (coating2) eq {(CoatingPaper2)=} if
  dup (coating2 side2) eq {(CoatingPaper2Back)=} if
  dup (hold) eq {(PrepunchedPaper)=} if
  dup (letterhead) eq {(LetterheadPaper)=} if
  dup (preprinted) eq {(PrePrintedPaper)=} if
  dup (envelope) eq {(Envelope)=} if
  dup (other) eq {(OtherPaper)=} if
  dup (user1) eq {(CustomSizedPaper1)=} if
  dup (user2) eq {(CustomSizedPaper2)=} if
  dup (user3) eq {(CustomSizedPaper3)=} if
  dup (user4) eq {(CustomSizedPaper4)=} if
  dup (user5) eq {(CustomSizedPaper5)=} if
  pop
} stopped {(Unknown)=} if
cleartomark
flush
restore
"
*End
*CloseUI: *FXSlipSheetMediaType

*CloseGroup: FXTransparencyGroup
*OpenUI *FXUncollateSeparator/Separators: PickOne
*OrderDependency: 150.0 AnySetup *FXUncollateSeparator
*DefaultFXUncollateSeparator: None
*FXUncollateSeparator None/No Separators: "
	/Custom /ProcSet findresource /setuncollateseparator 2 copy known {
		get 1 dict dup /SeparatorTray 0 put exch exec
	}{
		pop pop
	} ifelse
"
*End
*FXUncollateSeparator 1stTray/Tray 1: "
	/Custom /ProcSet findresource /setuncollateseparator 2 copy known {
		get 1 dict dup /SeparatorTray 1 put exch exec
	}{
		pop pop
	} ifelse
"
*End
*FXUncollateSeparator 2ndTray/Tray 2: "
	/Custom /ProcSet findresource /setuncollateseparator 2 copy known {
		get 1 dict dup /SeparatorTray 2 put exch exec
	}{
		pop pop
	} ifelse
"
*End
*FXUncollateSeparator 3rdTray/Tray 3: "
	/Custom /ProcSet findresource /setuncollateseparator 2 copy known {
		get 1 dict dup /SeparatorTray 3 put exch exec
	}{
		pop pop
	} ifelse
"
*End
*FXUncollateSeparator 4thTray/Tray 4: "
	/Custom /ProcSet findresource /setuncollateseparator 2 copy known {
		get 1 dict dup /SeparatorTray 4 put exch exec
	}{
		pop pop
	} ifelse
"
*End
*FXUncollateSeparator 3rdTrayTTM/Tray 3 (High Capacity): "
	/Custom /ProcSet findresource /setuncollateseparator 2 copy known {
		get 1 dict dup /SeparatorTray 3 put exch exec
	}{
		pop pop
	} ifelse
"
*End
*FXUncollateSeparator 4thTrayTTM/Tray 4 (High Capacity): "
	/Custom /ProcSet findresource /setuncollateseparator 2 copy known {
		get 1 dict dup /SeparatorTray 4 put exch exec
	}{
		pop pop
	} ifelse
"
*End
*FXUncollateSeparator MSI/Tray 5 (Bypass): "
	/Custom /ProcSet findresource /setuncollateseparator 2 copy known {
		get 1 dict dup /SeparatorTray 5 put exch exec
	}{
		pop pop
	} ifelse
"
*End
*FXUncollateSeparator HCF1/Tray 6: "
	/Custom /ProcSet findresource /setuncollateseparator 2 copy known {
		get 1 dict dup /SeparatorTray 6 put exch exec
	}{
		pop pop
	} ifelse
"
*End
*?FXUncollateSeparator: "
	save mark {
		[
			(None)
			(1stTray)
			(2ndTray)
			(3rdTray)
			(4thTray)
			(MSI)
			(HCF1)
		] /Custom /ProcSet findresource /currentuncollateseparator get exec
		/SeparatorTray get get 
		} stopped {(Unknown)}
		{
		/Custom /ProcSet resourcestatus 
			{ pop pop /Custom /ProcSet findresource
			  dup /engineoptions known {
				/engineoptions get exec
				/TandemTray 2 copy known {get}{pop pop false} ifelse
			  }
			  { pop false } ifelse
			  { dup (4thTray) eq { pop (4thTrayTTM) } 
			  { dup (3rdTray) eq { pop (3rdTrayTTM) } if
			  	}ifelse
			  } if
			} if
		}ifelse
	= flush
	cleartomark restore
"
*End
*CloseUI: *FXUncollateSeparator

*OpenUI *FXSignature/Booklet Creation: PickOne
*OrderDependency: 10.0 AnySetup *FXSignature
*DefaultFXSignature: None
*FXSignature None/No Booklets: ""
*FXSignature LeftSig/Left Bind / Top Bind: "
/Custom /ProcSet findresource /setsignature 2 copy known {
    get 2 exch exec
    6 dict
    dup /Collate true put
    dup /PageSize [595 842] put
    dup /Duplex true put
    dup /Tumble true put
    dup /DeferredMediaSelection true put
    dup /Policies 1 dict dup /PageSize 1 put put
    setpagedevice
}{
    pop pop
} ifelse
"
*End
*FXSignature RightSig/Right Bind / Bottom Bind: "
/Custom /ProcSet findresource /setsignature 2 copy known {
    get 1 exch exec
    6 dict
    dup /Collate true put
    dup /PageSize [595 842] put
    dup /Duplex true put
    dup /Tumble true put
    dup /DeferredMediaSelection true put
    dup /Policies 1 dict dup /PageSize 1 put put
    setpagedevice
}{
    pop pop
} ifelse
"
*End
*FXSignature LeftSigCenterStaple/Booklet Staple (Left / Top Bind):  "
/Custom /ProcSet findresource /engineoptions get exec /Finisher 2 copy known {
  get exec dup (C) eq exch (B1) eq or {
    /Custom /ProcSet findresource /setsignature 2 copy known {
        get 2 exch exec
        9 dict
        dup /Collate true put
        dup /PageSize [595 842] put
        dup /Duplex true put
        dup /Tumble true put
        dup /DeferredMediaSelection true put
        dup /Policies 1 dict dup /PageSize 1 put put
        dup /Booklet true put
        dup /OutputType (BOOKLET TRAY) put
        dup /BookletDetails
          4 dict
            dup /Type 3 put
            dup /StapleType 1 put
            dup /PrintInside true put
            dup /PageSet true put
          put
        setpagedevice
    }{
        pop pop
    } ifelse
  } if
}{ pop pop  } ifelse
"
*End
*FXSignature RightSigCenterStaple/Booklet Staple (Right / Bottom Bind):  "
/Custom /ProcSet findresource /engineoptions get exec /Finisher 2 copy known {
  get exec dup (C) eq exch (B1) eq or {
    /Custom /ProcSet findresource /setsignature 2 copy known {
        get 1 exch exec
        9 dict
        dup /Collate true put
        dup /PageSize [595 842] put
        dup /Duplex true put
        dup /Tumble true put
        dup /DeferredMediaSelection true put
        dup /Policies 1 dict dup /PageSize 1 put put
        dup /Booklet true put
        dup /OutputType (BOOKLET TRAY) put
        dup /BookletDetails
          4 dict
            dup /Type 3 put
            dup /StapleType 1 put
            dup /PrintInside true put
            dup /PageSet true put
          put
        setpagedevice
    }{
        pop pop
    } ifelse
  } if
}{ pop pop  } ifelse
"
*End
*FXSignature LeftSigFold/Bi-Fold (Left / Top Bind):  "
/Custom /ProcSet findresource /engineoptions get exec /Finisher 2 copy known {
  get exec dup (C) eq exch (B1) eq or {
    /Custom /ProcSet findresource /setsignature 2 copy known {
        get 2 exch exec
        9 dict
        dup /Collate true put
        dup /PageSize [595 842] put
        dup /Duplex true put
        dup /Tumble true put
        dup /DeferredMediaSelection true put
        dup /Policies 1 dict dup /PageSize 1 put put
        dup /Booklet true put
        dup /OutputType (BOOKLET TRAY) put
        dup /BookletDetails
          4 dict
            dup /Type 3 put
            dup /StapleType 0 put
            dup /PrintInside true put
            dup /PageSet true put
          put
        setpagedevice
    }{
        pop pop
    } ifelse
  } if
}{ pop pop  } ifelse
"
*End
*FXSignature RightSigFold/Bi-Fold (Right / Bottom Bind):  "
/Custom /ProcSet findresource /engineoptions get exec /Finisher 2 copy known {
  get exec dup (C) eq exch (B1) eq or {
    /Custom /ProcSet findresource /setsignature 2 copy known {
        get 1 exch exec
        9 dict
        dup /Collate true put
        dup /PageSize [595 842] put
        dup /Duplex true put
        dup /Tumble true put
        dup /DeferredMediaSelection true put
        dup /Policies 1 dict dup /PageSize 1 put put
        dup /Booklet true put
        dup /OutputType (BOOKLET TRAY) put
        dup /BookletDetails
          4 dict
            dup /Type 3 put
            dup /StapleType 0 put
            dup /PrintInside true put
            dup /PageSet true put
          put
        setpagedevice
    }{
        pop pop
    } ifelse
  } if
}{ pop pop  } ifelse
"
*End
*?FXSignature: "
    save 
    /Custom /ProcSet findresource dup /currentsignature known {
    /currentsignature get exec dup 0 eq {
        (None)
    }{
        1 eq {
                currentpagedevice /OutputType get (BOOKLET TRAY) eq {
            currentpagedevice /BookletDetails get /StapleType get 0 eq {
                        /Custom /ProcSet findresource /currentsignaturemultifold get exec 1 eq {
                            (RightSigFoldSingle)
                        }{
                            (RightSigFoldMulti)
                        } ifelse
                    }{
                        (RightSigCenterStaple)
                    } ifelse
                }{
                    (RightSig)
                } ifelse
            }{
                currentpagedevice /OutputType get (BOOKLET TRAY) eq {
                    currentpagedevice /BookletDetails get /StapleType get 0 eq {
                        /Custom /ProcSet findresource /currentsignaturemultifold get exec 1 eq {
                            (LeftSigFoldSingle)
                        }{
                            (LeftSigFoldMulti)
                        } ifelse
                    }{
                        (LeftSigCenterStaple)
                    } ifelse
                }{
                    (LeftSig)
                } ifelse
            } ifelse
        } ifelse
    }{
        pop (Unknown)
    } ifelse    
    = flush restore
"
*End
*CloseUI: *FXSignature

*OpenUI *FXSigSize/Booklet Output Size: PickOne
*OrderDependency: 240.0 AnySetup *FXSigSize
*DefaultFXSigSize: None
*FXSigSize None/Printer Default: ""
*FXSigSize A3/A3 (297 x 420mm): "/Custom/ProcSet findresource/setsignatureoutputsize 2 copy known{get[842 1191]exch exec}{pop pop}ifelse"
*FXSigSize A4/A4 (210 x 297mm): "/Custom/ProcSet findresource/setsignatureoutputsize 2 copy known{get[595 842]exch exec}{pop pop}ifelse"
*FXSigSize B4/B4 (257 x 364mm): "/Custom/ProcSet findresource/setsignatureoutputsize 2 copy known{get[729 1032]exch exec}{pop pop}ifelse"
*FXSigSize LT/Letter (8.5 x 11"): "/Custom/ProcSet findresource/setsignatureoutputsize 2 copy known{get[612 792]exch exec}{pop pop}ifelse"
*FXSigSize DL/Tabloid (11 x 17"): "/Custom/ProcSet findresource/setsignatureoutputsize 2 copy known{get[792 1224]exch exec}{pop pop}ifelse"
*FXSigSize SigTray1/From Tray 1: "
/Custom/ProcSet findresource/setsignatureoutputsize 2 copy known {
    get
    currentpagedevice/InputAttributes get 0 2 copy known {
        get/PageSize get exch exec
        1 dict dup /MediaPosition 0 put setpagedevice
    }{
        pop pop pop
    }ifelse
}{
    pop pop
} ifelse
"
*End
*FXSigSize SigTray2/From Tray 2: "
/Custom/ProcSet findresource/setsignatureoutputsize 2 copy known {
    get
    currentpagedevice/InputAttributes get 1 2 copy known {
        get/PageSize get exch exec
        1 dict dup /MediaPosition 1 put setpagedevice
    }{
        pop pop pop
    }ifelse
}{
    pop pop
} ifelse
"
*End
*FXSigSize SigTray3/From Tray 3: "
/Custom/ProcSet findresource/setsignatureoutputsize 2 copy known {
    get
    currentpagedevice/InputAttributes get 2 2 copy known {
        get/PageSize get exch exec
        1 dict dup /MediaPosition 2 put setpagedevice
    }{
        pop pop pop
    }ifelse
}{
    pop pop
} ifelse
"
*End
*FXSigSize SigTray4/From Tray 4: "
/Custom/ProcSet findresource/setsignatureoutputsize 2 copy known {
    get
    currentpagedevice/InputAttributes get 3 2 copy known {
        get/PageSize get exch exec
        1 dict dup /MediaPosition 3 put setpagedevice
    }{
        pop pop pop
    }ifelse
}{
    pop pop
} ifelse
"
*End
*?FXSigSize: "(None)pop(A3)pop(A4)pop(B4)pop(LT)pop(DL)pop(SigTray1)pop(SigTray2)pop(SigTray3)pop(SigTray4)pop(Unknown)== flush"
*CloseUI: *FXSigSize

*OpenUI *FXSigVol/Booklet Divide Output: PickOne
*OrderDependency: 245.0 AnySetup *FXSigVol
*DefaultFXSigVol: None
*FXSigVol None/Off: "
/Custom /ProcSet findresource dup /setsignature known {
    dup /currentsignature get exec 0 gt {
        dup /setsignaturevolume get 0 exch exec
    } if
} if
pop
"
*End
*FXSigVol 1Sheet/Each Sheet: "
/Custom /ProcSet findresource dup /setsignature known {
    dup /currentsignature get exec 0 gt {
        dup /setsignaturevolume get 1 exch exec
    } if
} if
pop
"
*End
*FXSigVol 2Sheets/2 Sheets: "
/Custom /ProcSet findresource dup /setsignature known {
    dup /currentsignature get exec 0 gt {
        dup /setsignaturevolume get 2 exch exec
    } if
} if
pop
"
*End
*FXSigVol 3Sheets/3 Sheets: "
/Custom /ProcSet findresource dup /setsignature known {
    dup /currentsignature get exec 0 gt {
        dup /setsignaturevolume get 3 exch exec
    } if
} if
pop
"
*End
*FXSigVol 4Sheets/4 Sheets: "
/Custom /ProcSet findresource dup /setsignature known {
    dup /currentsignature get exec 0 gt {
        dup /setsignaturevolume get 4 exch exec
    } if
} if
pop
"
*End
*FXSigVol 5Sheets/5 Sheets: "
/Custom /ProcSet findresource dup /setsignature known {
    dup /currentsignature get exec 0 gt {
        dup /setsignaturevolume get 5 exch exec
    } if
} if
pop
"
*End
*FXSigVol 6Sheets/6 Sheets: "
/Custom /ProcSet findresource dup /setsignature known {
    dup /currentsignature get exec 0 gt {
        dup /setsignaturevolume get 6 exch exec
    } if
} if
pop
"
*End
*FXSigVol 7Sheets/7 Sheets: "
/Custom /ProcSet findresource dup /setsignature known {
    dup /currentsignature get exec 0 gt {
        dup /setsignaturevolume get 7 exch exec
    } if
} if
pop
"
*End
*FXSigVol 8Sheets/8 Sheets: "
/Custom /ProcSet findresource dup /setsignature known {
    dup /currentsignature get exec 0 gt {
        dup /setsignaturevolume get 8 exch exec
    } if
} if
pop
"
*End
*FXSigVol 9Sheets/9 Sheets: "
/Custom /ProcSet findresource dup /setsignature known {
    dup /currentsignature get exec 0 gt {
        dup /setsignaturevolume get 9 exch exec
    } if
} if
pop
"
*End
*FXSigVol 10Sheets/10 Sheets: "
/Custom /ProcSet findresource dup /setsignature known {
    dup /currentsignature get exec 0 gt {
        dup /setsignaturevolume get 10 exch exec
    } if
} if
pop
"
*End
*FXSigVol 11Sheets/11 Sheets: "
/Custom /ProcSet findresource dup /setsignature known {
    dup /currentsignature get exec 0 gt {
        dup /setsignaturevolume get 11 exch exec
    } if
} if
pop
"
*End
*FXSigVol 12Sheets/12 Sheets: "
/Custom /ProcSet findresource dup /setsignature known {
    dup /currentsignature get exec 0 gt {
        dup /setsignaturevolume get 12 exch exec
    } if
} if
pop
"
*End
*FXSigVol 13Sheets/13 Sheets: "
/Custom /ProcSet findresource dup /setsignature known {
    dup /currentsignature get exec 0 gt {
        dup /setsignaturevolume get 13 exch exec
    } if
} if
pop
"
*End
*FXSigVol 14Sheets/14 Sheets: "
/Custom /ProcSet findresource dup /setsignature known {
    dup /currentsignature get exec 0 gt {
        dup /setsignaturevolume get 14 exch exec
    } if
} if
pop
"
*End
*FXSigVol 15Sheets/15 Sheets: "
/Custom /ProcSet findresource dup /setsignature known {
    dup /currentsignature get exec 0 gt {
        dup /setsignaturevolume get 15 exch exec
    } if
} if
pop
"
*End
*FXSigVol 16Sheets/16 Sheets: "
/Custom /ProcSet findresource dup /setsignature known {
    dup /currentsignature get exec 0 gt {
        dup /setsignaturevolume get 16 exch exec
    } if
} if
pop
"
*End
*FXSigVol 17Sheets/17 Sheets: "
/Custom /ProcSet findresource dup /setsignature known {
    dup /currentsignature get exec 0 gt {
        dup /setsignaturevolume get 17 exch exec
    } if
} if
pop
"
*End
*FXSigVol 18Sheets/18 Sheets: "
/Custom /ProcSet findresource dup /setsignature known {
    dup /currentsignature get exec 0 gt {
        dup /setsignaturevolume get 18 exch exec
    } if
} if
pop
"
*End
*FXSigVol 19Sheets/19 Sheets: "
/Custom /ProcSet findresource dup /setsignature known {
    dup /currentsignature get exec 0 gt {
        dup /setsignaturevolume get 19 exch exec
    } if
} if
pop
"
*End
*FXSigVol 20Sheets/20 Sheets: "
/Custom /ProcSet findresource dup /setsignature known {
    dup /currentsignature get exec 0 gt {
        dup /setsignaturevolume get 20 exch exec
    } if
} if
pop
"
*End
*FXSigVol 21Sheets/21 Sheets: "
/Custom /ProcSet findresource dup /setsignature known {
    dup /currentsignature get exec 0 gt {
        dup /setsignaturevolume get 21 exch exec
    } if
} if
pop
"
*End
*FXSigVol 22Sheets/22 Sheets: "
/Custom /ProcSet findresource dup /setsignature known {
    dup /currentsignature get exec 0 gt {
        dup /setsignaturevolume get 22 exch exec
    } if
} if
pop
"
*End
*FXSigVol 23Sheets/23 Sheets: "
/Custom /ProcSet findresource dup /setsignature known {
    dup /currentsignature get exec 0 gt {
        dup /setsignaturevolume get 23 exch exec
    } if
} if
pop
"
*End
*FXSigVol 24Sheets/24 Sheets: "
/Custom /ProcSet findresource dup /setsignature known {
    dup /currentsignature get exec 0 gt {
        dup /setsignaturevolume get 24 exch exec
    } if
} if
pop
"
*End
*FXSigVol 25Sheets/25 Sheets: "
/Custom /ProcSet findresource dup /setsignature known {
    dup /currentsignature get exec 0 gt {
        dup /setsignaturevolume get 25 exch exec
    } if
} if
pop
"
*End
*?FXSigVol: "
    save 
    /Custom /ProcSet findresource dup /currentsignaturevolume known {
        /currentsignaturevolume get exec
        26 dict
        dup 0 (None) put
        dup 1 (1Sheet) put
        dup 2 (2Sheets) put
        dup 3 (3Sheets) put
        dup 4 (4Sheets) put
        dup 5 (5Sheets) put
        dup 6 (6Sheets) put
        dup 7 (7Sheets) put
        dup 8 (8Sheets) put
        dup 9 (9Sheets) put
        dup 10 (10Sheets) put
        dup 11 (11Sheets) put
        dup 12 (12Sheets) put
        dup 13 (13Sheets) put
        dup 14 (14Sheets) put
        dup 15 (15Sheets) put
        dup 16 (16Sheets) put
        dup 17 (17Sheets) put
        dup 18 (18Sheets) put
        dup 19 (19Sheets) put
        dup 20 (20Sheets) put
        dup 21 (21Sheets) put
        dup 22 (22Sheets) put
        dup 23 (23Sheets) put
        dup 24 (24Sheets) put
        dup 25 (25Sheets) put
    exch 2 copy known { get } { pop pop (Unknown) } ifelse
   } {
       pop (Unknown)
   } ifelse
    = flush restore
"
*End
*CloseUI: *FXSigVol

*OpenUI *FXSigDrawOutline/Draw outlines option in Booklet: Boolean
*OrderDependency: 250.0 AnySetup *FXSigDrawOutline
*DefaultFXSigDrawOutline: False
*FXSigDrawOutline False/Off: "/Custom/ProcSet findresource/setsignatureimageborder 2 copy known{get false exch exec}{pop pop}ifelse"
*FXSigDrawOutline True/On: "/Custom/ProcSet findresource/setsignatureimageborder 2 copy known{get true exch exec}{pop pop}ifelse"
*?FXSigDrawOutline: "
    save mark {
        /Custom /ProcSet findresource /currentsignatureimageborder get exec
        {(True)}{(False)} ifelse = flush
    } stopped { (Unknown) = flush } if
    cleartomark restore
"
*End
*CloseUI: *FXSigDrawOutline

*OpenUI *FXMixSizePrint/Print Mixed Size Originals: Boolean
*OrderDependency: 130.0 AnySetup *FXMixSizePrint
*DefaultFXMixSizePrint: False
*FXMixSizePrint False/Same Size: "
/Custom /ProcSet resourcestatus
 { pop pop /Custom /ProcSet findresource dup /setmixsizeenable known
   {/setmixsizeenable get false exch exec}{pop} ifelse
 }if
"
*End
*FXMixSizePrint True/Mixed Sized: "
/Custom /ProcSet resourcestatus
 { pop pop /Custom /ProcSet findresource dup /setmixsizeenable known
   {/setmixsizeenable get true exch exec}{pop} ifelse
 }if
"
*End
*?FXMixSizePrint: "
save
/Custom /ProcSet resourcestatus
 { pop pop /Custom /ProcSet findresource dup /currentmixsizeenable known
   {/currentmixsizeenable get exec {(True)}{(False)} ifelse  }{pop (Unknown)} ifelse
 }if
= flush
restore
"
*End
*CloseUI: *FXMixSizePrint

*OpenUI *FXCustomPageSizeCorrection/Custom Paper Auto Orientation: Boolean
*OrderDependency: 1.0 Prolog *FXCustomPageSizeCorrection
*DefaultFXCustomPageSizeCorrection: True
*FXCustomPageSizeCorrection True/On: "userdict /4.3PPDCompliant false put"
*FXCustomPageSizeCorrection False/Off: "userdict /4.3PPDCompliant true put"
*?FXCustomPageSizeCorrection: "
    save
    (Unknown)
    userdict /4.3PPDCompliant known
        {userdict /4.3PPDCompliant get
            {pop (False) }{pop (True)} ifelse
        } if
        = flush
    restore
"
*End
*CloseUI: *FXCustomPageSizeCorrection

*HWMargins: 11.62 11.62 11.62 11.62
*LeadingEdge Short: ""
*DefaultLeadingEdge: Short
*MaxMediaWidth: "907"
*MaxMediaHeight: "1369"
*ParamCustomPageSize Height:       1 points 278 1369
*ParamCustomPageSize Width:        2 points 253 907
*ParamCustomPageSize WidthOffset:  3 points 0 0 
*ParamCustomPageSize HeightOffset: 4 points 0 0 
*ParamCustomPageSize Orientation:  5 int 1 1
*NonUIOrderDependency: 40.0 AnySetup *CustomPageSize
*CustomPageSize True: "
userdict /4.3PPDCompliant known
    {userdict /4.3PPDCompliant get } {false} ifelse
{
  pop pop pop
  3 dict begin
    /PageSize [
      4 -2 roll
    ] def
  /ImagingBBox null def
  currentdict end setpagedevice
}{
  pop pop pop
  3 dict begin
    /PageSize [
      4 -2 roll exch
    ] def
  /ImagingBBox null def
  currentdict end setpagedevice
} ifelse
"
*End

*OpenUI *FXMSILeadingEdge/Feed Orientation: PickOne
*OrderDependency: 110.0 AnySetup *FXMSILeadingEdge
*DefaultFXMSILeadingEdge: LongEdge
*FXMSILeadingEdge LongEdge/Portrait: "
/Custom /ProcSet findresource /setenvelopeimagerotation 2 copy known {
  get true exch exec
}{pop pop} ifelse

1
currentpagedevice /ManualFeed 2 copy known {
  get {
    /Custom /ProcSet findresource /setenvelopeimagerotation known {
      1 dict begin /LeadingEdge exch def currentdict end setpagedevice
    }{
    currentpagedevice /PageSize get
      [
        [ 340 666 2 ]
        [ 649 918 0 ]
        [ 459 649 3 ]
        [ 279 540 1 ]
        [ 297 684 1 ]
        [ 312 624 1 ]
      ]
      {
        aload pop 3 1 roll 4 -1 roll dup 5 1 roll
        aload pop
        3 -1 roll eq 3 1 roll eq and {
          3 1 roll pop exit
        }{
          pop
        } ifelse
      } forall
      pop
      1 dict begin /LeadingEdge exch def currentdict end setpagedevice
    }ifelse
  }{pop}ifelse
}{pop pop pop}ifelse"
*End
*FXMSILeadingEdge ShortEdge/Landscape: "
/Custom /ProcSet findresource /setenvelopeimagerotation 2 copy known {
  get true exch exec
}{pop pop} ifelse

0
currentpagedevice /ManualFeed 2 copy known {
  get {
    /Custom /ProcSet findresource /setenvelopeimagerotation known {
      1 dict begin /LeadingEdge exch def currentdict end setpagedevice
    }{
    currentpagedevice /PageSize get
      [
        [ 340 666 2 ]
        [ 649 918 0 ]
        [ 459 649 3 ]
        [ 279 540 1 ]
        [ 297 684 1 ]
        [ 312 624 1 ]
      ]
      {
        aload pop 3 1 roll 4 -1 roll dup 5 1 roll
        aload pop
        3 -1 roll eq 3 1 roll eq and {
          3 1 roll pop exit
        }{
          pop
        } ifelse
      } forall
      pop
      1 dict begin /LeadingEdge exch def currentdict end setpagedevice
    }ifelse
  }{pop}ifelse
}{pop pop pop}ifelse"
*End
*?FXMSILeadingEdge: "
save
  (Unknown)
  [(ShortEdge) (LongEdge)]
  currentpagedevice dup /LeadingEdge known 
  {/LeadingEdge get dup null eq
    {pop pop} 
    {2 copy exch length ge {pop pop}{get exch pop} ifelse} ifelse
  }
  {pop pop} ifelse
  = flush
restore
"
*End
*CloseUI: *FXMSILeadingEdge

*OpenUI *FXSaveBlankSheet/Skip Blank Pages: Boolean
*OrderDependency: 214.0 AnySetup *FXSaveBlankSheet
*DefaultFXSaveBlankSheet: False
*FXSaveBlankSheet False/Off: "
/Custom /ProcSet resourcestatus
 { pop pop /Custom /ProcSet findresource dup /setsaveblanksheet known
   {/setsaveblanksheet get false exch exec}{pop} ifelse
 }if
"
*End
*FXSaveBlankSheet True/On: "
/Custom /ProcSet resourcestatus
 { pop pop /Custom /ProcSet findresource dup /setsaveblanksheet known
   {/setsaveblanksheet get true exch exec}{pop} ifelse
 }if
"
*End
*?FXSaveBlankSheet: "
save
/Custom /ProcSet resourcestatus
 { pop pop /Custom /ProcSet findresource dup /currentsaveblanksheet known
   {/currentsaveblanksheet get exec {(True)}{(False)} ifelse  }{pop (Unknown)} ifelse
 }if
= flush
restore
"
*End
*CloseUI: *FXSaveBlankSheet

*OpenUI *FXSubPaperSelection/Substitute Tray: PickOne
*OrderDependency: 35.0 AnySetup *FXSubPaperSelection
*DefaultFXSubPaperSelection: Policy0
*FXSubPaperSelection Policy0/Printer Default: ""
*FXSubPaperSelection Policy2/Display Message: "
	/Custom /ProcSet findresource dup /currentsignature known {
		/currentsignature get exec 0 eq
	}{ pop true } ifelse
	{
		2 dict dup /Policies 1 dict dup /PageSize 1 put put
		dup /DeferredMediaSelection true put setpagedevice
	} if
"
*End
*FXSubPaperSelection Policy3/Use Closest Size (Reduce to Fit): "
	/Custom /ProcSet findresource dup /currentsignature known {
		/currentsignature get exec 0 eq
	}{ pop true } ifelse
	{
		2 dict dup /Policies 1 dict dup /PageSize 3 put put
		dup /DeferredMediaSelection false put setpagedevice
	} if
"
*End
*FXSubPaperSelection Policy5/Use Closest Size (100%): "
	/Custom /ProcSet findresource dup /currentsignature known {
		/currentsignature get exec 0 eq
	}{ pop true } ifelse
	{
		2 dict dup /Policies 1 dict dup /PageSize 5 put put
		dup /DeferredMediaSelection false put setpagedevice
	} if
"
*End
*FXSubPaperSelection Policy4/Use Larger Size (Reduce to Fit): "
	/Custom /ProcSet findresource dup /currentsignature known {
		/currentsignature get exec 0 eq
	}{ pop true } ifelse
	{
		2 dict dup /Policies 1 dict dup /PageSize 4 put put
		dup /DeferredMediaSelection false put setpagedevice
	} if
"
*End
*FXSubPaperSelection Policy6/Use Larger Size (100%): "
	/Custom /ProcSet findresource dup /currentsignature known {
		/currentsignature get exec 0 eq
	}{ pop true } ifelse
	{
		2 dict dup /Policies 1 dict dup /PageSize 6 put put
		dup /DeferredMediaSelection false put setpagedevice
	} if
"
*End
*FXSubPaperSelection SMH/Select Tray 5 (Bypass): "
	/Custom /ProcSet findresource dup /currentsignature known {
		/currentsignature get exec 0 eq
	}{ pop true } ifelse
	{
		2 dict dup /Policies 1 dict dup /PageSize 2 put put
		dup /DeferredMediaSelection true put setpagedevice
	} if
"
*End
*?FXSubPaperSelection: "
  save
  [(Policy0)(Policy2)(SMH)(Policy3)(Policy4)(Policy5)(Policy6)(Unknown)]
  currentpagedevice /Policies get /PageSize get get = flush
  restore
"
*End
*CloseUI: *FXSubPaperSelection

*OpenUI *FXColorMode/Output Color: PickOne
*OrderDependency: 20.0 AnySetup *FXColorMode
*DefaultFXColorMode: Color
*FXColorMode Color/Color: "
    userdict /$$OEMPreConfigDict known {
        userdict /$$OEMPreConfigDict get /ColorMode 2 copy known {
            get exec false
        }{
            pop pop true
        } ifelse
    }{
        true
    } ifelse
    {
        1 dict dup /ProcessColorModel /DeviceCMYK put setpagedevice
    } if
"
*End
*FXColorMode Black/Black and White: "
    userdict /$$OEMPreConfigDict known {
        userdict /$$OEMPreConfigDict get /ColorMode 2 copy known {
            get exec false
        }{
            pop pop true
        } ifelse
    }{
        true
    } ifelse
    {
        1 dict dup /ProcessColorModel /DeviceGray put setpagedevice
    } if
"
*End
*?FXColorMode: "save currentpagedevice/ProcessColorModel get cvn/DeviceGray eq{(Black)}{(Color)}ifelse = flush restore"
*CloseUI: *FXColorMode

*OpenUI *FXGrayBalance/Gray Guaranteed: Boolean
*OrderDependency: 24.0 AnySetup *FXGrayBalance
*DefaultFXGrayBalance: True
*FXGrayBalance True/On: "1 dict dup 2 dict dup/Type 26 put dup/RGBToK 1 put/DeviceRenderingInfo exch put setpagedevice"
*FXGrayBalance False/Off: "1 dict dup 2 dict dup/Type 26 put dup/RGBToK 0 put/DeviceRenderingInfo exch put setpagedevice"
*?FXGrayBalance: "
save
  currentpagedevice /DeviceRenderingInfo 2 copy known {
    get dup /Type get 26 eq {
      /RGBToK get
      [(False) (True) (Unknown) (Unknown)] exch get
    }
    {pop (Unknown)} ifelse
  }
  {pop pop (Unknown)} ifelse
  = flush
restore
"
*End
*CloseUI: *FXGrayBalance

*OpenUI *FXInvalidateColorProfile/Invalidate Color Profile: Boolean
*OrderDependency: 270.0 AnySetup *FXInvalidateColorProfile
*DefaultFXInvalidateColorProfile: False
*FXInvalidateColorProfile False/Off: "/Custom/ProcSet findresource/seticp 2 copy known{get false exch exec}{pop pop}ifelse"
*FXInvalidateColorProfile True/On: "/Custom/ProcSet findresource/seticp 2 copy known{get true exch exec}{pop pop}ifelse"
*?FXInvalidateColorProfile: "
    save mark {
        /Custom /ProcSet findresource /currenticp get exec
        {(True)}{(False)} ifelse = flush
    } stopped { (Unknown) = flush } if
    cleartomark restore
"
*End
*CloseUI: *FXInvalidateColorProfile

*OpenUI *Smoothing/Image Enhancement: Boolean
*OrderDependency: 200.0 AnySetup *Smoothing
*DefaultSmoothing: True
*Smoothing True/On: "
  2 dict dup /PostRenderingEnhance true put
  dup /PostRenderingEnhanceDetails 2 dict
  dup /Type 32 put
  dup /REValue 1 put
  put setpagedevice
"
*End
*Smoothing False/Off: "
  2 dict dup /PostRenderingEnhance true put
  dup /PostRenderingEnhanceDetails 2 dict
  dup /Type 32 put
  dup /REValue 0 put
  put setpagedevice
"
*End
*?Smoothing: "
  save
    currentpagedevice /PostRenderingEnhance 2 copy known {
      get {
        currentpagedevice /PostRenderingEnhanceDetails 2 copy known 
          { get dup /Type get 32 eq {
             /REValue get 1 eq
             {(True)}{(False)}ifelse
             }
             {pop (Unknown)} ifelse
          }
          { pop pop (Unknown)} ifelse
      }{(False)} ifelse
    }{(Unknown)}ifelse
    = flush
  restore
"
*End
*CloseUI: *Smoothing

*OpenUI *FXTonerSaver/Draft Mode: Boolean
*OrderDependency: 25.0 AnySetup *FXTonerSaver
*DefaultFXTonerSaver: False
*FXTonerSaver False/Off: "1 dict dup/PostRenderingEnhanceDetails 2 dict dup/Type 32 put dup/TonerSaver 0 put put setpagedevice"
*FXTonerSaver True/On: "1 dict dup/PostRenderingEnhanceDetails 2 dict dup/Type 32 put dup/TonerSaver 1 put put setpagedevice"
*?FXTonerSaver: "
save
  currentpagedevice /PostRenderingEnhanceDetails 2 copy known {
    get dup /Type get 32 eq {
      /TonerSaver get 1 eq
      {(True)}{(False)}ifelse
    }
    {pop (Unknown)} ifelse
  }
  {pop pop (Unknown)} ifelse
  = flush
restore
"
*End
*CloseUI: *FXTonerSaver

*OpenGroup: FXGraphicsGroup/1. Image Options
*OpenUI *FXOutputMode/Image Quality: PickOne
*OrderDependency: 15.0 AnySetup *FXOutputMode
*DefaultFXOutputMode: HighSpeed
*FXOutputMode HighSpeed/High Speed: "
    2 dict dup /HWResolution [600 600] put
    dup 2 dict dup /Type 26 put dup /ValuesPerColorComponent 2 put
    /DeviceRenderingInfo exch put
    setpagedevice
"
*End
*FXOutputMode HighQuality/High Quality: "
    2 dict dup /HWResolution [600 600] put
    dup 2 dict dup /Type 26 put dup /ValuesPerColorComponent 256 put
    /DeviceRenderingInfo exch put
    setpagedevice
"
*End
*FXOutputMode HighResolution/High Resolution: "
    2 dict dup /HWResolution [1200 1200] put
    dup 2 dict dup /Type 26 put dup /ValuesPerColorComponent 2 put
    /DeviceRenderingInfo exch put
    setpagedevice
"
*End
*?FXOutputMode: "
save
  currentpagedevice dup /HWResolution get 0 get cvi 1200 eq {
    pop (HighResolution)
  }{
    /DeviceRenderingInfo 2 copy known { 
      get dup /Type get 26 eq {
        /ValuesPerColorComponent get 256 eq {(HighQuality)}{(HighSpeed)}ifelse
      }{pop (Unknown)} ifelse
    }{ pop pop (Unknown)} ifelse
  } ifelse
  = flush
restore
"
*End
*CloseUI: *FXOutputMode

*OpenUI *FXBrightness/Brightness: PickOne
*OrderDependency: 26.0 AnySetup *FXBrightness
*DefaultFXBrightness: Normal
*FXBrightness Bright5/Brighten (+5): "1 dict dup 2 dict dup/Type 26 put dup/Brightness 5 put/DeviceRenderingInfo exch put setpagedevice"
*FXBrightness Bright4/Brighten (+4): "1 dict dup 2 dict dup/Type 26 put dup/Brightness 4 put/DeviceRenderingInfo exch put setpagedevice"
*FXBrightness Bright3/Brighten (+3): "1 dict dup 2 dict dup/Type 26 put dup/Brightness 3 put/DeviceRenderingInfo exch put setpagedevice"
*FXBrightness Bright2/Brighten (+2): "1 dict dup 2 dict dup/Type 26 put dup/Brightness 2 put/DeviceRenderingInfo exch put setpagedevice"
*FXBrightness Bright1/Brighten (+1): "1 dict dup 2 dict dup/Type 26 put dup/Brightness 1 put/DeviceRenderingInfo exch put setpagedevice"
*FXBrightness Normal/Normal: "1 dict dup 2 dict dup/Type 26 put dup/Brightness 0 put/DeviceRenderingInfo exch put setpagedevice"
*FXBrightness Dark1/Subdue (+1): "1 dict dup 2 dict dup/Type 26 put dup/Brightness -1 put/DeviceRenderingInfo exch put setpagedevice"
*FXBrightness Dark2/Subdue (+2): "1 dict dup 2 dict dup/Type 26 put dup/Brightness -2 put/DeviceRenderingInfo exch put setpagedevice"
*FXBrightness Dark3/Subdue (+3): "1 dict dup 2 dict dup/Type 26 put dup/Brightness -3 put/DeviceRenderingInfo exch put setpagedevice"
*FXBrightness Dark4/Subdue (+4): "1 dict dup 2 dict dup/Type 26 put dup/Brightness -4 put/DeviceRenderingInfo exch put setpagedevice"
*FXBrightness Dark5/Subdue (+5): "1 dict dup 2 dict dup/Type 26 put dup/Brightness -5 put/DeviceRenderingInfo exch put setpagedevice"
*?FXBrightness: "
save
  currentpagedevice /DeviceRenderingInfo 2 copy known {
    get dup /Type get 26 eq {
      /Brightness get
      11 dict
      dup 5 (Bright5) put
      dup 4 (Bright4) put
      dup 3 (Bright3) put
      dup 2 (Bright2) put
      dup 1 (Bright1) put
      dup 0 (Normal) put
      dup -1 (Dark1) put
      dup -2 (Dark2) put
      dup -3 (Dark3) put
      dup -4 (Dark4) put
      dup -5 (Dark5) put
      exch get
    }
    {pop (Unknown)} ifelse
  }
  {pop pop (Unknown)} ifelse
  = flush
restore
"
*End
*CloseUI: *FXBrightness

*OpenUI *FXRGBImageType/Image Type: PickOne
*OrderDependency: 21.0 AnySetup *FXRGBImageType
*DefaultFXRGBImageType: Standard
*FXRGBImageType Standard/Standard: "
  1 dict dup 
  2 dict dup /Type 26 put dup /RGBCorrection 3 put /DeviceRenderingInfo exch put
  setpagedevice
  currentpagedevice /DeviceRenderingInfo get /Brightness known {
    1 dict dup
    1 dict dup    
    /Custom /ProcSet findresource dup 
    /currentregioncode known {
      begin
      currentregioncode
      dup -1 eq { pop 0  } if
      setcmykcorrection
      end
      pop
    }{
      pop
      /CMYKCorrection 7 put
    }ifelse
    /DeviceRenderingInfo exch put
    setpagedevice
  }if
"
*End
*FXRGBImageType Photo/Photos: "
  1 dict dup 
  2 dict dup /Type 26 put dup /RGBCorrection 1 put /DeviceRenderingInfo exch put
  setpagedevice
  currentpagedevice /DeviceRenderingInfo get /Brightness known {
    1 dict dup
    1 dict dup    
    /Custom /ProcSet findresource dup 
    /currentregioncode known {
      begin
      currentregioncode
      dup -1 eq { pop 0  } if
      setcmykcorrection
      end
      pop
    }{
      pop
      /CMYKCorrection 7 put
    }ifelse
    /DeviceRenderingInfo exch put
    setpagedevice
  }if
"
*End
*FXRGBImageType Presentation/Presentation: "
  1 dict dup 
  2 dict dup /Type 26 put dup /RGBCorrection 4 put /DeviceRenderingInfo exch put
  setpagedevice
  currentpagedevice /DeviceRenderingInfo get /Brightness known {
    1 dict dup
    1 dict dup    
    /Custom /ProcSet findresource dup 
    /currentregioncode known {
      begin
      currentregioncode
      dup -1 eq { pop 0  } if
      setcmykcorrection
      end
      pop
    }{
      pop
      /CMYKCorrection 7 put
    }ifelse
    /DeviceRenderingInfo exch put
    setpagedevice
  }if
"
*End
*FXRGBImageType Web/Web Pages: "
  1 dict dup 
  2 dict dup /Type 26 put dup /RGBCorrection 2 put /DeviceRenderingInfo exch put
  setpagedevice
  currentpagedevice /DeviceRenderingInfo get /Brightness known {
    1 dict dup
    1 dict dup    
    /Custom /ProcSet findresource dup 
    /currentregioncode known {
      begin
      currentregioncode
      dup -1 eq { pop 0  } if
      setcmykcorrection
      end
      pop
    }{
      pop
      /CMYKCorrection 7 put
    }ifelse
    /DeviceRenderingInfo exch put
    setpagedevice
  }if
"
*End
*FXRGBImageType CAD/CAD: "
  1 dict dup 
  2 dict dup /Type 26 put dup /RGBCorrection 5 put /DeviceRenderingInfo exch put
  setpagedevice
  currentpagedevice /DeviceRenderingInfo get /Brightness known {
    1 dict dup
    1 dict dup    
    /Custom /ProcSet findresource dup 
    /currentregioncode known {
      begin
      currentregioncode
      dup -1 eq { pop 0  } if
      setcmykcorrection
      end
      pop
    }{
      pop
      /CMYKCorrection 7 put
    }ifelse
    /DeviceRenderingInfo exch put
    setpagedevice
  }if
"
*End
*FXRGBImageType POP/POP: "
  1 dict dup 
  2 dict dup /Type 26 put dup /RGBCorrection 6 put /DeviceRenderingInfo exch put
  setpagedevice
  currentpagedevice /DeviceRenderingInfo get /Brightness known {
    1 dict dup
    1 dict dup    
    /Custom /ProcSet findresource dup 
    /currentregioncode known {
      begin
      currentregioncode
      dup -1 eq { pop 0  } if
      setcmykcorrection
      end
      pop
    }{
      pop
      /CMYKCorrection 7 put
    }ifelse
    /DeviceRenderingInfo exch put
    setpagedevice
  }if
"
*End
*FXRGBImageType Off/Off: "
  1 dict dup 
  3 dict dup /Type 26 put dup /RGBCorrection 0 put dup /CMYKCorrection 0 put
  /DeviceRenderingInfo exch put
  setpagedevice
"
*End
*?FXRGBImageType: "
save
  currentpagedevice /DeviceRenderingInfo 2 copy known {
    get dup /Type get 26 eq {
      /RGBCorrection get
      10 dict
      dup 3 (Standard) put
      dup 1 (Photo) put
      dup 4 (Presentation) put
      dup 2 (Web) put
      dup 5 (CAD) put
      dup 6 (POP) put
      dup 0 (Off) put
      exch get
    }
    {pop (Unknown)} ifelse
  }
  {pop pop (Unknown)} ifelse
  = flush
restore
"
*End
*CloseUI: *FXRGBImageType

*OpenUI *FXEngineScreen/Screen: PickOne
*OrderDependency: 23.0 AnySetup *FXEngineScreen
*DefaultFXEngineScreen: Auto
*FXEngineScreen Auto/Auto Screening: "
  1 dict dup 
  /PostRenderingEnhanceDetails 2 dict 
  dup /Type 32 put dup /EngineScreen 2 put put 
  dup /PostRenderingEnhance true put setpagedevice
"
*End
*FXEngineScreen Fineness/Fineness: "
  1 dict dup 
  /PostRenderingEnhanceDetails 2 dict 
  dup /Type 32 put dup /EngineScreen 0 put put 
  dup /PostRenderingEnhance true put setpagedevice
"
*End
*FXEngineScreen Standard/Standard: "
  1 dict dup 
  /PostRenderingEnhanceDetails 2 dict 
  dup /Type 32 put dup /EngineScreen 3 put put 
  dup /PostRenderingEnhance true put setpagedevice
"
*End
*FXEngineScreen Gradation/Gradation: "
  1 dict dup 
  /PostRenderingEnhanceDetails 2 dict 
  dup /Type 32 put dup /EngineScreen 1 put put 
  dup /PostRenderingEnhance true put setpagedevice
"
*End
*?FXEngineScreen: "
save
  currentpagedevice /PostRenderingEnhanceDetails 2 copy known {
    get dup /Type get 32 eq {
      /EngineScreen get
      10 dict
      dup 2 (Auto) put
      dup 0 (Fineness) put
      dup 3 (Standard) put
      dup 1 (Gradation) put
      exch get
    }
    {pop (Unknown)} ifelse
  }
  {pop pop (Unknown)} ifelse
  = flush
restore
"
*End
*CloseUI: *FXEngineScreen

*OpenUI *FXColorBalanceAdjustment/Adjust Color Balance: Boolean
*OrderDependency: 41.0 AnySetup *FXColorBalanceAdjustment
*DefaultFXColorBalanceAdjustment: False
*FXColorBalanceAdjustment False/Off: "false/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorBalanceAdjustment True/On: "true/Custom/ProcSet findresource/setcolorbalance get exec"
*CloseUI: *FXColorBalanceAdjustment

*OpenUI *FXBlackOverprint/Black Overprint: Boolean
*OrderDependency: 260.0 AnySetup *FXBlackOverprint
*DefaultFXBlackOverprint: False
*FXBlackOverprint False/Off: "/Custom/ProcSet findresource/setblackoverprint 2 copy known{get false exch exec}{pop pop}ifelse"
*FXBlackOverprint True/On: "/Custom/ProcSet findresource/setblackoverprint 2 copy known{get true exch exec}{pop pop}ifelse"
*?FXBlackOverprint: "
    save mark {
        /Custom /ProcSet findresource /currentblackoverprint get exec
        {(True)}{(False)} ifelse = flush
    } stopped { (Unknown) = flush } if
    cleartomark restore
"
*End
*CloseUI: *FXBlackOverprint

*CloseGroup: FXGraphicsGroup
*OpenGroup: FXColorAdjustmentGroup1/2. Color Adjustment 1
*OpenUI *FXRGBCorrection/RGB Color Correction: PickOne
*OrderDependency: 27.0 AnySetup *FXRGBCorrection
*DefaultFXRGBCorrection: None
*FXRGBCorrection None/No Correction: ""
*FXRGBCorrection Perceptual/Perceptual: "1 dict dup 2 dict dup/Type 26 put dup/RGBCorrection 10 put/DeviceRenderingInfo exch put setpagedevice"
*FXRGBCorrection Saturation/Saturation: "1 dict dup 2 dict dup/Type 26 put dup/RGBCorrection 11 put/DeviceRenderingInfo exch put setpagedevice"
*FXRGBCorrection RelativeC/Relative Colorimetric: "1 dict dup 2 dict dup/Type 26 put dup/RGBCorrection 12 put/DeviceRenderingInfo exch put setpagedevice"
*FXRGBCorrection AbsoluteC/Absolute Colorimetric: "1 dict dup 2 dict dup/Type 26 put dup/RGBCorrection 13 put/DeviceRenderingInfo exch put setpagedevice"
*?FXRGBCorrection: "
  currentpagedevice /DeviceRenderingInfo 2 copy known {
    get dup /Type get 26 eq {
      /RGBCorrection get
      10 dict
      dup 10 (Perceptual) put
      dup 11 (Saturation) put
      dup 12 (RelativeC) put
      dup 13 (AbsoluteC) put
      exch 2 copy known {get} {pop pop (None)} ifelse
    }
    {pop (Unknown)} ifelse
  }
  {pop pop (Unknown)} ifelse
  = flush
restore
"
*End
*CloseUI: *FXRGBCorrection

*OpenUI *FXRGBInputProfile/Source RGB Profile: PickOne
*OrderDependency: 28.0 AnySetup *FXRGBInputProfile
*DefaultFXRGBInputProfile: SRGB
*FXRGBInputProfile SRGB/sRGB: "1 dict dup 2 dict dup/Type 26 put dup/RGBSpace 0 put/DeviceRenderingInfo exch put setpagedevice"
*FXRGBInputProfile AdobeRGB/Adobe RGB (1998): "1 dict dup 2 dict dup/Type 26 put dup/RGBSpace 1 put/DeviceRenderingInfo exch put setpagedevice"
*?FXRGBInputProfile: "
save
  currentpagedevice /DeviceRenderingInfo 2 copy known {
    get dup /Type get 26 eq {
      /RGBSpace get 
      [(SRGB) (AdobeRGB)] exch get
    }
    {pop (Unknown)} ifelse
  }
  {pop pop (Unknown)} ifelse
  = flush
restore
"
*End
*CloseUI: *FXRGBInputProfile

*OpenUI *FXRGBGammaCorrection/RGB Gamma Correction: PickOne
*OrderDependency: 22.0 AnySetup *FXRGBGammaCorrection
*DefaultFXRGBGammaCorrection: Standard
*FXRGBGammaCorrection Lightest/1.0: "1 dict dup 2 dict dup/Type 26 put dup/GammaCorrection 1 put/DeviceRenderingInfo exch put setpagedevice"
*FXRGBGammaCorrection Light/1.4: "1 dict dup 2 dict dup/Type 26 put dup/GammaCorrection 2 put/DeviceRenderingInfo exch put setpagedevice"
*FXRGBGammaCorrection Standard/1.8: "1 dict dup 2 dict dup/Type 26 put dup/GammaCorrection 3 put/DeviceRenderingInfo exch put setpagedevice"
*FXRGBGammaCorrection Dark/2.2: "1 dict dup 2 dict dup/Type 26 put dup/GammaCorrection 4 put/DeviceRenderingInfo exch put setpagedevice"
*FXRGBGammaCorrection Darkest/2.6: "1 dict dup 2 dict dup/Type 26 put dup/GammaCorrection 5 put/DeviceRenderingInfo exch put setpagedevice"
*?FXRGBGammaCorrection: "
save
  currentpagedevice /DeviceRenderingInfo 2 copy known {
    get dup /Type get 26 eq {
      /GammaCorrection get
      10 dict
      dup 1 (Lightest) put
      dup 2 (Light) put
      dup 3 (Standard) put
      dup 4 (Dark) put
      dup 5 (Darkest) put
      exch get
    }
    {pop (Unknown)} ifelse
  }
  {pop pop (Unknown)} ifelse
  = flush
restore
"
*End
*CloseUI: *FXRGBGammaCorrection

*OpenUI *FXColorTemperature/RGB Color Temperature: PickOne
*OrderDependency: 30.0 AnySetup *FXColorTemperature
*DefaultFXColorTemperature: TemperatureD65
*FXColorTemperature TemperatureD50/5000K (D50): "1 dict dup 2 dict dup/Type 26 put dup/WhitePoint 0 put/DeviceRenderingInfo exch put setpagedevice"
*FXColorTemperature TemperatureD65/6500K (D65): "1 dict dup 2 dict dup/Type 26 put dup/WhitePoint 1 put/DeviceRenderingInfo exch put setpagedevice"
*FXColorTemperature Temperature9300K/9300K: "1 dict dup 2 dict dup/Type 26 put dup/WhitePoint 2 put/DeviceRenderingInfo exch put setpagedevice"
*?FXColorTemperature: "
save
  currentpagedevice /DeviceRenderingInfo 2 copy known {
    get dup /Type get 26 eq {
      /WhitePoint get 
      [(TemperatureD50) (TemperatureD65) (Temperature9300K)] exch get
    }
    {pop (Unknown)} ifelse
  }
  {pop pop (Unknown)} ifelse
  = flush
restore
"
*End
*CloseUI: *FXColorTemperature

*CloseGroup: FXColorAdjustmentGroup1
*OpenGroup: FXColorAdjustmentGroup2/3. Color Adjustment 2
*OpenUI *FXCMYKCorrectionSTD/CMYK Color Correction: PickOne
*OrderDependency: 31.0 AnySetup *FXCMYKCorrectionSTD
*DefaultFXCMYKCorrectionSTD: Auto
*FXCMYKCorrectionSTD Auto/Auto Correction: "
  currentpagedevice /DeviceRenderingInfo get /Brightness known {
    1 dict dup
    2 dict dup
    /Type 26 put dup 
    
    /Custom /ProcSet findresource dup 
    /currentregioncode known {
      begin
      currentregioncode
      dup -1 eq { pop 0  } if
      setcmykcorrection
      end
      pop
    }{
      pop
      /CMYKCorrection 7 put
    }ifelse
    /DeviceRenderingInfo exch put
    setpagedevice
  }if
"
*End
*FXCMYKCorrectionSTD JapanColor2001/JapanColor2001: "
currentpagedevice /DeviceRenderingInfo get /Brightness known {
  1 dict dup 
  2 dict dup /Type 26 put dup /CMYKCorrection 2 put
  /DeviceRenderingInfo exch put
  setpagedevice
} if
"
*End
*FXCMYKCorrectionSTD SWOP/SWOP: "
currentpagedevice /DeviceRenderingInfo get /Brightness known {
  1 dict dup 
  2 dict dup /Type 26 put dup /CMYKCorrection 7 put
  /DeviceRenderingInfo exch put
  setpagedevice
} if
"
*End
*FXCMYKCorrectionSTD EuroScale/Euro Sheet-fed: "
currentpagedevice /DeviceRenderingInfo get /Brightness known {
  1 dict dup 
  2 dict dup /Type 26 put dup /CMYKCorrection 4 put
  /DeviceRenderingInfo exch put
  setpagedevice
} if
"
*End
*FXCMYKCorrectionSTD None/No Correction: "
currentpagedevice /DeviceRenderingInfo get /Brightness known {
  1 dict dup 
  2 dict dup /Type 26 put dup /CMYKCorrection 0 put
  /DeviceRenderingInfo exch put
  setpagedevice
} if
"
*End
*?FXCMYKCorrectionSTD: "
save
  currentpagedevice /DeviceRenderingInfo 2 copy known {
    get dup /Type get 26 eq {
      /CMYKCorrection get
      [(None) (JapanColor2001) (JapanColor2001) (JapanColor2001)
	(EuroScale) (EuroScale) (EuroScale) (SWOP)] exch get
    }
    {pop (Unknown)} ifelse
  }
  {pop pop (Unknown)} ifelse
  = flush
restore
"
*End
*CloseUI: *FXCMYKCorrectionSTD

*OpenUI *FXCMYKCorrectionTarget/Target Paper: PickOne
*OrderDependency: 32.0 AnySetup *FXCMYKCorrectionTarget
*DefaultFXCMYKCorrectionTarget: Auto
*FXCMYKCorrectionTarget Auto/Auto: "/Custom/ProcSet findresource/settargetpaper 2 copy known{get 0 exch exec}{pop pop}ifelse"
*FXCMYKCorrectionTarget Type1/Art: "/Custom/ProcSet findresource/settargetpaper 2 copy known{get 1 exch exec}{pop pop}ifelse"
*FXCMYKCorrectionTarget Type3/Coated: "/Custom/ProcSet findresource/settargetpaper 2 copy known{get 3 exch exec}{pop pop}ifelse"
*FXCMYKCorrectionTarget Type2/Matt: "/Custom/ProcSet findresource/settargetpaper 2 copy known{get 2 exch exec}{pop pop}ifelse"
*?FXCMYKCorrectionTarget: "
save
/Custom/ProcSet findresource/currenttargetpaper 2 copy known
  {get exec
   dup 0 eq{(Auto)=}if
   dup 1 eq{(Type1)=}if
   dup 3 eq{(Type3)=}if
   dup 2 eq{(Type2)=}if
   pop}
  {pop pop (Unknown) =}ifelse
  flush
restore
"
*End
*CloseUI: *FXCMYKCorrectionTarget

*CloseGroup: FXColorAdjustmentGroup2
*OpenGroup: FXColorBalanceGroupC/4. Color Balance C

*OpenUI *FXColorDensityCyanLow/Highlights (C): PickOne
*OrderDependency: 42.0 AnySetup *FXColorDensityCyanLow
*DefaultFXColorDensityCyanLow: 0
*FXColorDensityCyanLow +3/Darker (+3): "/Cyan/Low 3/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityCyanLow +2/Darker (+2): "/Cyan/Low 2/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityCyanLow +1/Darker (+1): "/Cyan/Low 1/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityCyanLow 0/Normal: "/Cyan/Low 0/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityCyanLow -1/Lighter (-1): "/Cyan/Low -1/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityCyanLow -2/Lighter (-2): "/Cyan/Low -2/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityCyanLow -3/Lighter (-3): "/Cyan/Low -3/Custom/ProcSet findresource/setcolorbalance get exec"
*CloseUI: *FXColorDensityCyanLow

*OpenUI *FXColorDensityCyanMid/Midtones (C): PickOne
*OrderDependency: 43.0 AnySetup *FXColorDensityCyanMid
*DefaultFXColorDensityCyanMid: 0
*FXColorDensityCyanMid +3/Darker (+3): "/Cyan/Middle 3/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityCyanMid +2/Darker (+2): "/Cyan/Middle 2/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityCyanMid +1/Darker (+1): "/Cyan/Middle 1/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityCyanMid 0/Normal: "/Cyan/Middle 0/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityCyanMid -1/Lighter (-1): "/Cyan/Middle -1/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityCyanMid -2/Lighter (-2): "/Cyan/Middle -2/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityCyanMid -3/Lighter (-3): "/Cyan/Middle -3/Custom/ProcSet findresource/setcolorbalance get exec"
*CloseUI: *FXColorDensityCyanMid

*OpenUI *FXColorDensityCyanHigh/Shadows (C): PickOne
*OrderDependency: 44.0 AnySetup *FXColorDensityCyanHigh
*DefaultFXColorDensityCyanHigh: 0
*FXColorDensityCyanHigh +3/Darker (+3): "/Cyan/High 3/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityCyanHigh +2/Darker (+2): "/Cyan/High 2/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityCyanHigh +1/Darker (+1): "/Cyan/High 1/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityCyanHigh 0/Normal: "/Cyan/High 0/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityCyanHigh -1/Lighter (-1): "/Cyan/High -1/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityCyanHigh -2/Lighter (-2): "/Cyan/High -2/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityCyanHigh -3/Lighter (-3): "/Cyan/High -3/Custom/ProcSet findresource/setcolorbalance get exec"
*CloseUI: *FXColorDensityCyanHigh

*CloseGroup: FXColorBalanceGroupC
*OpenGroup: FXColorBalanceGroupM/5. Color Balance M
*OpenUI *FXColorDensityMagentaLow/Highlights (M): PickOne
*OrderDependency: 45.0 AnySetup *FXColorDensityMagentaLow
*DefaultFXColorDensityMagentaLow: 0
*FXColorDensityMagentaLow +3/Darker (+3): "/Magenta/Low 3/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityMagentaLow +2/Darker (+2): "/Magenta/Low 2/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityMagentaLow +1/Darker (+1): "/Magenta/Low 1/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityMagentaLow 0/Normal: "/Magenta/Low 0/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityMagentaLow -1/Lighter (-1): "/Magenta/Low -1/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityMagentaLow -2/Lighter (-2): "/Magenta/Low -2/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityMagentaLow -3/Lighter (-3): "/Magenta/Low -3/Custom/ProcSet findresource/setcolorbalance get exec"
*CloseUI: *FXColorDensityMagentaLow

*OpenUI *FXColorDensityMagentaMid/Midtones (M): PickOne
*OrderDependency: 46.0 AnySetup *FXColorDensityMagentaMid
*DefaultFXColorDensityMagentaMid: 0
*FXColorDensityMagentaMid +3/Darker (+3): "/Magenta/Middle 3/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityMagentaMid +2/Darker (+2): "/Magenta/Middle 2/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityMagentaMid +1/Darker (+1): "/Magenta/Middle 1/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityMagentaMid 0/Normal: "/Magenta/Middle 0/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityMagentaMid -1/Lighter (-1): "/Magenta/Middle -1/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityMagentaMid -2/Lighter (-2): "/Magenta/Middle -2/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityMagentaMid -3/Lighter (-3): "/Magenta/Middle -3/Custom/ProcSet findresource/setcolorbalance get exec"
*CloseUI: *FXColorDensityMagentaMid

*OpenUI *FXColorDensityMagentaHigh/Shadows (M): PickOne
*OrderDependency: 47.0 AnySetup *FXColorDensityMagentaHigh
*DefaultFXColorDensityMagentaHigh: 0
*FXColorDensityMagentaHigh +3/Darker (+3): "/Magenta/High 3/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityMagentaHigh +2/Darker (+2): "/Magenta/High 2/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityMagentaHigh +1/Darker (+1): "/Magenta/High 1/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityMagentaHigh 0/Normal: "/Magenta/High 0/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityMagentaHigh -1/Lighter (-1): "/Magenta/High -1/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityMagentaHigh -2/Lighter (-2): "/Magenta/High -2/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityMagentaHigh -3/Lighter (-3): "/Magenta/High -3/Custom/ProcSet findresource/setcolorbalance get exec"
*CloseUI: *FXColorDensityMagentaHigh

*CloseGroup: FXColorBalanceGroupM
*OpenGroup: FXColorBalanceGroupY/6. Color Balance Y
*OpenUI *FXColorDensityYellowLow/Highlights (Y): PickOne
*OrderDependency: 48.0 AnySetup *FXColorDensityYellowLow
*DefaultFXColorDensityYellowLow: 0
*FXColorDensityYellowLow +3/Darker (+3): "/Yellow/Low 3/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityYellowLow +2/Darker (+2): "/Yellow/Low 2/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityYellowLow +1/Darker (+1): "/Yellow/Low 1/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityYellowLow 0/Normal: "/Yellow/Low 0/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityYellowLow -1/Lighter (-1): "/Yellow/Low -1/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityYellowLow -2/Lighter (-2): "/Yellow/Low -2/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityYellowLow -3/Lighter (-3): "/Yellow/Low -3/Custom/ProcSet findresource/setcolorbalance get exec"
*CloseUI: *FXColorDensityYellowLow

*OpenUI *FXColorDensityYellowMid/Midtones (Y): PickOne
*OrderDependency: 49.0 AnySetup *FXColorDensityYellowMid
*DefaultFXColorDensityYellowMid: 0
*FXColorDensityYellowMid +3/Darker (+3): "/Yellow/Middle 3/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityYellowMid +2/Darker (+2): "/Yellow/Middle 2/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityYellowMid +1/Darker (+1): "/Yellow/Middle 1/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityYellowMid 0/Normal: "/Yellow/Middle 0/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityYellowMid -1/Lighter (-1): "/Yellow/Middle -1/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityYellowMid -2/Lighter (-2): "/Yellow/Middle -2/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityYellowMid -3/Lighter (-3): "/Yellow/Middle -3/Custom/ProcSet findresource/setcolorbalance get exec"
*CloseUI: *FXColorDensityYellowMid

*OpenUI *FXColorDensityYellowHigh/Shadows (Y): PickOne
*OrderDependency: 50.0 AnySetup *FXColorDensityYellowHigh
*DefaultFXColorDensityYellowHigh: 0
*FXColorDensityYellowHigh +3/Darker (+3): "/Yellow/High 3/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityYellowHigh +2/Darker (+2): "/Yellow/High 2/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityYellowHigh +1/Darker (+1): "/Yellow/High 1/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityYellowHigh 0/Normal: "/Yellow/High 0/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityYellowHigh -1/Lighter (-1): "/Yellow/High -1/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityYellowHigh -2/Lighter (-2): "/Yellow/High -2/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityYellowHigh -3/Lighter (-3): "/Yellow/High -3/Custom/ProcSet findresource/setcolorbalance get exec"
*CloseUI: *FXColorDensityYellowHigh

*CloseGroup: FXColorBalanceGroupY
*OpenGroup: FXColorBalanceGroupK/7. Color Balance K
*OpenUI *FXColorDensityBlackLow/Highlights (K): PickOne
*OrderDependency: 51.0 AnySetup *FXColorDensityBlackLow
*DefaultFXColorDensityBlackLow: 0
*FXColorDensityBlackLow +3/Darker (+3): "/Black/Low 3/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityBlackLow +2/Darker (+2): "/Black/Low 2/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityBlackLow +1/Darker (+1): "/Black/Low 1/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityBlackLow 0/Normal: "/Black/Low 0/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityBlackLow -1/Lighter (-1): "/Black/Low -1/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityBlackLow -2/Lighter (-2): "/Black/Low -2/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityBlackLow -3/Lighter (-3): "/Black/Low -3/Custom/ProcSet findresource/setcolorbalance get exec"
*CloseUI: *FXColorDensityBlackLow

*OpenUI *FXColorDensityBlackMid/Midtones (K): PickOne
*OrderDependency: 52.0 AnySetup *FXColorDensityBlackMid
*DefaultFXColorDensityBlackMid: 0
*FXColorDensityBlackMid +3/Darker (+3): "/Black/Middle 3/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityBlackMid +2/Darker (+2): "/Black/Middle 2/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityBlackMid +1/Darker (+1): "/Black/Middle 1/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityBlackMid 0/Normal: "/Black/Middle 0/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityBlackMid -1/Lighter (-1): "/Black/Middle -1/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityBlackMid -2/Lighter (-2): "/Black/Middle -2/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityBlackMid -3/Lighter (-3): "/Black/Middle -3/Custom/ProcSet findresource/setcolorbalance get exec"
*CloseUI: *FXColorDensityBlackMid

*OpenUI *FXColorDensityBlackHigh/Shadows (K): PickOne
*OrderDependency: 53.0 AnySetup *FXColorDensityBlackHigh
*DefaultFXColorDensityBlackHigh: 0
*FXColorDensityBlackHigh +3/Darker (+3): "/Black/High 3/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityBlackHigh +2/Darker (+2): "/Black/High 2/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityBlackHigh +1/Darker (+1): "/Black/High 1/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityBlackHigh 0/Normal: "/Black/High 0/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityBlackHigh -1/Lighter (-1): "/Black/High -1/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityBlackHigh -2/Lighter (-2): "/Black/High -2/Custom/ProcSet findresource/setcolorbalance get exec"
*FXColorDensityBlackHigh -3/Lighter (-3): "/Black/High -3/Custom/ProcSet findresource/setcolorbalance get exec"
*CloseUI: *FXColorDensityBlackHigh

*CloseGroup: FXColorBalanceGroupK
*% Halftone Information ===============
*DefaultHalftoneType: 5
*ScreenFreq: "85.0"
*ScreenAngle: "45.0"
*DefaultScreenProc: Dot
*ScreenProc Dot: "{180 mul cos exch 180 mul cos add 2 div} bind"
*ScreenProc Line: "{ pop }"
*ScreenProc Ellipse: "{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub }"
*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"


*% =============== Font Information ===============

*FCacheSize 2048Meg: 1441792

*DefaultFont: Courier

*Font AlbertusMT-Italic: Standard "(001.001)" Standard ROM 
*Font AlbertusMT-Light: Standard "(001.001)" Standard ROM 
*Font AlbertusMT: Standard "(001.001)" Standard ROM 
*Font AntiqueOlive-Bold: Standard "(001.002)" Standard ROM 
*Font AntiqueOlive-Compact: Standard "(001.002)" Standard ROM 
*Font AntiqueOlive-Italic: Standard "(001.002)" Standard ROM 
*Font AntiqueOlive-Roman: Standard "(001.002)" Standard ROM 
*Font Apple-Chancery: Standard "(001.002)" ExtendedRoman ROM 
*Font Arial-BoldItalicMT: Standard "(001.003)" Standard ROM 
*Font Arial-BoldMT: Standard "(001.003)" Standard ROM 
*Font Arial-ItalicMT: Standard "(001.003)" Standard ROM 
*Font ArialMT: Standard "(001.003)" Standard ROM 
*Font AvantGarde-Book: Standard "(003.000)" Standard ROM 
*Font AvantGarde-BookOblique: Standard "(003.000)" Standard ROM 
*Font AvantGarde-Demi: Standard "(003.000)" Standard ROM 
*Font AvantGarde-DemiOblique: Standard "(003.000)" Standard ROM 
*Font Bodoni-Bold: Standard "(001.003)" Standard ROM 
*Font Bodoni-BoldItalic: Standard "(001.003)" Standard ROM 
*Font Bodoni-Italic: Standard "(001.003)" Standard ROM 
*Font Bodoni-Poster: Standard "(001.003)" Standard ROM 
*Font Bodoni-PosterCompressed: Standard "(001.002)" Standard ROM 
*Font Bodoni: Standard "(001.003)" Standard ROM 
*Font Bookman-Demi: Standard "(003.000)" Standard ROM 
*Font Bookman-DemiItalic: Standard "(003.000)" Standard ROM 
*Font Bookman-Light: Standard "(003.000)" Standard ROM 
*Font Bookman-LightItalic: Standard "(003.000)" Standard ROM 
*Font Carta: Special "(001.001)" Special ROM 
*Font Chicago: Standard "(001.000)" ExtendedRoman ROM 
*Font Clarendon-Bold: Standard "(001.002)" Standard ROM 
*Font Clarendon-Light: Standard "(001.002)" Standard ROM 
*Font Clarendon: Standard "(001.002)" Standard ROM 
*Font CooperBlack-Italic: Standard "(001.004)" Standard ROM 
*Font CooperBlack: Standard "(001.004)" Standard ROM 
*Font Copperplate-ThirtyThreeBC: Standard "(001.003)" Standard ROM 
*Font Copperplate-ThirtyTwoBC: Standard "(001.003)" Standard ROM 
*Font Coronet-Regular: Standard "(001.002)" Standard ROM 
*Font Courier-Bold: Standard "(004.000)" Standard ROM 
*Font Courier-BoldOblique: Standard "(004.000)" Standard ROM 
*Font Courier-Oblique: Standard "(004.000)" Standard ROM 
*Font Courier: Standard "(004.000)" Standard ROM 
*Font Eurostile-Bold: Standard "(001.002)" Standard ROM 
*Font Eurostile-BoldExtendedTwo: Standard "(001.003)" Standard ROM 
*Font Eurostile-ExtendedTwo: Standard "(001.003)" Standard ROM 
*Font Eurostile: Standard "(001.003)" Standard ROM 
*Font Geneva: Standard "(001.000)" ExtendedRoman ROM 
*Font GillSans-Bold: Standard "(001.002)" Standard ROM 
*Font GillSans-BoldCondensed: Standard "(001.002)" Standard ROM 
*Font GillSans-BoldItalic: Standard "(001.003)" Standard ROM 
*Font GillSans-Condensed: Standard "(001.002)" Standard ROM 
*Font GillSans-ExtraBold: Standard "(001.002)" Standard ROM 
*Font GillSans-Italic: Standard "(001.003)" Standard ROM 
*Font GillSans-Light: Standard "(001.002)" Standard ROM 
*Font GillSans-LightItalic: Standard "(001.003)" Standard ROM 
*Font GillSans: Standard "(001.003)" Standard ROM 
*Font Goudy-Bold: Standard "(001.003)" Standard ROM 
*Font Goudy-BoldItalic: Standard "(001.003)" Standard ROM 
*Font Goudy-ExtraBold: Standard "(001.002)" Standard ROM 
*Font Goudy-Italic: Standard "(001.003)" Standard ROM 
*Font Goudy: Standard "(001.004)" Standard ROM 
*Font Helvetica-Bold: Standard "(003.000)" Standard ROM 
*Font Helvetica-BoldOblique: Standard "(003.000)" Standard ROM 
*Font Helvetica-Condensed-Bold: Standard "(003.000)" Standard ROM 
*Font Helvetica-Condensed-BoldObl: Standard "(003.000)" Standard ROM 
*Font Helvetica-Condensed-Oblique: Standard "(003.000)" Standard ROM 
*Font Helvetica-Condensed: Standard "(003.000)" Standard ROM 
*Font Helvetica-Narrow-Bold: Standard "(003.000)" Standard ROM 
*Font Helvetica-Narrow-BoldOblique: Standard "(003.000)" Standard ROM 
*Font Helvetica-Narrow-Oblique: Standard "(003.000)" Standard ROM 
*Font Helvetica-Narrow: Standard "(003.000)" Standard ROM 
*Font Helvetica-Oblique: Standard "(003.000)" Standard ROM 
*Font Helvetica: Standard "(003.000)" Standard ROM 
*Font HoeflerText-Black: Standard "(001.000)" ExtendedRoman ROM 
*Font HoeflerText-BlackItalic: Standard "(001.000)" ExtendedRoman ROM 
*Font HoeflerText-Italic: Standard "(001.000)" ExtendedRoman ROM 
*Font HoeflerText-Ornaments: Special "(001.001)" Special ROM 
*Font HoeflerText-Regular: Standard "(001.000)" ExtendedRoman ROM 
*Font JoannaMT-Bold: Standard "(001.001)" Standard ROM 
*Font JoannaMT-BoldItalic: Standard "(001.001)" Standard ROM 
*Font JoannaMT-Italic: Standard "(001.001)" Standard ROM 
*Font JoannaMT: Standard "(001.001)" Standard ROM 
*Font LetterGothic-Bold: Standard "(001.007)" Standard ROM 
*Font LetterGothic-BoldSlanted: Standard "(001.006)" Standard ROM 
*Font LetterGothic-Slanted: Standard "(001.005)" Standard ROM 
*Font LetterGothic: Standard "(001.005)" Standard ROM 
*Font LubalinGraph-Book: Standard "(001.004)" Standard ROM 
*Font LubalinGraph-BookOblique: Standard "(001.004)" Standard ROM 
*Font LubalinGraph-Demi: Standard "(001.004)" Standard ROM 
*Font LubalinGraph-DemiOblique: Standard "(001.004)" Standard ROM 
*Font Marigold: Standard "(001.001)" Standard ROM 
*Font MonaLisa-Recut: Standard "(001.001)" Standard ROM 
*Font Monaco: Standard "(001.001)" ExtendedRoman ROM 
*Font NewCenturySchlbk-Bold: Standard "(003.000)" Standard ROM 
*Font NewCenturySchlbk-BoldItalic: Standard "(003.000)" Standard ROM 
*Font NewCenturySchlbk-Italic: Standard "(003.000)" Standard ROM 
*Font NewCenturySchlbk-Roman: Standard "(003.000)" Standard ROM 
*Font NewYork: Standard "(001.000)" ExtendedRoman ROM 
*Font OCRBLetM: Standard "(1.05)" Standard ROM 
*Font Optima-Bold: Standard "(001.007)" Standard ROM 
*Font Optima-BoldItalic: Standard "(001.001)" Standard ROM 
*Font Optima-Italic: Standard "(001.001)" Standard ROM 
*Font Optima: Standard "(001.006)" Standard ROM 
*Font Oxford: Standard "(001.001)" Standard ROM 
*Font Palatino-Bold: Standard "(003.000)" Standard ROM 
*Font Palatino-BoldItalic: Standard "(003.000)" Standard ROM 
*Font Palatino-Italic: Standard "(003.000)" Standard ROM 
*Font Palatino-Roman: Standard "(003.000)" Standard ROM 
*Font StempelGaramond-Bold: Standard "(001.003)" Standard ROM 
*Font StempelGaramond-BoldItalic: Standard "(001.003)" Standard ROM 
*Font StempelGaramond-Italic: Standard "(001.003)" Standard ROM 
*Font StempelGaramond-Roman: Standard "(001.003)" Standard ROM 
*Font Symbol: Special "(001.008)" Special ROM 
*Font Tekton: Standard "(001.002)" Standard ROM 
*Font Times-Bold: Standard "(003.000)" Standard ROM 
*Font Times-BoldItalic: Standard "(003.000)" Standard ROM 
*Font Times-Italic: Standard "(003.000)" Standard ROM 
*Font Times-Roman: Standard "(003.000)" Standard ROM 
*Font TimesNewRomanPS-BoldItalicMT: Standard "(001.003)" Standard ROM 
*Font TimesNewRomanPS-BoldMT: Standard "(001.004)" Standard ROM 
*Font TimesNewRomanPS-ItalicMT: Standard "(001.003)" Standard ROM 
*Font TimesNewRomanPSMT: Standard "(001.003)" Standard ROM 
*Font Univers-Bold: Standard "(001.004)" Standard ROM 
*Font Univers-BoldExt: Standard "(001.001)" Standard ROM 
*Font Univers-BoldExtObl: Standard "(001.001)" Standard ROM 
*Font Univers-BoldOblique: Standard "(001.004)" Standard ROM 
*Font Univers-Condensed: Standard "(001.003)" Standard ROM 
*Font Univers-CondensedBold: Standard "(001.002)" Standard ROM 
*Font Univers-CondensedBoldOblique: Standard "(001.002)" Standard ROM 
*Font Univers-CondensedOblique: Standard "(001.003)" Standard ROM 
*Font Univers-Extended: Standard "(001.001)" Standard ROM 
*Font Univers-ExtendedObl: Standard "(001.001)" Standard ROM 
*Font Univers-Light: Standard "(001.004)" Standard ROM 
*Font Univers-LightOblique: Standard "(001.004)" Standard ROM 
*Font Univers-Oblique: Standard "(001.004)" Standard ROM 
*Font Univers: Standard "(001.004)" Standard ROM 
*Font Wingdings-Regular: Special "(001.001)" Special ROM 
*Font ZapfChancery-MediumItalic: Standard "(003.000)" Standard ROM 
*Font ZapfDingbats: Special "(002.000)" Special ROM 

*?FontQuery: "
 save
   { count 1 gt
      { exch dup 127 string cvs (/) print print (:) print
        /Font resourcestatus {pop pop (Yes)} {(No)} ifelse =
      } { exit } ifelse 
   } bind loop
   (*) = flush
 restore
"
*End

*?FontList: "
save
  (*) {cvn ==} 128 string /Font resourceforall
  (*) = flush
restore
"
*End

*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% Status (format: %%[ status: <one of these> ] %%)
*Status: "initializing"
*Status: "idle"
*Status: "holding"
*Status: "busy"
*Status: "waiting"
*Status: "PrinterError: Service Call"
*Status: "PrinterError: Drum&Toner Cartridge is Missing"
*Status: "PrinterError: No Toner"
*Status: "PrinterError: Left Hand Cover Open"
*Status: "PrinterError: Cabinet Left Hand Cover Open"
*Status: "PrinterError: Duplex Docking Cover Open"
*Status: "PrinterError: Side Tray Docking Unit Open"
*Status: "PrinterError: Side Tray Hand Cover Open"
*Status: "PrinterError: Tray Lifter Failed"
*Status: "PrinterError: Paper Jam"
*Status: "PrinterError: Paper Jam at Fuser"
*Status: "PrinterError: Paper Jam at Registration Roller"
*Status: "PrinterError: Paper Jam at Duplex Module"
*Status: "PrinterError: Paper Jam at Duplex Tray"
*Status: "PrinterError: Paper Jam at Tray1"
*Status: "PrinterError: Paper Jam at Tray2"
*Status: "PrinterError: Paper Jam at Tray3"
*Status: "PrinterError: Paper Jam at Tray4"
*Status: "PrinterError: Paper Jam at Manual Feed Tray"
*Status: "PrinterError: Paper Jam at Side Tray"
*Status: "PrinterError: Center bin is Full"
*Status: "PrinterError: Duplex Module Fail"
*Status: "PrinterError: Tray is Missing"
*Status: "PrinterError: Any Trays are Missing"
*Status: "PrinterError: Out of Paper in All Trays"
*Status: "PrinterError: Out of Paper"
*Status: "PrinterError: Out of Paper in Maunal Feed Tray"

*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "Serial"
*Source: "Parallel"
*Source: "LocalTalk"
*Source: "EtherTalk"
*Source: "RemotePrinter"
*Source: "PrintServer"
*Source: "LPR"
*Source: "Internal"

*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)
*PrinterError: "Service Call"
*PrinterError: "Drum&Toner Cartridge is Missing"
*PrinterError: "No Toner"
*PrinterError: "Left Hand Cover Open"
*PrinterError: "Cabinet Left Hand Cover Open"
*PrinterError: "Duplex Docking Cover Open"
*PrinterError: "Side Tray Docking Unit Open"
*PrinterError: "Side Tray Hand Cover Open"
*PrinterError: "Tray Lifter Failed"
*PrinterError: "Paper Jam"
*PrinterError: "Paper Jam at Fuser"
*PrinterError: "Paper Jam at Registration Roller"
*PrinterError: "Paper Jam at Duplex Module"
*PrinterError: "Paper Jam at Duplex Tray"
*PrinterError: "Paper Jam at Tray1"
*PrinterError: "Paper Jam at Tray2"
*PrinterError: "Paper Jam at Tray3"
*PrinterError: "Paper Jam at Tray4"
*PrinterError: "Paper Jam at Manual Feed Tray"
*PrinterError: "Paper Jam at Side Tray"
*PrinterError: "Center bin is Full"
*PrinterError: "Duplex Module Fail"
*PrinterError: "Tray is Missing"
*PrinterError: "Any Trays are Missing"
*PrinterError: "Out of Paper in All Trays"
*PrinterError: "Out of Paper"
*PrinterError: "Out of Paper in Maunal Feed Tray"


*% Color Separation Information =====================
*DefaultGuaranteedMaxSeparations: 1
*GuaranteedMaxSeparations 4: ""
*GuaranteedMaxSeparations 3: ""
*GuaranteedMaxSeparations 2: ""
*GuaranteedMaxSeparations 1: ""
*?GuaranteedMaxSeparations: "
    currentpagedevice /MaxSeparations get ="
*End


*% Produced using PPDTool 2.3's BLDPPD43.PS file
*% Last Edit Date: April 28 2010
*% The byte count of this file should be exactly 783898 or 768549
*% depending on the filesystem it resides in.
*% Japanese localization
*ja.Translation ModelName/FX ApeosPort-IV C5570 v3017.104 PS: ""
*ja.Translation InstallableOptions/Options Installed: ""
*ja.Translation FXOutputOptions/排出オプション: ""
*ja.FXOutputOptions None/なし: ""
*ja.FXOutputOptions InnerOutputTray/インナー排出トレイ: ""
*ja.FXOutputOptions FinisherTypeSB/フィニッシャーB: ""
*ja.FXOutputOptions FinisherTypeSB2and4Holes/フィニッシャーB(2穴/4穴パンチ): ""
*ja.FXOutputOptions FinisherTypeSB2and3Holes/フィニッシャーB(2穴/3穴パンチ(US規格)): ""
*ja.FXOutputOptions FinisherTypeC2and4Holes/フィニッシャーC(2穴/4穴パンチ): ""
*ja.FXOutputOptions FinisherTypeC3Holes/フィニッシャーC(3穴パンチ): ""
*ja.Translation FXBookletTray/製本トレイ: ""
*ja.FXBookletTray False/なし: ""
*ja.FXBookletTray True/あり: ""
*ja.Translation FXSideOutputTray/サイドトレイ: ""
*ja.FXSideOutputTray False/なし: ""
*ja.FXSideOutputTray True/あり: ""
*ja.Translation FXPaperTrayConfiguration/給紙トレイ構成: ""
*ja.FXPaperTrayConfiguration 4Tray/4トレイ: ""
*ja.FXPaperTrayConfiguration 4TrayTTM/4トレイ(大容量): ""
*ja.Translation FXHighCapacityFeeder/大容量給紙トレイ: ""
*ja.FXHighCapacityFeeder False/なし: ""
*ja.FXHighCapacityFeeder True/あり: ""
*ja.Translation FXRegionalPaperSetting/サイズ表示の切り替え: ""
*ja.FXRegionalPaperSetting Mm/AB系: ""
*ja.FXRegionalPaperSetting Kai/AB系(八開/十六開): ""
*ja.FXRegionalPaperSetting Legal13/AB系(8x13"): ""
*ja.FXRegionalPaperSetting Legal/AB系(8x13"/8x14"): ""
*ja.FXRegionalPaperSetting Inch/インチ系: ""
*ja.Translation FXSwitchPaperSize/八開/十六開のサイズ切り替え: ""
*ja.FXSwitchPaperSize Taiwan/八開 (267x388mm): ""
*ja.FXSwitchPaperSize GCO/八開 (270x390mm): ""
*ja.Translation FXMinDigitPasscode/暗証番号の最小桁数: ""
*ja.FXMinDigitPasscode 0/0: ""
*ja.FXMinDigitPasscode 1/1: ""
*ja.FXMinDigitPasscode 2/2: ""
*ja.FXMinDigitPasscode 3/3: ""
*ja.FXMinDigitPasscode 4/4: ""
*ja.FXMinDigitPasscode 5/5: ""
*ja.FXMinDigitPasscode 6/6: ""
*ja.FXMinDigitPasscode 7/7: ""
*ja.FXMinDigitPasscode 8/8: ""
*ja.FXMinDigitPasscode 9/9: ""
*ja.FXMinDigitPasscode 10/10: ""
*ja.FXMinDigitPasscode 11/11: ""
*ja.FXMinDigitPasscode 12/12: ""
*ja.Translation FXSelectID/認証/集計時の入力項目: ""
*ja.FXSelectID UserID_AccountID/User IDとAccount ID: ""
*ja.FXSelectID UserID/User IDのみ: ""
*ja.FXSelectID AccountID/Account IDのみ: ""
*ja.FXSelectID None/入力不要: ""
*ja.Translation InstalledMemory/メモリー: ""
*ja.InstalledMemory 2048Meg/2048MB: ""
*ja.Translation General/General: ""
*ja.Translation PageSize/用紙サイズ: ""
*ja.PageSize A3/A3: ""
*ja.PageSize B4/B4: ""
*ja.PageSize A4/A4: ""
*ja.PageSize B5/B5: ""
*ja.PageSize A5/A5: ""
*ja.PageSize B6/B6: ""
*ja.PageSize A6/A6: ""
*ja.PageSize FXPostcard/はがき: ""
*ja.PageSize DoublePostcardRotated/往復はがき 横: ""
*ja.PageSize FX4x6/4x6": ""
*ja.PageSize EnvChou3/封筒長形3号: ""
*ja.PageSize EnvC4/封筒C4: ""
*ja.PageSize EnvC5/封筒C5: ""
*ja.PageSize SRA3/SRA3: ""
*ja.PageSize FX5x7/写真2Lサイズ (5x7"): ""
*ja.PageSize Statement/5.5x8.5": ""
*ja.PageSize Executive/7.25x10.5": ""
*ja.PageSize 8x10/8x10": ""
*ja.PageSize FX846x124/215x315mm: ""
*ja.PageSize Letter/8.5x11": ""
*ja.PageSize Legal/8.5x14": ""
*ja.PageSize FanFoldGermanLegal/8.5x13": ""
*ja.PageSize FX11x15/11x15": ""
*ja.PageSize Tabloid/11x17": ""
*ja.PageSize TabloidExtra/12x18": ""
*ja.PageSize FX8-KAI/八開(267x388mm): ""
*ja.PageSize FX16-KAI/十六開(267x194mm): ""
*ja.PageSize FX8-KAI-GCO/八開(270x390mm): ""
*ja.PageSize FX16-KAI-GCO/十六開(270x195mm): ""
*ja.PageSize FXA4Cover/表紙A4: ""
*ja.PageSize 9x11/9x11" (表紙レター): ""
*ja.PageSize EnvMonarch/封筒モナーク: ""
*ja.PageSize Env10/封筒#10: ""
*ja.PageSize EnvDL/封筒DL: ""
*ja.PageSize Custom/Custom: ""
*ja.Translation PageRegion/PageRegion: ""
*ja.PageRegion A3/A3: ""
*ja.PageRegion B4/B4: ""
*ja.PageRegion A4/A4: ""
*ja.PageRegion B5/B5: ""
*ja.PageRegion A5/A5: ""
*ja.PageRegion B6/B6: ""
*ja.PageRegion A6/A6: ""
*ja.PageRegion FXPostcard/はがき: ""
*ja.PageRegion DoublePostcardRotated/往復はがき 横: ""
*ja.PageRegion FX4x6/4x6": ""
*ja.PageRegion EnvChou3/封筒長形3号: ""
*ja.PageRegion EnvC4/封筒C4: ""
*ja.PageRegion EnvC5/封筒C5: ""
*ja.PageRegion SRA3/SRA3: ""
*ja.PageRegion FX5x7/写真2Lサイズ (5x7"): ""
*ja.PageRegion Statement/5.5x8.5": ""
*ja.PageRegion Executive/7.25x10.5": ""
*ja.PageRegion 8x10/8x10": ""
*ja.PageRegion FX846x124/215x315mm: ""
*ja.PageRegion Letter/8.5x11": ""
*ja.PageRegion Legal/8.5x14": ""
*ja.PageRegion FanFoldGermanLegal/8.5x13": ""
*ja.PageRegion FX11x15/11x15": ""
*ja.PageRegion Tabloid/11x17": ""
*ja.PageRegion TabloidExtra/12x18": ""
*ja.PageRegion FX8-KAI/八開(267x388mm): ""
*ja.PageRegion FX16-KAI/十六開(267x194mm): ""
*ja.PageRegion FX8-KAI-GCO/八開(270x390mm): ""
*ja.PageRegion FX16-KAI-GCO/十六開(270x195mm): ""
*ja.PageRegion FXA4Cover/表紙A4: ""
*ja.PageRegion 9x11/9x11" (表紙レター): ""
*ja.PageRegion EnvMonarch/封筒モナーク: ""
*ja.PageRegion Env10/封筒#10: ""
*ja.PageRegion EnvDL/封筒DL: ""
*ja.PageRegion Custom/Custom: ""
*ja.Translation InputSlot/用紙トレイ選択: ""
*ja.InputSlot MediaTypeAPS/自動選択(用紙種類/用紙色優先): ""
*ja.InputSlot 1stTray/トレイ1: ""
*ja.InputSlot 2ndTray/トレイ2: ""
*ja.InputSlot 3rdTray/トレイ3: ""
*ja.InputSlot 4thTray/トレイ4: ""
*ja.InputSlot 3rdTrayTTM/トレイ3(大容量): ""
*ja.InputSlot 4thTrayTTM/トレイ4(大容量): ""
*ja.InputSlot HCF1/トレイ6: ""
*ja.Translation ManualFeed/トレイ5(手差し): ""
*ja.ManualFeed True/Yes: ""
*ja.ManualFeed False/No: ""
*ja.Translation MediaType/用紙種類: ""
*ja.MediaType Default/指定しない: ""
*ja.MediaType FinePaper/上質紙: ""
*ja.MediaType Stationary/普通紙: ""
*ja.MediaType StationaryBack/普通紙うら面: ""
*ja.MediaType RecyclePaper/再生紙: ""
*ja.MediaType Transparency/OHPフィルム: ""
*ja.MediaType ThinPaper/うす紙(55～59g/m2): ""
*ja.MediaType LabelPaper/ラベル紙: ""
*ja.MediaType ThickPaper/厚紙1(106～169g/m2): ""
*ja.MediaType ThickPaperBack/厚紙1(106～169g/m2)うら面: ""
*ja.MediaType ThickPaperA/厚紙1[A](106～169g/m2): ""
*ja.MediaType ThickPaperABack/厚紙1[A](106～169g/m2)うら面: ""
*ja.MediaType ThickPaperB/厚紙1[B](106～169g/m2): ""
*ja.MediaType ThickPaperBBack/厚紙1[B](106～169g/m2)うら面: ""
*ja.MediaType ThickPaperC/厚紙1[C](106～169g/m2): ""
*ja.MediaType ThickPaperCBack/厚紙1[C](106～169g/m2)うら面: ""
*ja.MediaType ThickPaperS/厚紙1[S](106～169g/m2): ""
*ja.MediaType ThickPaperSBack/厚紙1[S](106～169g/m2)うら面: ""
*ja.MediaType ThickPaper2/厚紙2(170～256g/m2): ""
*ja.MediaType ThickPaper2Back/厚紙2(170～256g/m2)うら面: ""
*ja.MediaType ThickPaper2A/厚紙2[A](170～256g/m2): ""
*ja.MediaType ThickPaper2ABack/厚紙2[A](170～256g/m2)うら面: ""
*ja.MediaType ThickPaper2B/厚紙2[B](170～256g/m2): ""
*ja.MediaType ThickPaper2BBack/厚紙2[B](170～256g/m2)うら面: ""
*ja.MediaType ThickPaper2C/厚紙2[C](170～256g/m2): ""
*ja.MediaType ThickPaper2CBack/厚紙2[C](170～256g/m2)うら面: ""
*ja.MediaType ThickPaper2D/厚紙2[D](170～256g/m2): ""
*ja.MediaType ThickPaper2DBack/厚紙2[D](170～256g/m2)うら面: ""
*ja.MediaType ThickPaper2S/厚紙2[S](170～256g/m2): ""
*ja.MediaType ThickPaper2SBack/厚紙2[S](170～256g/m2)うら面: ""
*ja.MediaType ThickPaper3/厚紙3(257～280g/m2): ""
*ja.MediaType ThickPaper3Back/厚紙3(257～280g/m2)うら面: ""
*ja.MediaType CoatingPaper1/コート紙1(106～169g/m2): ""
*ja.MediaType CoatingPaper1Back/コート紙1(106～169g/m2)うら面: ""
*ja.MediaType CoatingPaper2/コート紙2(170～256g/m2): ""
*ja.MediaType CoatingPaper2Back/コート紙2(170～256g/m2)うら面: ""
*ja.MediaType PrepunchedPaper/穴あき紙: ""
*ja.MediaType LetterheadPaper/レターヘッド紙: ""
*ja.MediaType PrePrintedPaper/プレプリント紙: ""
*ja.MediaType Envelope/封筒: ""
*ja.MediaType OtherPaper/その他: ""
*ja.MediaType CustomSizedPaper1/ユーザー定義用紙1: ""
*ja.MediaType CustomSizedPaper2/ユーザー定義用紙2: ""
*ja.MediaType CustomSizedPaper3/ユーザー定義用紙3: ""
*ja.MediaType CustomSizedPaper4/ユーザー定義用紙4: ""
*ja.MediaType CustomSizedPaper5/ユーザー定義用紙5: ""
*ja.Translation FXMediaColor/用紙色: ""
*ja.FXMediaColor White/白: ""
*ja.FXMediaColor Blue/青: ""
*ja.FXMediaColor Yellow/黄色: ""
*ja.FXMediaColor Green/緑: ""
*ja.FXMediaColor Pink/ピンク: ""
*ja.FXMediaColor Clear/透明: ""
*ja.FXMediaColor Ivory/アイボリー: ""
*ja.FXMediaColor Gray/グレー: ""
*ja.FXMediaColor Buff/クリーム: ""
*ja.FXMediaColor Goldenrod/山吹色: ""
*ja.FXMediaColor Red/赤: ""
*ja.FXMediaColor Orange/オレンジ: ""
*ja.FXMediaColor Custom1/ユーザー色1: ""
*ja.FXMediaColor Custom2/ユーザー色2: ""
*ja.FXMediaColor Custom3/ユーザー色3: ""
*ja.FXMediaColor Custom4/ユーザー色4: ""
*ja.FXMediaColor Custom5/ユーザー色5: ""
*ja.FXMediaColor Other/その他: ""
*ja.FXMediaColor Any/自動: ""
*ja.Translation Duplex/両面: ""
*ja.Duplex None/しない: ""
*ja.Duplex DuplexNoTumble/長辺とじ: ""
*ja.Duplex DuplexTumble/短辺とじ: ""
*ja.Translation Collate/部単位で印刷: ""
*ja.Collate False/しない: ""
*ja.Collate True/する: ""
*ja.Translation OutputBin/排出先: ""
*ja.OutputBin Auto/自動選択: ""
*ja.OutputBin Center2/センタートレイ上段: ""
*ja.OutputBin SideTray/サイドトレイ(おもて面排出): ""
*ja.OutputBin FinisherTray/フィニッシャートレイ(大量排出): ""
*ja.OutputBin FinisherOutputTray/排出トレイ: ""
*ja.Translation FXStaple/ホチキス: ""
*ja.FXStaple None/しない: ""
*ja.FXStaple LeftDoublePort/左2ヵ所(たて用紙): ""
*ja.FXStaple LeftDoubleLand/左2ヵ所(よこ用紙): ""
*ja.FXStaple UpperLeftSinglePort/左上1ヵ所(たて用紙): ""
*ja.FXStaple UpperLeftSingleLand/左上1ヵ所(よこ用紙): ""
*ja.FXStaple TopDoublePort/上2ヵ所(たて用紙): ""
*ja.FXStaple TopDoubleLand/上2ヵ所(よこ用紙): ""
*ja.FXStaple UpperRightSinglePort/右上1ヵ所(たて用紙): ""
*ja.FXStaple UpperRightSingleLand/右上1ヵ所(よこ用紙): ""
*ja.FXStaple RightDoublePort/右2ヵ所(たて用紙): ""
*ja.FXStaple RightDoubleLand/右2ヵ所(よこ用紙): ""
*ja.FXStaple LowerRightSinglePort/右下1ヵ所(たて用紙): ""
*ja.FXStaple LowerRightSingleLand/右下1ヵ所(よこ用紙): ""
*ja.FXStaple BottomDoublePort/下2ヵ所(たて用紙): ""
*ja.FXStaple BottomDoubleLand/下2ヵ所(よこ用紙): ""
*ja.FXStaple LowerLeftSinglePort/左下1ヵ所(たて用紙): ""
*ja.FXStaple LowerLeftSingleLand/左下1ヵ所(よこ用紙): ""
*ja.FXStaple SaddleStaple/中とじ: ""
*ja.Translation FXPunch/パンチ: ""
*ja.FXPunch None/しない: ""
*ja.FXPunch LeftPort/左(たて用紙): ""
*ja.FXPunch LeftLand/左(よこ用紙): ""
*ja.FXPunch TopPort/上(たて用紙): ""
*ja.FXPunch TopLand/上(よこ用紙): ""
*ja.FXPunch RightPort/右(たて用紙): ""
*ja.FXPunch RightLand/右(よこ用紙): ""
*ja.FXPunch BottomPort/下(たて用紙): ""
*ja.FXPunch BottomLand/下(よこ用紙): ""
*ja.Translation FXNumPunchHoles/パンチ穴: ""
*ja.FXNumPunchHoles Auto/プリンターの設定を用いる: ""
*ja.FXNumPunchHoles 2Holes/2穴: ""
*ja.FXNumPunchHoles 3Holes/3穴: ""
*ja.FXNumPunchHoles 4Holes/4穴: ""
*ja.Translation FXFold/紙折り: ""
*ja.FXFold None/しない: ""
*ja.FXFold BiFold/二つ折り: ""
*ja.FXFold BiFoldMulti/二つ折り(複数枚): ""
*ja.Translation FXJog/オフセット排出: ""
*ja.FXJog None/しない: ""
*ja.FXJog EndOfSet/セットごとにずらす: ""
*ja.FXJog DeviceDeactivation/ジョブごとにずらす: ""
*ja.FXJog EndOfSetSpecifiedPage/ページ数を指定してずらす: ""
*ja.FXJog EndOfSetSpecifiedCopies/部数を指定してずらす: ""
*ja.Translation FXIntCoverSheet/おもて表紙: ""
*ja.FXIntCoverSheet None/付けない: ""
*ja.FXIntCoverSheet 1stTray/トレイ1: ""
*ja.FXIntCoverSheet 2ndTray/トレイ2: ""
*ja.FXIntCoverSheet 3rdTray/トレイ3: ""
*ja.FXIntCoverSheet 4thTray/トレイ4: ""
*ja.FXIntCoverSheet 3rdTrayTTM/トレイ3(大容量): ""
*ja.FXIntCoverSheet 4thTrayTTM/トレイ4(大容量): ""
*ja.FXIntCoverSheet MSI/トレイ5(手差し): ""
*ja.FXIntCoverSheet HCF1/トレイ6: ""
*ja.Translation FXIntBackCoverSheet/うら表紙: ""
*ja.FXIntBackCoverSheet None/付けない: ""
*ja.FXIntBackCoverSheet 1stTray/トレイ1: ""
*ja.FXIntBackCoverSheet 2ndTray/トレイ2: ""
*ja.FXIntBackCoverSheet 3rdTray/トレイ3: ""
*ja.FXIntBackCoverSheet 4thTray/トレイ4: ""
*ja.FXIntBackCoverSheet 3rdTrayTTM/トレイ3(大容量): ""
*ja.FXIntBackCoverSheet 4thTrayTTM/トレイ4(大容量): ""
*ja.FXIntBackCoverSheet MSI/トレイ5(手差し): ""
*ja.FXIntBackCoverSheet HCF1/トレイ6: ""
*ja.Translation FXIntSheet/合紙: ""
*ja.FXIntSheet None/付けない: ""
*ja.FXIntSheet 1stTray/トレイ1: ""
*ja.FXIntSheet 2ndTray/トレイ2: ""
*ja.FXIntSheet 3rdTray/トレイ3: ""
*ja.FXIntSheet 4thTray/トレイ4: ""
*ja.FXIntSheet 3rdTrayTTM/トレイ3(大容量): ""
*ja.FXIntSheet 4thTrayTTM/トレイ4(大容量): ""
*ja.FXIntSheet MSI/トレイ5(手差し): ""
*ja.FXIntSheet HCF1/トレイ6: ""
*ja.Translation FXIntSheetMediaType/表紙/合紙の用紙種類: ""
*ja.FXIntSheetMediaType Default/プリンターの設定を用いる: ""
*ja.FXIntSheetMediaType FinePaper/上質紙: ""
*ja.FXIntSheetMediaType Stationary/普通紙: ""
*ja.FXIntSheetMediaType StationaryBack/普通紙うら面: ""
*ja.FXIntSheetMediaType RecyclePaper/再生紙: ""
*ja.FXIntSheetMediaType Transparency/OHPフィルム: ""
*ja.FXIntSheetMediaType ThinPaper/うす紙(55～59g/m2): ""
*ja.FXIntSheetMediaType LabelPaper/ラベル紙: ""
*ja.FXIntSheetMediaType ThickPaper/厚紙1(106～169g/m2): ""
*ja.FXIntSheetMediaType ThickPaperBack/厚紙1(106～169g/m2)うら面: ""
*ja.FXIntSheetMediaType ThickPaper2/厚紙2(170～256g/m2): ""
*ja.FXIntSheetMediaType ThickPaper2Back/厚紙2(170～256g/m2)うら面: ""
*ja.FXIntSheetMediaType ThickPaper3/厚紙3(257～280g/m2): ""
*ja.FXIntSheetMediaType ThickPaper3Back/厚紙3(257～280g/m2)うら面: ""
*ja.FXIntSheetMediaType CoatingPaper1/コート紙1(106～169g/m2): ""
*ja.FXIntSheetMediaType CoatingPaper1Back/コート紙1(106～169g/m2)うら面: ""
*ja.FXIntSheetMediaType CoatingPaper2/コート紙2(170～256g/m2): ""
*ja.FXIntSheetMediaType CoatingPaper2Back/コート紙2(170～256g/m2)うら面: ""
*ja.FXIntSheetMediaType PrepunchedPaper/穴あき紙: ""
*ja.FXIntSheetMediaType LetterheadPaper/レターヘッド紙: ""
*ja.FXIntSheetMediaType PrePrintedPaper/プレプリント紙: ""
*ja.FXIntSheetMediaType Envelope/封筒: ""
*ja.FXIntSheetMediaType OtherPaper/その他: ""
*ja.FXIntSheetMediaType CustomSizedPaper1/ユーザー定義用紙1: ""
*ja.FXIntSheetMediaType CustomSizedPaper2/ユーザー定義用紙2: ""
*ja.FXIntSheetMediaType CustomSizedPaper3/ユーザー定義用紙3: ""
*ja.FXIntSheetMediaType CustomSizedPaper4/ユーザー定義用紙4: ""
*ja.FXIntSheetMediaType CustomSizedPaper5/ユーザー定義用紙5: ""
*ja.Translation FXUncollateSeparator/仕切り合紙: ""
*ja.FXUncollateSeparator None/付けない: ""
*ja.FXUncollateSeparator 1stTray/トレイ1: ""
*ja.FXUncollateSeparator 2ndTray/トレイ2: ""
*ja.FXUncollateSeparator 3rdTray/トレイ3: ""
*ja.FXUncollateSeparator 4thTray/トレイ4: ""
*ja.FXUncollateSeparator 3rdTrayTTM/トレイ3(大容量): ""
*ja.FXUncollateSeparator 4thTrayTTM/トレイ4(大容量): ""
*ja.FXUncollateSeparator MSI/トレイ5(手差し): ""
*ja.FXUncollateSeparator HCF1/トレイ6: ""
*ja.Translation FXSignature/製本: ""
*ja.FXSignature None/しない: ""
*ja.FXSignature LeftSig/左とじ/上とじ: ""
*ja.FXSignature RightSig/右とじ/下とじ: ""
*ja.FXSignature LeftSigCenterStaple/中とじホチキス(左とじ/上とじ): ""
*ja.FXSignature RightSigCenterStaple/中とじホチキス(右とじ/下とじ): ""
*ja.FXSignature LeftSigFold/二つ折り (左とじ/上とじ): ""
*ja.FXSignature RightSigFold/二つ折り (右とじ/下とじ): ""
*ja.Translation FXSigSize/製本の出力用紙サイズ: ""
*ja.FXSigSize None/プリンターの設定を用いる: ""
*ja.FXSigSize A3/A3: ""
*ja.FXSigSize A4/A4: ""
*ja.FXSigSize B4/B4: ""
*ja.FXSigSize LT/8.5x11": ""
*ja.FXSigSize DL/11x17": ""
*ja.FXSigSize SigTray1/トレイ1の用紙: ""
*ja.FXSigSize SigTray2/トレイ2の用紙: ""
*ja.FXSigSize SigTray3/トレイ3の用紙: ""
*ja.FXSigSize SigTray4/トレイ4の用紙: ""
*ja.Translation FXSigVol/製本の分冊: ""
*ja.FXSigVol None/しない: ""
*ja.FXSigVol 1Sheet/1枚ごと: ""
*ja.FXSigVol 2Sheets/2枚ごと: ""
*ja.FXSigVol 3Sheets/3枚ごと: ""
*ja.FXSigVol 4Sheets/4枚ごと: ""
*ja.FXSigVol 5Sheets/5枚ごと: ""
*ja.FXSigVol 6Sheets/6枚ごと: ""
*ja.FXSigVol 7Sheets/7枚ごと: ""
*ja.FXSigVol 8Sheets/8枚ごと: ""
*ja.FXSigVol 9Sheets/9枚ごと: ""
*ja.FXSigVol 10Sheets/10枚ごと: ""
*ja.FXSigVol 11Sheets/11枚ごと: ""
*ja.FXSigVol 12Sheets/12枚ごと: ""
*ja.FXSigVol 13Sheets/13枚ごと: ""
*ja.FXSigVol 14Sheets/14枚ごと: ""
*ja.FXSigVol 15Sheets/15枚ごと: ""
*ja.FXSigVol 16Sheets/16枚ごと: ""
*ja.FXSigVol 17Sheets/17枚ごと: ""
*ja.FXSigVol 18Sheets/18枚ごと: ""
*ja.FXSigVol 19Sheets/19枚ごと: ""
*ja.FXSigVol 20Sheets/20枚ごと: ""
*ja.FXSigVol 21Sheets/21枚ごと: ""
*ja.FXSigVol 22Sheets/22枚ごと: ""
*ja.FXSigVol 23Sheets/23枚ごと: ""
*ja.FXSigVol 24Sheets/24枚ごと: ""
*ja.FXSigVol 25Sheets/25枚ごと: ""
*ja.Translation FXSigDrawOutline/製本の枠線: ""
*ja.FXSigDrawOutline False/つけない: ""
*ja.FXSigDrawOutline True/つける: ""
*ja.Translation FXMixSizePrint/サイズ混在文書を印刷する: ""
*ja.FXMixSizePrint False/しない: ""
*ja.FXMixSizePrint True/する: ""
*ja.Translation FXCustomPageSizeCorrection/ユーザー定義用紙向き修正: ""
*ja.FXCustomPageSizeCorrection True/する: ""
*ja.FXCustomPageSizeCorrection False/しない: ""
*ja.Translation FXMSILeadingEdge/手差し用紙の給紙方向: ""
*ja.FXMSILeadingEdge LongEdge/たて置き優先: ""
*ja.FXMSILeadingEdge ShortEdge/よこ置き優先: ""
*ja.Translation FXSaveBlankSheet/白紙節約: ""
*ja.FXSaveBlankSheet False/しない: ""
*ja.FXSaveBlankSheet True/する: ""
*ja.Translation FXSubPaperSelection/用紙の置き換え: ""
*ja.FXSubPaperSelection Policy0/プリンターの設定を用いる: ""
*ja.FXSubPaperSelection Policy2/用紙補給を表示する: ""
*ja.FXSubPaperSelection Policy3/近いサイズを選択(縮小/等倍): ""
*ja.FXSubPaperSelection Policy5/近いサイズを選択(等倍): ""
*ja.FXSubPaperSelection Policy4/大きいサイズを選択(縮小/等倍): ""
*ja.FXSubPaperSelection Policy6/大きいサイズを選択(等倍): ""
*ja.FXSubPaperSelection SMH/手差しトレイから給紙する: ""
*ja.Translation FXColorMode/カラーモード: ""
*ja.FXColorMode Color/カラー: ""
*ja.FXColorMode Black/白黒: ""
*ja.Translation FXGrayBalance/グレー保証: ""
*ja.FXGrayBalance True/する: ""
*ja.FXGrayBalance False/しない: ""
*ja.Translation FXInvalidateColorProfile/カラープロファイルの無効化: ""
*ja.FXInvalidateColorProfile False/しない: ""
*ja.FXInvalidateColorProfile True/する: ""
*ja.Translation Smoothing/Image Enhancement: ""
*ja.Smoothing True/する: ""
*ja.Smoothing False/しない: ""
*ja.Translation FXTonerSaver/トナー節約: ""
*ja.FXTonerSaver False/しない: ""
*ja.FXTonerSaver True/する: ""
*ja.Translation FXTransparencyGroup/OHP合紙: ""
*ja.Translation FXSlipSheet/OHP合紙用トレイ選択: ""
*ja.FXSlipSheet OFF/しない: ""
*ja.FXSlipSheet AutoTray/自動: ""
*ja.FXSlipSheet 1stTray/トレイ1: ""
*ja.FXSlipSheet 2ndTray/トレイ2: ""
*ja.FXSlipSheet 3rdTray/トレイ3: ""
*ja.FXSlipSheet 4thTray/トレイ4: ""
*ja.FXSlipSheet 3rdTrayTTM/トレイ3(大容量): ""
*ja.FXSlipSheet 4thTrayTTM/トレイ4(大容量): ""
*ja.FXSlipSheet MSI/トレイ5(手差し): ""
*ja.FXSlipSheet HCF1/トレイ6: ""
*ja.Translation FXSlipSheetPrint/OHP合紙のプリント: ""
*ja.FXSlipSheetPrint Off/しない(白紙挿入): ""
*ja.FXSlipSheetPrint On/する: ""
*ja.Translation FXSlipSheetMediaType/OHP合紙の用紙種類: ""
*ja.FXSlipSheetMediaType Default/プリンターの設定を用いる: ""
*ja.FXSlipSheetMediaType FinePaper/上質紙: ""
*ja.FXSlipSheetMediaType Stationary/普通紙: ""
*ja.FXSlipSheetMediaType StationaryBack/普通紙うら面: ""
*ja.FXSlipSheetMediaType RecyclePaper/再生紙: ""
*ja.FXSlipSheetMediaType ThinPaper/うす紙(55～59g/m2): ""
*ja.FXSlipSheetMediaType LabelPaper/ラベル紙: ""
*ja.FXSlipSheetMediaType ThickPaper/厚紙1(106～169g/m2): ""
*ja.FXSlipSheetMediaType ThickPaperBack/厚紙1(106～169g/m2)うら面: ""
*ja.FXSlipSheetMediaType ThickPaper2/厚紙2(170～256g/m2): ""
*ja.FXSlipSheetMediaType ThickPaper2Back/厚紙2(170～256g/m2)うら面: ""
*ja.FXSlipSheetMediaType ThickPaper3/厚紙3(257～280g/m2): ""
*ja.FXSlipSheetMediaType ThickPaper3Back/厚紙3(257～280g/m2)うら面: ""
*ja.FXSlipSheetMediaType CoatingPaper1/コート紙1(106～169g/m2): ""
*ja.FXSlipSheetMediaType CoatingPaper1Back/コート紙1(106～169g/m2)うら面: ""
*ja.FXSlipSheetMediaType CoatingPaper2/コート紙2(170～256g/m2): ""
*ja.FXSlipSheetMediaType CoatingPaper2Back/コート紙2(170～256g/m2)うら面: ""
*ja.FXSlipSheetMediaType PrepunchedPaper/穴あき紙: ""
*ja.FXSlipSheetMediaType LetterheadPaper/レターヘッド紙: ""
*ja.FXSlipSheetMediaType PrePrintedPaper/プレプリント紙: ""
*ja.FXSlipSheetMediaType Envelope/封筒: ""
*ja.FXSlipSheetMediaType OtherPaper/その他: ""
*ja.FXSlipSheetMediaType CustomSizedPaper1/ユーザー定義用紙1: ""
*ja.FXSlipSheetMediaType CustomSizedPaper2/ユーザー定義用紙2: ""
*ja.FXSlipSheetMediaType CustomSizedPaper3/ユーザー定義用紙3: ""
*ja.FXSlipSheetMediaType CustomSizedPaper4/ユーザー定義用紙4: ""
*ja.FXSlipSheetMediaType CustomSizedPaper5/ユーザー定義用紙5: ""
*ja.Translation FXGraphicsGroup/1.グラフィックス: ""
*ja.Translation FXOutputMode/印刷モード: ""
*ja.FXOutputMode HighSpeed/高速: ""
*ja.FXOutputMode HighQuality/高画質: ""
*ja.FXOutputMode HighResolution/高精細: ""
*ja.Translation FXBrightness/明るさ調整: ""
*ja.FXBrightness Bright5/明るく(+5): ""
*ja.FXBrightness Bright4/明るく(+4): ""
*ja.FXBrightness Bright3/明るく(+3): ""
*ja.FXBrightness Bright2/明るく(+2): ""
*ja.FXBrightness Bright1/明るく(+1): ""
*ja.FXBrightness Normal/ふつう: ""
*ja.FXBrightness Dark1/暗く(-1): ""
*ja.FXBrightness Dark2/暗く(-2): ""
*ja.FXBrightness Dark3/暗く(-3): ""
*ja.FXBrightness Dark4/暗く(-4): ""
*ja.FXBrightness Dark5/暗く(-5): ""
*ja.Translation FXRGBImageType/おすすめ画質タイプ: ""
*ja.FXRGBImageType Standard/標準: ""
*ja.FXRGBImageType Photo/写真: ""
*ja.FXRGBImageType Presentation/プレゼンテーション: ""
*ja.FXRGBImageType Web/Webページ: ""
*ja.FXRGBImageType CAD/CAD: ""
*ja.FXRGBImageType POP/POP: ""
*ja.FXRGBImageType Off/しない: ""
*ja.Translation FXEngineScreen/スクリーン: ""
*ja.FXEngineScreen Auto/自動: ""
*ja.FXEngineScreen Fineness/精細度優先: ""
*ja.FXEngineScreen Standard/標準: ""
*ja.FXEngineScreen Gradation/階調優先: ""
*ja.Translation FXColorBalanceAdjustment/カラーバランスを調整する: ""
*ja.FXColorBalanceAdjustment False/しない: ""
*ja.FXColorBalanceAdjustment True/する: ""
*ja.Translation FXBlackOverprint/ブラックオーバープリント: ""
*ja.FXBlackOverprint False/しない: ""
*ja.FXBlackOverprint True/する: ""
*ja.Translation FXColorAdjustmentGroup1/2.カラー調整1: ""
*ja.Translation FXRGBCorrection/RGB色補正: ""
*ja.FXRGBCorrection None/しない: ""
*ja.FXRGBCorrection Perceptual/階調優先: ""
*ja.FXRGBCorrection Saturation/彩度優先: ""
*ja.FXRGBCorrection RelativeC/相対カラーメトリック: ""
*ja.FXRGBCorrection AbsoluteC/絶対カラーメトリック: ""
*ja.Translation FXRGBInputProfile/RGB入力プロファイル: ""
*ja.FXRGBInputProfile SRGB/sRGB: ""
*ja.FXRGBInputProfile AdobeRGB/Adobe RGB(1998): ""
*ja.Translation FXRGBGammaCorrection/RGBガンマ補正: ""
*ja.FXRGBGammaCorrection Lightest/1.0: ""
*ja.FXRGBGammaCorrection Light/1.4: ""
*ja.FXRGBGammaCorrection Standard/1.8: ""
*ja.FXRGBGammaCorrection Dark/2.2: ""
*ja.FXRGBGammaCorrection Darkest/2.6: ""
*ja.Translation FXColorTemperature/RGB色温度: ""
*ja.FXColorTemperature TemperatureD50/5000K(D50): ""
*ja.FXColorTemperature TemperatureD65/6500K(D65): ""
*ja.FXColorTemperature Temperature9300K/9300K: ""
*ja.Translation FXColorAdjustmentGroup2/3.カラー調整2: ""
*ja.Translation FXCMYKCorrectionSTD/CMYK色補正: ""
*ja.FXCMYKCorrectionSTD Auto/自動: ""
*ja.FXCMYKCorrectionSTD JapanColor2001/JapanColor2001: ""
*ja.FXCMYKCorrectionSTD SWOP/SWOP: ""
*ja.FXCMYKCorrectionSTD EuroScale/Euro Sheet-fed: ""
*ja.FXCMYKCorrectionSTD None/しない: ""
*ja.Translation FXCMYKCorrectionTarget/ターゲット用紙: ""
*ja.FXCMYKCorrectionTarget Auto/自動: ""
*ja.FXCMYKCorrectionTarget Type1/アート紙: ""
*ja.FXCMYKCorrectionTarget Type3/コート紙: ""
*ja.FXCMYKCorrectionTarget Type2/マット紙: ""
*ja.Translation FXColorBalanceGroupC/4.カラーバランスC: ""
*ja.Translation FXColorDensityCyanLow/低濃度(C): ""
*ja.FXColorDensityCyanLow +3/こく(+3): ""
*ja.FXColorDensityCyanLow +2/こく(+2): ""
*ja.FXColorDensityCyanLow +1/こく(+1): ""
*ja.FXColorDensityCyanLow 0/ふつう: ""
*ja.FXColorDensityCyanLow -1/うすく(-1): ""
*ja.FXColorDensityCyanLow -2/うすく(-2): ""
*ja.FXColorDensityCyanLow -3/うすく(-3): ""
*ja.Translation FXColorDensityCyanMid/中濃度(C): ""
*ja.FXColorDensityCyanMid +3/こく(+3): ""
*ja.FXColorDensityCyanMid +2/こく(+2): ""
*ja.FXColorDensityCyanMid +1/こく(+1): ""
*ja.FXColorDensityCyanMid 0/ふつう: ""
*ja.FXColorDensityCyanMid -1/うすく(-1): ""
*ja.FXColorDensityCyanMid -2/うすく(-2): ""
*ja.FXColorDensityCyanMid -3/うすく(-3): ""
*ja.Translation FXColorDensityCyanHigh/高濃度(C): ""
*ja.FXColorDensityCyanHigh +3/こく(+3): ""
*ja.FXColorDensityCyanHigh +2/こく(+2): ""
*ja.FXColorDensityCyanHigh +1/こく(+1): ""
*ja.FXColorDensityCyanHigh 0/ふつう: ""
*ja.FXColorDensityCyanHigh -1/うすく(-1): ""
*ja.FXColorDensityCyanHigh -2/うすく(-2): ""
*ja.FXColorDensityCyanHigh -3/うすく(-3): ""
*ja.Translation FXColorBalanceGroupM/5.カラーバランスM: ""
*ja.Translation FXColorDensityMagentaLow/低濃度(M): ""
*ja.FXColorDensityMagentaLow +3/こく(+3): ""
*ja.FXColorDensityMagentaLow +2/こく(+2): ""
*ja.FXColorDensityMagentaLow +1/こく(+1): ""
*ja.FXColorDensityMagentaLow 0/ふつう: ""
*ja.FXColorDensityMagentaLow -1/うすく(-1): ""
*ja.FXColorDensityMagentaLow -2/うすく(-2): ""
*ja.FXColorDensityMagentaLow -3/うすく(-3): ""
*ja.Translation FXColorDensityMagentaMid/中濃度(M): ""
*ja.FXColorDensityMagentaMid +3/こく(+3): ""
*ja.FXColorDensityMagentaMid +2/こく(+2): ""
*ja.FXColorDensityMagentaMid +1/こく(+1): ""
*ja.FXColorDensityMagentaMid 0/ふつう: ""
*ja.FXColorDensityMagentaMid -1/うすく(-1): ""
*ja.FXColorDensityMagentaMid -2/うすく(-2): ""
*ja.FXColorDensityMagentaMid -3/うすく(-3): ""
*ja.Translation FXColorDensityMagentaHigh/高濃度(M): ""
*ja.FXColorDensityMagentaHigh +3/こく(+3): ""
*ja.FXColorDensityMagentaHigh +2/こく(+2): ""
*ja.FXColorDensityMagentaHigh +1/こく(+1): ""
*ja.FXColorDensityMagentaHigh 0/ふつう: ""
*ja.FXColorDensityMagentaHigh -1/うすく(-1): ""
*ja.FXColorDensityMagentaHigh -2/うすく(-2): ""
*ja.FXColorDensityMagentaHigh -3/うすく(-3): ""
*ja.Translation FXColorBalanceGroupY/6.カラーバランスY: ""
*ja.Translation FXColorDensityYellowLow/低濃度(Y): ""
*ja.FXColorDensityYellowLow +3/こく(+3): ""
*ja.FXColorDensityYellowLow +2/こく(+2): ""
*ja.FXColorDensityYellowLow +1/こく(+1): ""
*ja.FXColorDensityYellowLow 0/ふつう: ""
*ja.FXColorDensityYellowLow -1/うすく(-1): ""
*ja.FXColorDensityYellowLow -2/うすく(-2): ""
*ja.FXColorDensityYellowLow -3/うすく(-3): ""
*ja.Translation FXColorDensityYellowMid/中濃度(Y): ""
*ja.FXColorDensityYellowMid +3/こく(+3): ""
*ja.FXColorDensityYellowMid +2/こく(+2): ""
*ja.FXColorDensityYellowMid +1/こく(+1): ""
*ja.FXColorDensityYellowMid 0/ふつう: ""
*ja.FXColorDensityYellowMid -1/うすく(-1): ""
*ja.FXColorDensityYellowMid -2/うすく(-2): ""
*ja.FXColorDensityYellowMid -3/うすく(-3): ""
*ja.Translation FXColorDensityYellowHigh/高濃度(Y): ""
*ja.FXColorDensityYellowHigh +3/こく(+3): ""
*ja.FXColorDensityYellowHigh +2/こく(+2): ""
*ja.FXColorDensityYellowHigh +1/こく(+1): ""
*ja.FXColorDensityYellowHigh 0/ふつう: ""
*ja.FXColorDensityYellowHigh -1/うすく(-1): ""
*ja.FXColorDensityYellowHigh -2/うすく(-2): ""
*ja.FXColorDensityYellowHigh -3/うすく(-3): ""
*ja.Translation FXColorBalanceGroupK/7.カラーバランスK: ""
*ja.Translation FXColorDensityBlackLow/低濃度(K): ""
*ja.FXColorDensityBlackLow +3/こく(+3): ""
*ja.FXColorDensityBlackLow +2/こく(+2): ""
*ja.FXColorDensityBlackLow +1/こく(+1): ""
*ja.FXColorDensityBlackLow 0/ふつう: ""
*ja.FXColorDensityBlackLow -1/うすく(-1): ""
*ja.FXColorDensityBlackLow -2/うすく(-2): ""
*ja.FXColorDensityBlackLow -3/うすく(-3): ""
*ja.Translation FXColorDensityBlackMid/中濃度(K): ""
*ja.FXColorDensityBlackMid +3/こく(+3): ""
*ja.FXColorDensityBlackMid +2/こく(+2): ""
*ja.FXColorDensityBlackMid +1/こく(+1): ""
*ja.FXColorDensityBlackMid 0/ふつう: ""
*ja.FXColorDensityBlackMid -1/うすく(-1): ""
*ja.FXColorDensityBlackMid -2/うすく(-2): ""
*ja.FXColorDensityBlackMid -3/うすく(-3): ""
*ja.Translation FXColorDensityBlackHigh/高濃度(K): ""
*ja.FXColorDensityBlackHigh +3/こく(+3): ""
*ja.FXColorDensityBlackHigh +2/こく(+2): ""
*ja.FXColorDensityBlackHigh +1/こく(+1): ""
*ja.FXColorDensityBlackHigh 0/ふつう: ""
*ja.FXColorDensityBlackHigh -1/うすく(-1): ""
*ja.FXColorDensityBlackHigh -2/うすく(-2): ""
*ja.FXColorDensityBlackHigh -3/うすく(-3): ""
*cupsLanguages: "ja"

*%APLANNOTATE START
*%XML: <?xml version="1.0" encoding="UTF-8"?>
*%XML: <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
*%XML: <plist version="1.0">
*%XML: <dict>
*%XML: 	<key>OriginalPPD</key>
*%XML: 	<string>/var/folders/9l/fv26cv_93ndfdlsxb_f2r0fw0000gn/T//00d764f47acaf</string>
*%XML: </dict>
*%XML: </plist>
*%APLANNOTATE END
